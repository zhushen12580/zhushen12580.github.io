<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>面试反馈</title>
      <link href="/2023/03/09/%E9%9D%A2%E8%AF%95%E5%8F%8D%E9%A6%88/"/>
      <url>/2023/03/09/%E9%9D%A2%E8%AF%95%E5%8F%8D%E9%A6%88/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="2cc42c43f43d620f2d660bfd39fe618c9abb24e7e4e38226d1a609123c490de7">772b89a4216ce3d6801530e6286244cb6f17214ed1ba29bae9b4a4ddbcb30db0bfad188cde8f3014af2e89bdbede480c0c22cf27cc7b62ee5df34c91206ac6c13599f43a26a469ad8468e2bccc15cf1410a3fb9d127891ad1e1fc5e3500cb317b006743c4df7ba0135232299c0c77d5693b60b0cfdc96b5bed782b62cf743729b98e016bf98e244bd3d5fce335f1666db3d44a658e90716b8beddc7c67e7a3a58243bf1bf1a43c7b69250f41f2dbf9791965ce13b353014d106f21b7932ef4df273e361febb7dc9996d63820993f1733fed786f22d2ffec27125046841295cbbaeca48cc290d64f0766a678ed76b8d395e5db87352344ca6da4076ecb46f3f23b5416a50b2ee0240701f90b2538a6d0eae7608bde8771cdcf1459579950d5c08c65bd0d02aed2dcf1bfa09159abe2018727570983d9630cd74c0f7a4bb3bce6f</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-blink">      <input class="hbe hbe-input-field hbe-input-field-blink" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-blink" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-blink" data-content="您好, 这里需要密码.">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 求职 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>口琴学习笔记</title>
      <link href="/2023/03/06/%E5%8F%A3%E7%90%B4%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/03/06/%E5%8F%A3%E7%90%B4%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>学口琴，多个寄托情感的媒介  </p></blockquote><p>写此文时已跟老师学了《玛丽有只小羊羔》</p><div class="tabs" id="《玛丽有只小羊羔》"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#《玛丽有只小羊羔》-1">简谱</button></li><li class="tab"><button type="button" data-href="#《玛丽有只小羊羔》-2">成果🎶</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="《玛丽有只小羊羔》-1"><p><img src="https://s1.ax1x.com/2023/03/06/ppZinGF.jpg" alt="玛丽有只小羊羔"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="《玛丽有只小羊羔》-2"><div class="audio"><audio controls preload><source src='https://gitee.com/zhushen12580/blog-resources/raw/37da5cb2f40ea3a264676cfe63e76a84ccd28be5/%E7%8E%9B%E4%B8%BD%E6%9C%89%E5%8F%AA%E5%B0%8F%E7%BE%8A%E7%BE%94.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 口琴 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>国际站细化类目市场需求时序预测</title>
      <link href="/2023/03/03/%E5%9B%BD%E9%99%85%E7%AB%99%E7%B1%BB%E7%9B%AE%E8%B6%8B%E5%8A%BF%E6%97%B6%E5%BA%8F%E9%A2%84%E6%B5%8B/"/>
      <url>/2023/03/03/%E5%9B%BD%E9%99%85%E7%AB%99%E7%B1%BB%E7%9B%AE%E8%B6%8B%E5%8A%BF%E6%97%B6%E5%BA%8F%E9%A2%84%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<blockquote><p>注：数据来源阿里巴巴国际站后台市场参谋，本次实战项目以2021年1月至2023年2月颗粒度为月的母婴、家具、宠物大类目下的所有四级类目的买家规模指数、供需比、转化率指标数据。  </p></blockquote><p>大纲：<br>1.市场需求预测理论<br>2.时序预测算法模型介绍及评估指标介绍<br>3.不同算法模型python实战&amp;autoTS库实战</p>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数分业务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>powerBI基础</title>
      <link href="/2023/03/02/powerBI%E5%9F%BA%E7%A1%80%E7%AF%87/"/>
      <url>/2023/03/02/powerBI%E5%9F%BA%E7%A1%80%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<h3 id="运算符与新建列"><a href="#运算符与新建列" class="headerlink" title="运算符与新建列"></a>运算符与新建列</h3><p><strong>运算符</strong>  </p><p><img src="https://s1.ax1x.com/2023/03/02/ppFE72d.png" alt="code"></p><blockquote><p>文本加数值 = [字符]+[数值] # “520” + 1314 = 1834<br>文本连接数值 = [字符] &amp; [数值] # “520” &amp; 1314 = 5201314<br>数值连接数值 = [数值] &amp; [数值1] # 1314 &amp; 521 = 1314521  </p></blockquote><p><strong>新建列</strong>  </p><p>新建列的时候，当另一个需要计算的列来自其他表的时候，一定要指明表名是什么<br><img src="https://s1.ax1x.com/2023/03/02/ppFVgJg.png" alt="code"></p><h3 id="建模与关系函数"><a href="#建模与关系函数" class="headerlink" title="建模与关系函数"></a>建模与关系函数</h3><p>多端可以向一端索取，一端可以控制传递方向相同的多端数据<br><img src="https://s1.ax1x.com/2023/03/02/ppFZQfg.png" alt="code"></p><p><strong>Lookupvalue函数</strong><br>Lookupvalue函数：就是Vlookup<br>语法：Lookupvalue（把哪张表的哪个列拿过来，找那张表上的谁？，找自己表里的谁？）<br>```shell<br>单价 = LOOKUPVALUE(‘商品表’[进价],’商品表’[品名],’销售表’[商品名称])<br>```<br><img src="https://s1.ax1x.com/2023/03/02/ppFejVx.png" alt="code">  </p><p><strong>Related函数与Relatedtable函数</strong><br>Related函数：（多端找一端）（事实表找维度表）（数据表找基础表）<br>Relatedtable函数：（一端找多端）（维度表找事实表）（基础表找数据表）<br><img src="https://s1.ax1x.com/2023/03/02/ppFmJoV.png" alt="code">  </p><p><strong>多表建模关系</strong><br><img src="https://s1.ax1x.com/2023/03/02/ppFmUWF.png" alt="code">  </p><h3 id="度量值、Calculate引擎、Calculatetable筛选表"><a href="#度量值、Calculate引擎、Calculatetable筛选表" class="headerlink" title="度量值、Calculate引擎、Calculatetable筛选表"></a>度量值、Calculate引擎、Calculatetable筛选表</h3>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数分技能 </tag>
            
            <tag> powerBI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>powerBI案例操作技巧</title>
      <link href="/2023/03/02/powerBI%E6%A1%88%E4%BE%8B%E7%AF%87/"/>
      <url>/2023/03/02/powerBI%E6%A1%88%E4%BE%8B%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<h2 id="导入并处理数据"><a href="#导入并处理数据" class="headerlink" title="导入并处理数据"></a>导入并处理数据</h2><h3 id="处理文件夹中的所有工作簿"><a href="#处理文件夹中的所有工作簿" class="headerlink" title="处理文件夹中的所有工作簿"></a>处理文件夹中的所有工作簿</h3><div class="tabs" id="处理文件夹中的所有工作簿"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#处理文件夹中的所有工作簿-1">步骤</button></li><li class="tab"><button type="button" data-href="#处理文件夹中的所有工作簿-2">代码</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="处理文件夹中的所有工作簿-1"><p>获取数据-&gt;文件夹-&gt;填写路径-&gt;添加列—&gt;自定义列-&gt;写入以下代码—&gt;展开自定义列-&gt;筛选Kind列取Sheet值-&gt;展开data列-&gt;删除不需要的列-&gt;进行类型转换-&gt;关闭并应用</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="处理文件夹中的所有工作簿-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Excel.Workbook([Content],true)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="新建列和新建度量值的区别"><a href="#新建列和新建度量值的区别" class="headerlink" title="新建列和新建度量值的区别"></a>新建列和新建度量值的区别</h3><p><img src="https://s1.ax1x.com/2023/03/02/ppF4mAe.png" alt="新建列和新建度量值的区别"></p><h2 id="可视化技巧"><a href="#可视化技巧" class="headerlink" title="可视化技巧"></a>可视化技巧</h2><h3 id="依据条件设置颜色"><a href="#依据条件设置颜色" class="headerlink" title="依据条件设置颜色"></a>依据条件设置颜色</h3><div class="tabs" id="依据条件设置颜色"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#依据条件设置颜色-1">步骤</button></li><li class="tab"><button type="button" data-href="#依据条件设置颜色-2">示例</button></li><li class="tab"><button type="button" data-href="#依据条件设置颜色-3">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="依据条件设置颜色-1"><p>新建度量值-&gt;设置视觉对象格式-&gt;条形-&gt;颜色-&gt;条件格式-&gt;格式样式选字段值</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="依据条件设置颜色-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">M.业绩达成颜色 = IF([M.业绩达成率]&gt;=1,&quot;DarkCyan&quot;,&quot;Tomato&quot;)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="依据条件设置颜色-3"><p><img src="https://s1.ax1x.com/2023/03/05/ppEI9D1.png" alt="效果"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="取消图表无效联动"><a href="#取消图表无效联动" class="headerlink" title="取消图表无效联动"></a>取消图表无效联动</h3><div class="tabs" id="取消图表无效联动"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#取消图表无效联动-1">步骤</button></li><li class="tab"><button type="button" data-href="#取消图表无效联动-2">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="取消图表无效联动-1"><p>点击任意图表-&gt;格式-&gt;编辑交互-&gt;到不让联动的图表-&gt;点击禁止标签</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="取消图表无效联动-2"><p><img src="https://s1.ax1x.com/2023/03/05/ppE77zF.png" alt="效果"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="切片器-amp-筛选器控制所有页面"><a href="#切片器-amp-筛选器控制所有页面" class="headerlink" title="切片器&amp;筛选器控制所有页面"></a>切片器&amp;筛选器控制所有页面</h3><div class="tabs" id="切片器控制所有页面"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#切片器控制所有页面-1">切片器步骤</button></li><li class="tab"><button type="button" data-href="#切片器控制所有页面-2">筛选器步骤</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="切片器控制所有页面-1"><p>点击任意切片器-&gt;视图-&gt;同步切片器</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="切片器控制所有页面-2"><p><img src="https://s1.ax1x.com/2023/03/05/ppEHO1S.png" alt="筛选器步骤"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数分技能 </tag>
            
            <tag> powerBI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《市场研究实务与方法》笔记</title>
      <link href="/2023/03/01/%E3%80%8A%E5%B8%82%E5%9C%BA%E7%A0%94%E7%A9%B6%E5%AE%9E%E5%8A%A1%E4%B8%8E%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/03/01/%E3%80%8A%E5%B8%82%E5%9C%BA%E7%A0%94%E7%A9%B6%E5%AE%9E%E5%8A%A1%E4%B8%8E%E6%96%B9%E6%B3%95%E3%80%8B%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="导论"><a href="#导论" class="headerlink" title="导论"></a>导论</h1><h2 id="市场营销的基本知识"><a href="#市场营销的基本知识" class="headerlink" title="市场营销的基本知识"></a>市场营销的基本知识</h2><h3 id="什么是市场"><a href="#什么是市场" class="headerlink" title="什么是市场"></a>什么是市场</h3><blockquote><p>市场是指对某些产品发生兴趣或可能有兴趣的所有买者和卖者  </p></blockquote><p>市场组成元素：消费者、购买力、购买意向</p><h3 id="市场营销的定义"><a href="#市场营销的定义" class="headerlink" title="市场营销的定义"></a>市场营销的定义</h3><blockquote><p>市场营销是指指导生产以及联结生产和消费的一系列经济活动。  </p></blockquote><p>市场营销在生产前：分析市场机会、选择目标市场、制订产品计划等。<br>市场营销在生产后：定价、选择最佳分销渠道、做广告、信息反馈等。</p><h3 id="市场营销观念"><a href="#市场营销观念" class="headerlink" title="市场营销观念"></a>市场营销观念</h3><blockquote><p>“市场营销观念”是一种以整体的市场营销活动做后援的顾客导向，其目的在于使顾客满足以达到企业的目标。  </p></blockquote><p>市场营销观念三要素：<br><strong>1.顾客导向</strong><br>市场营销观念认为了解顾客的需要、欲望和行为是一切市场营销活动的焦点，全心满足顾客，甚至有时“刺激”顾客的需要。  </p><p><strong>2.整体的市场营销活动</strong>  </p><blockquote><p>所有的市场营销活动，诸如人员推销、广告、产品开发、定价、分销渠道等等，均应配合协调，紧密结合，以扩大市场营销活动的总效果。    </p></blockquote><p><strong>3.注重利润</strong>  </p><blockquote><p>市场营销的目的在于为企业创造利润，它所重视的是利润，而不是销售量。  </p></blockquote><p>传统企业生存策略：先发展产品或服务，然后先“向前发展”将产品推销到市场。</p><p>市场营销观念下企业生产策略：先根据市场的情况拟订各种计划和策略，然后“向后倒退”来发展即可满足市场需要又有利润可图的产品或服务。  </p><p>一种企业哲学的转变：不在于生产某一种特定的产品或服务，而在于满足消费者的某种需要。</p><h3 id="市场营销与销售的区别"><a href="#市场营销与销售的区别" class="headerlink" title="市场营销与销售的区别"></a>市场营销与销售的区别</h3><p><img src="https://s1.ax1x.com/2023/03/01/ppPh3ee.png" alt="code"></p><h3 id="什么是市场营销管理"><a href="#什么是市场营销管理" class="headerlink" title="什么是市场营销管理"></a>什么是市场营销管理</h3><blockquote><p>所谓市场营销管理就是研究市场（顾客）的需要，运用企业的资源，比竞争对手更快捷更有效地满足这些需要，从而达到企业目标的一切活动。  </p></blockquote><p>市场营销观念认为<code>了解顾客需要</code>是一切市场营销活动的出发点。不过在研究市场需求过程中，切忌表面性、片面性、主观性。  </p><blockquote><p>值得借鉴的例子：<br>改革开放前我国企业都是根据国家下达的计划先将产品制造出来，然后才考虑如何推销。改革开放后我国实行市场经济，企业开始了解顾客的需要，然后再去生产产品。然而他们了解顾客需要往往不是基于科学的方法。<br>有的根据销售人员或维修部门反馈回来的意见，有的按照自己主观判断，有的根据自己过去工作积累下来的经验作决策，有的看其他企业成功的经验，有的根据第一把手对某件事的灵机一动就作决策。<br>这些企业也有成功的，不过比起用科学的市场研究方法去取得顾客需要方面的信息后做的决策，其失败的可能性要大很多。<br><img src="https://s1.ax1x.com/2023/03/01/ppPhOl6.png" alt="code"><br>企业一旦了解到消费者的某种需要后，就要比竞争对手更快捷更有效地生产出产品供应市场，这是十分重要的。（时机很重要~）</p></blockquote><h2 id="市场研究在营销管理中的角色"><a href="#市场研究在营销管理中的角色" class="headerlink" title="市场研究在营销管理中的角色"></a>市场研究在营销管理中的角色</h2><h3 id="市场研究的定义"><a href="#市场研究的定义" class="headerlink" title="市场研究的定义"></a>市场研究的定义</h3><blockquote><p>权威定义是：市场研究是将消费者、顾客及公众与厂商通过信息而联系起来的桥梁。  </p></blockquote><p>简单来说，运用科学方法，有系统地去收集和分析有关营销问题的信息，帮助企业解决营销管理决策的问题。</p><h3 id="市场研究的分类"><a href="#市场研究的分类" class="headerlink" title="市场研究的分类"></a>市场研究的分类</h3><p>市场研究分为连续性研究和专项研究两类。  </p><p>连续性研究：对某一营销管理问题定期开展连续性的数据收集并加以分析。如：电视收视率调查、消费者跟踪研究、广告跟踪研究等。  </p><p>专项研究：解决某一具体营销管理问题而委托专业市场研究公司进行的研究项目。它分为定量研究和定性研究两种。  </p><p><img src="https://s1.ax1x.com/2023/03/01/ppi9AgK.png" alt="code"><br><img src="https://s1.ax1x.com/2023/03/01/ppi9k36.png" alt="code"></p><h3 id="本书采用的市场营销框架"><a href="#本书采用的市场营销框架" class="headerlink" title="本书采用的市场营销框架"></a>本书采用的市场营销框架</h3><blockquote><p>一个新产品开发出来到上市成功，必须植根于对消费者需要的深切洞察。  </p></blockquote><p><img src="https://s1.ax1x.com/2023/03/01/ppiPIBD.png" alt="code"><br><img src="https://s1.ax1x.com/2023/03/01/ppiPoHe.png" alt="code">  </p><h1 id="使用习惯和态度研究"><a href="#使用习惯和态度研究" class="headerlink" title="使用习惯和态度研究"></a>使用习惯和态度研究</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><h3 id="何谓使用习惯和态度研究"><a href="#何谓使用习惯和态度研究" class="headerlink" title="何谓使用习惯和态度研究"></a>何谓使用习惯和态度研究</h3><blockquote><p>消费习惯是人们对于某类商品某种商品品牌长期维持的一种消费需要，它是个人的一种稳定性消费行为，是人们在长期的生活中慢慢积累而成的，反过来它又对人们的购买行为有着重要的影响。  </p></blockquote><p>U&amp;A研究，即对消费者消费习惯和态度的研究，主要用于了解消费者产品使用的现状（习惯/态度）和潜在需求。  </p><h3 id="使用习惯和态度研究提供的信息"><a href="#使用习惯和态度研究提供的信息" class="headerlink" title="使用习惯和态度研究提供的信息"></a>使用习惯和态度研究提供的信息</h3><p>1.产品渗透率和渗透深度  </p><p>2.产品使用者和购买者的人口统计特征：（1）全部使用者和购买者的人口统计特征（2）重度使用者的人口统计特征（3）目标市场的人口统计特征（4）不同品牌最常使用者的人口统计特征。  </p><p>3.使用习惯和购买习惯：（1）产品品类（2）包装规格（3）频率（4）时间（5）地点（6）场合（7）数量（8）金额（9）使用方法  </p><p>4.影响购买选择的重要因素。  </p><p>5.主要竞争品牌的市场表现：（1）品牌认知（2）广告认知（3）品牌渗透率（4）品牌采用指数（5）品牌最常使用率（6）品牌试用指数和保持指数（7）品牌忠诚度（8）品牌形象（9）品牌的优势和弱点。  </p><p>6.对产品和品牌的态度。  </p><p>7.消费者的价值观念和生活方式。  </p><p>8.媒介接触习惯。  </p><h3 id="日常消费品使用习惯和态度研究问卷举例"><a href="#日常消费品使用习惯和态度研究问卷举例" class="headerlink" title="日常消费品使用习惯和态度研究问卷举例"></a>日常消费品使用习惯和态度研究问卷举例</h3><p>略~</p><h2 id="识别市场机会"><a href="#识别市场机会" class="headerlink" title="识别市场机会"></a>识别市场机会</h2><h3 id="市场机会的SWOT分析"><a href="#市场机会的SWOT分析" class="headerlink" title="市场机会的SWOT分析"></a>市场机会的SWOT分析</h3>]]></content>
      
      
      <categories>
          
          <category> 文摘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 市场营销 </tag>
            
            <tag> 数分业务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简历修改&amp;面试技巧</title>
      <link href="/2023/02/19/%E7%AE%80%E5%8E%86%E4%BF%AE%E6%94%B9&amp;%E9%9D%A2%E8%AF%95%E6%8A%80%E5%B7%A7/"/>
      <url>/2023/02/19/%E7%AE%80%E5%8E%86%E4%BF%AE%E6%94%B9&amp;%E9%9D%A2%E8%AF%95%E6%8A%80%E5%B7%A7/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="03c95dbcf92965572fc513fbf905c96c7b5fafb17310d38e47029f56c386fcd9">1761cef5128b573c83745c58d3cd92a808a2db463946583b6f5b05cd020ae926</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-blink">      <input class="hbe hbe-input-field hbe-input-field-blink" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-blink" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-blink" data-content="您好, 这里需要密码.">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 求职 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>书单</title>
      <link href="/2023/02/18/%E4%B9%A6%E5%8D%95/"/>
      <url>/2023/02/18/%E4%B9%A6%E5%8D%95/</url>
      
        <content type="html"><![CDATA[<div class='poem'><div class='poem-title'>书院</div><div class='poem-author'>刘过诗</div><p>力学如力耕，<br>勤惰尔自知。<br>但使书种多，<br>会有岁稔时。</p></div><h2 id="职场习惯​"><a href="#职场习惯​" class="headerlink" title="职场习惯​"></a>职场习惯​</h2><ol><li>高效人士的七个习惯 ——养成好的习惯是走的长远的第一步​</li><li>卓有成效的管理者 —— 不仅仅是对别人的管理，我们对待自己的时间管理同样重要​</li></ol><h2 id="业务逻辑​"><a href="#业务逻辑​" class="headerlink" title="业务逻辑​"></a>业务逻辑​</h2><ol><li>精益创业 —— 一本省钱秘笈​</li><li>赢 —— 管理必备​</li><li>基业长青 —— 管理大师的秘密​</li><li>有效竞品分析 ——还不知道怎么分析竞品吗？​  </li></ol><h2 id="品牌营销​"><a href="#品牌营销​" class="headerlink" title="品牌营销​"></a>品牌营销​</h2><ol><li>乌合之众：大众心理学​</li><li>seo艺术 —— seo的朋友人手一本，当然还有seo密码​</li><li>定位 —— 虽然是建立在过去的很多情况写的，但是这个观点是值得我们输入​</li><li>品牌设计法则 ——虽然给设计看的，但是帮助我们建立全局框架​</li><li>超级符号就是超级创意 —— 营销人还有没看过的吗？​</li><li>黑客增长 —— 北极星指标，魔法数字​</li><li>引爆点 —— 你们最爱的书​</li><li>营销决策模型   </li></ol><h2 id="建立认知​"><a href="#建立认知​" class="headerlink" title="建立认知​"></a>建立认知​</h2><ol><li>穷查理宝典 —— 再多的书，都建立在你深度思考的基础上​</li><li>穷爸爸和富爸爸 —— 学习财富，不要成为金钱的奴役​</li><li>第五项修炼：终身学习者</li><li>金字塔原理 ——是一本反复阅读，来训练自己逻辑思维的好书，英语能力好的朋友可以读原版​</li><li>学会提问  </li></ol><h2 id="故事"><a href="#故事" class="headerlink" title="故事"></a>故事</h2><ol><li>夏洛的网</li><li>小王子  </li></ol><h2 id="什么都想看看​"><a href="#什么都想看看​" class="headerlink" title="什么都想看看​"></a>什么都想看看​</h2><ol><li>人类简史 —— 突然对一些行为开始释然​</li><li>飞轮效应 —— 从企业的飞轮到个人人生的飞轮​</li><li>优势谈判 —— 有个朋友说谈判帮她省了很多钱​</li><li>道德经 —— 听的王晨阳解读的版本​</li><li>竞争战略 —— 初读的时候有很多晦涩，有很多点可以抽丝剥茧的来感悟当下问题</li><li>纳瓦尔宝典</li></ol><blockquote><p>来自朋友们的推荐：CC、饼干哥哥、陈老师、戴师兄等。</p></blockquote><div class="site-card-group"><a class="site-card" href="https://weread.qq.com/"><div class="img"><img src="https://s1.ax1x.com/2023/02/19/pSOmdKJ.png"/></div><div class="info"><span class="title">微信读书</span></div></a><a class="site-card" href="https://e-m.jd.com/myBooks"><div class="img"><img src="https://s1.ax1x.com/2023/02/19/pSOm0bR.png"/></div><div class="info"><span class="title">京东读书</span></div></a></div>]]></content>
      
      
      <categories>
          
          <category> 文摘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 书单 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里巴巴国际站选品发品营销全流程落地思路</title>
      <link href="/2023/02/13/%E5%9B%BD%E9%99%85%E7%AB%99%E9%80%89%E5%93%81%E5%8F%91%E5%93%81%E6%8E%A8%E5%B9%BF%E5%85%A8%E6%B5%81%E7%A8%8B%E8%90%BD%E5%9C%B0%E6%80%9D%E8%B7%AF/"/>
      <url>/2023/02/13/%E5%9B%BD%E9%99%85%E7%AB%99%E9%80%89%E5%93%81%E5%8F%91%E5%93%81%E6%8E%A8%E5%B9%BF%E5%85%A8%E6%B5%81%E7%A8%8B%E8%90%BD%E5%9C%B0%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="a16194e78ce559ae1bd8aeb063b9cc26de3b75a0b066ff6263e533248f49a130">1761cef5128b573c83745c58d3cd92a854385502ada1882284bdd586a9d5aa798396d145cb1b37218cc9a5d12dea0c136b8dafdc6052e9d13667a1ff43599beadac8691dafd7065e6816bff431094dfd8346dcec02e9704aef0a0cb729955b7ba00956e12708de1eec0a2b4b42025bd2e012a96d4a7e742790d640c7be1f1e2eeba8121b5c04f29463f60b270e3c49ec80ae145c845a13100aaab595ad0bcc3a08eee398ddb8f49b11b1bbbaa3aea44a9eb28be07d59a9280e81471a39aadbf84bda38d21f4709568745c28c82e4911abc7ba75223aa6338bd6a07a0e04d0e439a397a61cbce3fd78d170135b0c48f0e8ea514c34bda1085a1b023d17d719727359a79e2cdd87e8015419c9a26742d57b09cbcd047b2ea56efb25434508efedbf187032a7c5fc7a877df8a0e1d8f9953bd5e9bb3cb2774c0fe2f7e7c247f0b40c3993f86db547f6967bbe244a82998ae760b6c98a4edb937c3deb546d68e4a61</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-blink">      <input class="hbe hbe-input-field hbe-input-field-blink" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-blink" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-blink" data-content="您好, 这里需要密码.">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数分业务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法与外挂标签写法汇总</title>
      <link href="/2023/02/12/Markdown%E8%AF%AD%E6%B3%95%E4%B8%8E%E5%A4%96%E6%8C%82%E6%A0%87%E7%AD%BE%E5%86%99%E6%B3%95%E6%B1%87%E6%80%BB/"/>
      <url>/2023/02/12/Markdown%E8%AF%AD%E6%B3%95%E4%B8%8E%E5%A4%96%E6%8C%82%E6%A0%87%E7%AD%BE%E5%86%99%E6%B3%95%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>转载：<a href="https://www.fomal.cc/posts/2013454d.html">https://www.fomal.cc/posts/2013454d.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 写作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>管好自己，莫渡他人</title>
      <link href="/2023/02/12/%E7%AE%A1%E5%A5%BD%E8%87%AA%E5%B7%B1%EF%BC%8C%E8%8E%AB%E6%B8%A1%E4%BB%96%E4%BA%BA/"/>
      <url>/2023/02/12/%E7%AE%A1%E5%A5%BD%E8%87%AA%E5%B7%B1%EF%BC%8C%E8%8E%AB%E6%B8%A1%E4%BB%96%E4%BA%BA/</url>
      
        <content type="html"><![CDATA[<blockquote><p>莫言曾在诺贝尔文学奖颁奖典礼中，谈到自己笔名的由来。<br>他直言，自己小时候放牛时，没什么事情做，就爱管闲事，乱说话。无论遇到什么人什么事，他总会插上嘴，结果时常惹来一身麻烦。<br>一回到家，母亲就哭着训诫他一顿。父亲语重心长告诉他：儿子，你少说话，管好自己就行。<br>所以当他后来开始作家生涯时，为自己起了一个笔名“莫言”。就是为了叮嘱自己少说话，管住嘴。  </p></blockquote><p>其实不仅是说话，为人处世也是如此。当你费尽心思想要插手别人的人生，最终只会让自己反受其累。就像《论语》所言，不能正其身，如正人何？连自己都活得不够好，哪有什么资格要求他人？</p><p><strong>成年人最大的清醒，就是管好自己，克制自己纠正他人的欲望。</strong></p><h2 id="管好手，不指点别人"><a href="#管好手，不指点别人" class="headerlink" title="管好手，不指点别人"></a>管好手，不指点别人</h2><p>董宇辉就曾在直播间里，自责道：我现在和我弟尽量少联系，只要不联系，他应该就不会反应过来，他现在生活的困难都是我一手造成的。 </p><p>原本弟弟此前在老家有一份工作，比较轻松，但赚得不多。董宇辉得知后，凭着自己的经验，就建议弟弟辞去工作，去一线城市历练一番。  </p><p>弟弟听从建议，先后在上海、深圳待了两年。可因为生活节奏太快，需要经常加班熬到半夜，他整个人日渐消瘦。此前过于安稳的他又欠缺工作能力，以至于拿到的薪水十分微薄。到最后甚至都要交不起房租，养活不了自己，无奈只能又灰溜溜回到老家。  </p><p>直播时，董宇辉懊悔道：这件事我做错了，我再也不给人建议了，因为我们偏颇、片面、狭隘的思想不足以指导别人的人生。  </p><p>生活中，我们有很多人看到别人的处境，就会不自觉地以自己对世界的认知，去为别人规划未来、指点江山。尽管是真心“为你好”，但也忽略了对方愿不愿意、需不需要、适不适合，结果酿成大错。  </p><p>汪曾祺曾在《四方食事》中说：有些东西，自己尽可不吃，但不要反对旁人吃。不要以为自己不吃的东西，谁吃，就是岂有此理。  </p><p>这世上没有哪个人能全知全能，每个人都存在认知有限。即便是同样的人生剧本，也未必适合不同的两个人。千万不要因为自己片面的想法，把别人的人生指错了方向。  </p><p><strong>收起那只指点别人的手，少一点干涉，多一点理解。于己，这是涵养；于人，这是慈悲。</strong>  </p><h2 id="管好嘴，不评判他人"><a href="#管好嘴，不评判他人" class="headerlink" title="管好嘴，不评判他人"></a>管好嘴，不评判他人</h2><p>有一年春天，学校要求老师带学生下田种水稻。干活时，其他同学卷起裤子就跳入水田，唯独覃桂英一人站在田埂上，面色为难。班主任李老师就厉声喊她。哪知她更加局促不安，仍旧不肯脱鞋下地。  </p><p>李老师心中认定覃桂英矫揉造作，不是个勤劳朴素的孩子。于是李老师就带头在田里讥讽她，“快脱下你那双绣花鞋吧！”同学们也跟着起哄，说她有民国大小姐做派。不堪忍受的覃桂英，穿着鞋就下了田。  </p><p>不多时，一只蚂蟥钻进了她的鞋里，吸附在她的脚板上。其他人为了帮她拔出蚂蟥，就拽着覃桂英，当众脱下了她的鞋：这时大家才发现，她的两只脚都是六趾。  </p><p>得知真相的李老师，心中很是愧疚，尽管一再道歉，却仍旧未能抚平覃桂英的伤痛。  </p><p>心理学上有个词，叫“晕轮效应”。月亮被光环笼罩时，会产生模糊不清的晕轮，肉眼就难以看清月亮的本来面目。其实，我们每个人身上都有这样的一圈晕轮。若是仅凭第一感，就随意评判他人，得到的结果，多半是以偏概全的谬误。  </p><p>因为很多时候，我们只能看见冰山上的一角，看不见海底的暗潮汹涌。正所谓， <em>闲谈莫论人非，静坐常思己过。</em><br><strong>面对他人，管住嘴，不随意评价，才是最高级的修养。</strong>  </p><h2 id="管好脚，不干扰旁人"><a href="#管好脚，不干扰旁人" class="headerlink" title="管好脚，不干扰旁人"></a>管好脚，不干扰旁人</h2><p>史铁生说，世上的一些事多是出于瞎操心，由瞎操心再演变为乱掺和。<strong>与人相处，有时不分缘由的好心，只会乱了别人的节奏。</strong></p><p>魏晋时期，嵇康和山涛，同为“竹林七贤”。两人性情相投，经常一起吟诗作赋，畅谈人生。<br>嵇康娶了曹操的曾孙女为妻。司马家族当政时，为了不惹事，嵇康就想要隐居起来。但山涛却觉得朋友很有才华，不该埋没于山林。于是，他就向皇帝偷偷举荐了嵇康。  </p><p>嵇康知道后，很是生气，写下《与山巨源绝交书》，宣布从此和山涛绝交。二人多年的友谊，就因为山涛的随意插足而顷刻破裂。  </p><p>《偷影子的人》中有这样一句话：你不能干涉别人的生活，就算是为了对方好。  </p><p>人和人之间，立场不同，选择就会不同。与人相处，千万不要把自己的脚伸进别人的鞋子里。<strong>无论是至亲还是朋友，不插足，不干扰才是情感最长久的黏合剂。</strong>  </p><blockquote><p>编辑自：<a href="https://mp.weixin.qq.com/s/P95QNK2VdFVtTRRRPrDq6A">https://mp.weixin.qq.com/s/P95QNK2VdFVtTRRRPrDq6A</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 随想 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 为人处世观 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《比海更深》经典台词节选</title>
      <link href="/2023/02/10/%E6%AF%94%E6%B5%B7%E6%9B%B4%E6%B7%B1%E7%BB%8F%E5%85%B8%E5%8F%B0%E8%AF%8D%E8%8A%82%E9%80%89/"/>
      <url>/2023/02/10/%E6%AF%94%E6%B5%B7%E6%9B%B4%E6%B7%B1%E7%BB%8F%E5%85%B8%E5%8F%B0%E8%AF%8D%E8%8A%82%E9%80%89/</url>
      
        <content type="html"><![CDATA[<p>为什么人都不会珍惜当下呢？<br>总是在追求失去的东西，<br>想着无法实现的梦想。<br>被这些东西困住，每天还那么快乐。<br>幸福这种东西啊，<br>要是不放弃什么就得不到呢。</p>]]></content>
      
      
      <categories>
          
          <category> 随想 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 台词 </tag>
            
            <tag> 观影 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电商潜力类目选品分析思维</title>
      <link href="/2023/02/10/%E6%8A%96%E9%9F%B3%E6%BD%9C%E5%8A%9B%E7%B1%BB%E7%9B%AE%E9%80%89%E5%93%81%E5%88%86%E6%9E%90%E6%8A%A5%E5%91%8A%E8%A7%A3%E6%9E%90/"/>
      <url>/2023/02/10/%E6%8A%96%E9%9F%B3%E6%BD%9C%E5%8A%9B%E7%B1%BB%E7%9B%AE%E9%80%89%E5%93%81%E5%88%86%E6%9E%90%E6%8A%A5%E5%91%8A%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<blockquote><p>数据指标：月份    商品标题    商品分类    细分类目    商品券后价（元）    佣金（元）    商品链接    抖音销量（件）    抖音销售额（元）    抖音浏览量（次）    关联直播数（场）    关联视频数（个）    转化率（抖音销量/抖音浏览量） </p></blockquote><h2 id="分析思维1"><a href="#分析思维1" class="headerlink" title="分析思维1"></a>分析思维1</h2><h3 id="1-选择关键指标"><a href="#1-选择关键指标" class="headerlink" title="1.选择关键指标"></a>1.选择关键指标</h3><ul><li>在选择关键指标上考虑到以企业营收为出发点的销售额作为百极星指标</li><li>在对业务流程进行梳理及百极星指标拆解后，选取了与百极星指标密切关联的转化率和单价作为其他关键指标（这里应该要附加各指标相关性热力图分析）</li></ul><h3 id="2-选品开发思路"><a href="#2-选品开发思路" class="headerlink" title="2.选品开发思路"></a>2.选品开发思路</h3><ol><li>潜力品类筛选：根据销售额筛选销售规模最大的潜力品类，选取销售额排名前十的品类</li><li>潜力商品筛选：在潜力品类中进一步筛选销售额排名前十的热销商品</li><li>综合排名<ol><li>分别算出所有潜力产品中，销售额、转化率和商品单价三个指标的最大值；</li><li>分别计算每个潜力产品在这三个指标上与最大值之间的比值value;</li><li>把三个比值value相乘得到该产品综合指标judge_value;</li><li>按从大到小排序选出综合指标最高的三个产品作为推荐开发的产品</li></ol></li></ol><h3 id="3-假设验证"><a href="#3-假设验证" class="headerlink" title="3.假设验证"></a>3.假设验证</h3><ol><li>该品在时间维度的表现</li><li>同等价位的其他品的表现</li></ol><h3 id="4-分析过程"><a href="#4-分析过程" class="headerlink" title="4.分析过程"></a>4.分析过程</h3><ul><li>数据处理：合并数据、拓展度量值、类型转换</li><li>数据分析：分组计算商品各指标数据、求销售额top10的类目、求top10类目里销售额top10的商品、构建综合指标求排名</li><li>验证假设：考虑后续运营策略，价格定位、推广策略等。</li></ul><h2 id="分析思维2"><a href="#分析思维2" class="headerlink" title="分析思维2"></a>分析思维2</h2><h3 id="1-选择关键指标-1"><a href="#1-选择关键指标-1" class="headerlink" title="1.选择关键指标"></a>1.选择关键指标</h3><ul><li>依据对业务及指标的理解，选取了销量相关指标、价格相关指标、浏览量、转化率、销售月数作为关键数据指标</li></ul><h3 id="2-分析过程"><a href="#2-分析过程" class="headerlink" title="2.分析过程"></a>2.分析过程</h3><ul><li>数据处理：去除脏数据、度量值处理、合并数据</li><li>数据分析：先对进行全指标进行了相关性分析，然后分别进行销量排名区间分析、转化率区间分析、最小商品单价区间分析</li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数分思维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>盖碗的使用</title>
      <link href="/2023/01/20/%E7%9B%96%E7%A2%97%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/01/20/%E7%9B%96%E7%A2%97%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p><img src="https://s1.ax1x.com/2023/02/02/pSr5MnJ.png" /></p><h1 id="三指拿法"><a href="#三指拿法" class="headerlink" title="三指拿法"></a>三指拿法</h1><p>1.在6点到12点间注水</p><p><img src="https://s1.ax1x.com/2023/02/02/pSr5epT.png" alt="截图" style="zoom:60%;"  title="视频位置：13:34" /></p><p>2.在9点钟方向开个小口</p><p><img src="https://s1.ax1x.com/2023/02/02/pSr5Et0.png" alt="截图" style="zoom:60%;"  title="视频位置：13:34" /></p><p>3.食指微微倾斜放在盖钮上，中指跟拇指的指腹捏住盖碗的12、6点的边缘撇口处</p><p><img src="https://s1.ax1x.com/2023/02/02/pSr5m1U.png" alt="截图" style="zoom:60%;"  title="视频位置：13:34" /></p><h1 id="手握拿法"><a href="#手握拿法" class="headerlink" title="手握拿法"></a>手握拿法</h1><p>1.在6点方向开个小口</p><p><img src="https://s1.ax1x.com/2023/02/02/pSr5Akq.png" alt="截图" style="zoom:60%;"  title="视频位置：13:34" /></p><p>2.左手的大拇指跟中指分别捏住盖碗的十二点跟六点钟方向</p><p><img src="https://s1.ax1x.com/2023/02/02/pSr5VhV.png" alt="截图" style="zoom:60%;"  title="视频位置：13:34" /></p><p>其他手指回收，不用紧挨盖碗</p><p><img src="https://s1.ax1x.com/2023/02/02/pSr5ncF.png" alt="截图" style="zoom:80%;"  title="视频位置：13:34" /></p><p>3.拿起盖碗放到胸前方右手四指并拢，拖住底足，拇指扣住盖钮，平移到公道杯前方，快速翻转手腕，带动盖碗出汤（注：尽量减少与盖碗的接触面）</p><p><img src="https://s1.ax1x.com/2023/02/02/pSr5uX4.png" alt="截图" style="zoom:80%;"  title="视频位置：13:34" /></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 茶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>茶小白入门全攻略</title>
      <link href="/2023/01/20/%E8%8C%B6%E5%B0%8F%E7%99%BD%E5%85%A5%E9%97%A8%E6%94%BB%E7%95%A5/"/>
      <url>/2023/01/20/%E8%8C%B6%E5%B0%8F%E7%99%BD%E5%85%A5%E9%97%A8%E6%94%BB%E7%95%A5/</url>
      
        <content type="html"><![CDATA[<p><img src="https://s1.ax1x.com/2023/02/02/pSrgYLt.png" alt="pSrgYLt.png"></p><p>视频地址： <a href="https://www.bilibili.com/video/BV1M3411A7Di/">新手茶友必看｜最全茶学入门攻略｜泡茶品茶识茶（建议收藏）</a></p><h1 id="学会泡茶"><a href="#学会泡茶" class="headerlink" title="学会泡茶"></a>学会泡茶</h1><p><strong>茶席</strong>：布置茶艺空间</p><p><strong>器具选择</strong>：入门以瓷制的盖碗作为主泡器，加上公道杯和品茗杯就足够了。</p><p><img src="https://s1.ax1x.com/2023/02/02/pSrgUdf.png" alt="截图" style="zoom:50%;" title="视频位置：01:37" /></p><p><br/></p><p><strong>盖碗的使用</strong></p><p><img src="https://s1.ax1x.com/2023/02/02/pSrg1RH.png" alt="截图" style="zoom:50%;" title="视频位置：02:03" /></p><p><strong>泡茶三要素</strong>：水温、茶水比、出汤时间</p><p><img src="https://s1.ax1x.com/2023/02/02/pSrgNeP.png" alt="截图" style="zoom:40%;" /> </p><p><br/></p><p><strong>泡茶具体学习视频</strong></p><p><img src="https://s1.ax1x.com/2023/02/02/pSrg3zd.png" alt="截图" style="zoom:50%;" title="视频位置：03:59" />  </p><p>选择学茶茶样注意点：原料场地正宗、工艺符合标准、正确表现品质特点</p><p>新手先选大品牌茶叶</p><p><img src="https://s1.ax1x.com/2023/02/02/pSrgJsI.png" alt="截图" style="zoom:50%;" /></p><p><br/></p><h1 id="如何品茶"><a href="#如何品茶" class="headerlink" title="如何品茶"></a>如何品茶</h1><p><strong>审评一款茶</strong>：外形、汤色、香气、滋味、叶底</p><ul><li>外形：净度、整碎、颜色、形状</li><li>汤色：色泽、透亮度</li><li>香气：纯异度、香气类型、持久度</li><li>闻香：温杯摇香后可闻干茶香气;出汤后闻湿茶香;茶汤面上的香;汤中香;杯底香</li></ul><p><br/></p><p>用生活中类似的香气表达、关注标杆茶样的品质特征的描述</p><p>品饮的时候让茶汤在口腔里面翻滚下，去体味下汤感是稠厚、柔滑、细腻还是粗糙淡薄，苦涩后是否回味生津</p><p>看液底是柔软的还是扎手的、是否扎手</p><p><em>记录认真泡过的每一支茶~</em></p><div class="table-container"><table><thead><tr><th>品茶小记</th></tr></thead><tbody><tr><td>茶名：</td></tr><tr><td>年份：</td></tr><tr><td>冲泡器皿：</td></tr><tr><td>投茶量：</td></tr><tr><td>冲泡手法和时间：</td></tr><tr><td>外形：</td></tr><tr><td>汤色：</td></tr><tr><td>香气：</td></tr><tr><td>滋味：</td></tr><tr><td>叶底：</td></tr><tr><td>小结：</td></tr></tbody></table></div><p><br/></p><p><br/></p><h1 id="茶学理论"><a href="#茶学理论" class="headerlink" title="茶学理论"></a>茶学理论</h1><p><img src="https://s1.ax1x.com/2023/02/02/pSrgao8.png" style="zoom:25%;" /></p><h1 id="知识来源"><a href="#知识来源" class="headerlink" title="知识来源"></a>知识来源</h1><p>把茶艺作为本职工作，可直接去茶艺机构，业余可观看纪录片和书籍</p><p><img src="https://s1.ax1x.com/2023/02/02/pSrgwFS.png" alt="截图" style="zoom:25%;" /></p><p>纪录片推荐：</p><p><img src="https://s1.ax1x.com/2023/02/02/pSrgGQA.png" alt="截图" style="zoom:50%;"  title="视频位置：13:34" /></p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 茶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python电商选品分析项目</title>
      <link href="/2022/12/01/%E6%8A%96%E9%9F%B3%E6%BD%9C%E5%8A%9B%E5%93%81%E7%B1%BB%E5%88%86%E6%9E%90/"/>
      <url>/2022/12/01/%E6%8A%96%E9%9F%B3%E6%BD%9C%E5%8A%9B%E5%93%81%E7%B1%BB%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="4d6bf19398282b02ee0503326fe5b9243e1169decb1fec62581b24edd74a15cb"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-blink">      <input class="hbe hbe-input-field hbe-input-field-blink" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-blink" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-blink" data-content="您好, 这里需要密码.">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数分技能 </tag>
            
            <tag> 数分思维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次闲暇时光</title>
      <link href="/2022/03/28/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%97%B2%E6%9A%87%E6%97%B6%E5%85%89/"/>
      <url>/2022/03/28/%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%97%B2%E6%9A%87%E6%97%B6%E5%85%89/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="156e2692f55d38187e14924aab1ec27638872b27568b35efe51e64f9f424aee5">1761cef5128b573c83745c58d3cd92a87b61a121941a216835db82d3ee4644aea822592f22eb500fd1ee73f310d9679c76e2987a705eae7d5fcecb6785f24e458ac67e98e71ae021a015de21dfefc08b51ce0948ec1aff4ba45e568fe7fb91e2ec188ff093a034c61aef31e10b7d95e8094681b04703a315405827049747c6aabc28ecdfb5a8cc3654408f67f4de5d0d06d24a19d191e64e8b499f4724a262705e3888689b7830bf680cb89f507d9cf4bd477978c461c1908d326c5f1f2aac1d1224300db91b2af17c9906f8923bc9f803f9e0fe787e7841e94757cc303ddb738cc16734c5331f27be0b95321b3e4231ac501c9b1cd603b6143889fc77140ca1728a3079bd5727492b8bf138a38c89eb2e10a49b87cd7c8f39bd4ac385c5e3ad603cf489ff36575a7a1ed4fb1a3d614ba60220e4d459fb55f8743d736993622f6d3aee4e8119955122b02214269364a194688cffa1a4d780d87c07ccdd78f225b1c26d86277a3904a0d0afbbfae900b804a3348e64a4222ca8a238dbf60a5b0c16266dd369c5d62ce1147ae013cc67c7e117f6e0e067fe61e2db08869536aed0781f94b8f5cc452a42364b14079565f18d9721c22ec412179800681cf26674ba181953cd81d68f6560a5988a7c57ff0b46722e24cf98f676c9a6935eb69b2622c3aeea1e404d974cda5c784e4dbdf7f3e7b9a6a278dee4e02fef9b10022e3868</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-blink">      <input class="hbe hbe-input-field hbe-input-field-blink" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-blink" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-blink" data-content="您好, 这里需要密码.">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摄影 </tag>
            
            <tag> 手办 </tag>
            
            <tag> 朋友 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里AI训练营SQL入门与实践task5</title>
      <link href="/2021/12/26/%E9%98%BF%E9%87%8C%E4%BA%91AI%E8%AE%AD%E7%BB%83%E8%90%A5SQL%E5%85%A5%E9%97%A8%E4%B8%8E%E5%AE%9E%E8%B7%B5Task5/"/>
      <url>/2021/12/26/%E9%98%BF%E9%87%8C%E4%BA%91AI%E8%AE%AD%E7%BB%83%E8%90%A5SQL%E5%85%A5%E9%97%A8%E4%B8%8E%E5%AE%9E%E8%B7%B5Task5/</url>
      
        <content type="html"><![CDATA[<ul><li><p>窗口函数概念及基本的使用方法</p><ul><li><p>定义：</p><p>  窗口函数可以让我们有选择的去对某一部分数据进行汇总、计算和排序。</p></li><li><p>语法：</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&lt;</span>窗口函数<span class="operator">&gt;</span> <span class="keyword">OVER</span> ([<span class="keyword">PARTITION</span> <span class="keyword">BY</span> <span class="operator">&lt;</span>列名<span class="operator">&gt;</span>]</span><br><span class="line">                     <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="operator">&lt;</span>排序用列名<span class="operator">&gt;</span>)</span><br><span class="line"><span class="comment">--PARTITON BY是用来分组，即选择要看哪个窗口，类似于GROUP BY 子句的分组功能，但是PARTITION BY 子句并不具备GROUP BY 子句的汇总功能，并不会改变原始表中记录的行数。</span></span><br><span class="line"><span class="comment">--ORDER BY是用来排序，即决定窗口内，是按那种规则(字段)来排序的。</span></span><br></pre></td></tr></table></figure><p>  [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-NOEv2zzi-1640246280333)(<a href="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/f3c8b72f-69b2-4e28-9873-9097eac8cb15/Untitled.png">https://s3-us-west-2.amazonaws.com/secure.notion-static.com/f3c8b72f-69b2-4e28-9873-9097eac8cb15/Untitled.png</a>)]</p></li></ul></li><li><p>窗口函数种类</p><p>  大致来说，窗口函数可以分为两类。</p><p>  一是 将SUM、MAX、MIN等聚合函数用在窗口函数中</p><p>  二是 RANK、DENSE_RANK等排序用的专用窗口函数</p><ul><li><p>专用窗口函数</p><ul><li><p>RANK函数(英式排序)</p><p>  计算排序时，如果存在相同位次的记录，则会跳过之后的位次。（1、2、2、4、5）</p></li><li><p>DENSE_RANK函数</p><p>  同样是计算排序，即使存在相同位次的记录，也不会跳过之后的位次。（1、2、3、3、4）</p></li><li><p>ROW_NUMBER函数</p><p>  赋予唯一的连续位次。（1、2、3、4、5）</p></li></ul></li></ul></li></ul><pre><code>    [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-QzSvcMtL-1640246280335)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/b36dd221-b216-4f83-9dd8-72a2a3b243c2/Untitled.png)]- 聚合函数在窗口函数上的使用    聚合函数在开窗函数中的使用方法和之前的专用窗口函数一样，只是出来的结果是一个**累计**的聚合函数值。    <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--例子：</span></span><br><span class="line"><span class="keyword">SELECT</span>  product_id</span><br><span class="line">       ,product_name</span><br><span class="line">       ,sale_price</span><br><span class="line">       ,<span class="built_in">SUM</span>(sale_price) <span class="keyword">OVER</span> (<span class="keyword">ORDER</span> <span class="keyword">BY</span> product_id) <span class="keyword">AS</span> current_sum</span><br><span class="line">       ,<span class="built_in">AVG</span>(sale_price) <span class="keyword">OVER</span> (<span class="keyword">ORDER</span> <span class="keyword">BY</span> product_id) <span class="keyword">AS</span> current_avg  </span><br><span class="line">  <span class="keyword">FROM</span> product;</span><br></pre></td></tr></table></figure>    [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-YIWhtybf-1640246280337)(https://s3-us-west-2.amazonaws.com/secure.notion-static.com/c50b787e-09b9-4509-920b-7a4f337fb04f/Untitled.png)]    聚合函数结果是，按我们指定的排序，这里是product_id，**当前所在行及之前所有的行**的合计或均值。即累计到当前行的聚合。</code></pre><ul><li><p>窗口函数的的应用 - 计算移动平均</p><ul><li><p>概念：</p><p>  在上面提到，聚合函数在窗口函数使用时，计算的是累积到当前行的所有的数据的聚合。 实际上，还可以指定更加详细的<strong>汇总范围</strong>。该汇总范围成为<strong>框架(frame)。</strong></p></li><li><p>语法：</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&lt;</span>窗口函数<span class="operator">&gt;</span> <span class="keyword">OVER</span> (<span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="operator">&lt;</span>排序用列名<span class="operator">&gt;</span></span><br><span class="line">                 <span class="keyword">ROWS</span> n PRECEDING )  </span><br><span class="line">                 </span><br><span class="line"><span class="operator">&lt;</span>窗口函数<span class="operator">&gt;</span> <span class="keyword">OVER</span> (<span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="operator">&lt;</span>排序用列名<span class="operator">&gt;</span></span><br><span class="line">                 <span class="keyword">ROWS</span> <span class="keyword">BETWEEN</span> n PRECEDING <span class="keyword">AND</span> n FOLLOWING)</span><br><span class="line"></span><br><span class="line"><span class="comment">--PRECEDING（“之前”）， 将框架指定为 “截止到之前 n 行”，加上自身行</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--FOLLOWING（“之后”）， 将框架指定为 “截止到之后 n 行”，加上自身行</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--BETWEEN 1 PRECEDING AND 1 FOLLOWING，将框架指定为 “之前1行” + “之后1行” + “自身”</span></span><br></pre></td></tr></table></figure></li><li><p>例子：</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span>  product_id</span><br><span class="line">       ,product_name</span><br><span class="line">       ,sale_price</span><br><span class="line">       ,<span class="built_in">AVG</span>(sale_price) <span class="keyword">OVER</span> (<span class="keyword">ORDER</span> <span class="keyword">BY</span> product_id</span><br><span class="line">                               <span class="keyword">ROWS</span> <span class="number">2</span> PRECEDING) <span class="keyword">AS</span> moving_avg</span><br><span class="line">       ,<span class="built_in">AVG</span>(sale_price) <span class="keyword">OVER</span> (<span class="keyword">ORDER</span> <span class="keyword">BY</span> product_id</span><br><span class="line">                               <span class="keyword">ROWS</span> <span class="keyword">BETWEEN</span> <span class="number">1</span> PRECEDING </span><br><span class="line">                                        <span class="keyword">AND</span> <span class="number">1</span> FOLLOWING) <span class="keyword">AS</span> moving_avg  </span><br><span class="line">  <span class="keyword">FROM</span> product</span><br></pre></td></tr></table></figure><p>  ROWS 2 PRECEDING：</p><p>  [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-wpVnTYPl-1640246280339)(<a href="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/07e3df96-532e-483f-a8d8-bcbfb24cedeb/Untitled.png">https://s3-us-west-2.amazonaws.com/secure.notion-static.com/07e3df96-532e-483f-a8d8-bcbfb24cedeb/Untitled.png</a>)]</p><p>  ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING：</p><p>  [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-lUpyNOUc-1640246280340)(<a href="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/8afca687-9fbf-4145-9f03-4f0a1b3c7adf/Untitled.png">https://s3-us-west-2.amazonaws.com/secure.notion-static.com/8afca687-9fbf-4145-9f03-4f0a1b3c7adf/Untitled.png</a>)]</p></li><li><p>注意事项</p><ul><li>原则上，窗口函数只能在SELECT子句中使用。</li><li>窗口函数OVER 中的ORDER BY 子句并不会影响最终结果的排序。其只是用来决定窗口函数按何种顺序计算。</li></ul></li></ul></li><li><p>GROUPINGY运算符</p><ul><li><p>ROLLUP - 计算合计及小计</p><p>  常规的GROUP BY 只能得到每个分类的小计，有时候还需要计算分类的合计，可以用 ROLLUP关键字。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span>  product_type</span><br><span class="line">       ,regist_date</span><br><span class="line">       ,<span class="built_in">SUM</span>(sale_price) <span class="keyword">AS</span> sum_price</span><br><span class="line">  <span class="keyword">FROM</span> product</span><br><span class="line"> <span class="keyword">GROUP</span> <span class="keyword">BY</span> product_type, regist_date <span class="keyword">WITH</span> <span class="keyword">ROLLUP</span></span><br></pre></td></tr></table></figure><p>  [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-foHeZsL8-1640246280344)(<a href="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/01904b31-83c3-4de9-b15e-f972180756a6/Untitled.png">https://s3-us-west-2.amazonaws.com/secure.notion-static.com/01904b31-83c3-4de9-b15e-f972180756a6/Untitled.png</a>)]</p></li></ul></li><li><p>练习题</p><ul><li><p>5.1</p><p>  请说出针对本章中使用的product（商品）表执行如下 SELECT 语句所能得到的结果。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span>  product_id</span><br><span class="line">       ,product_name</span><br><span class="line">       ,sale_price</span><br><span class="line">       ,<span class="built_in">MAX</span>(sale_price) <span class="keyword">OVER</span> (<span class="keyword">ORDER</span> <span class="keyword">BY</span> product_id) <span class="keyword">AS</span> Current_max_price</span><br><span class="line">  <span class="keyword">FROM</span> product</span><br></pre></td></tr></table></figure><p>  按照product_id升序排序，计算出截至当前行的最高sale_price</p></li><li><p>5.2</p><p>  继续使用product表，计算出按照登记日期（regist_date）升序进行排列的各日期的销售单价（sale_price）的总额。排序是需要将登记日期为NULL 的“运动 T 恤”记录排在第 1 位（也就是将其看作比其他日期都早）</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> regist_date,product_name,sale_price,</span><br><span class="line"><span class="built_in">sum</span>(sale_price) <span class="keyword">over</span>(<span class="keyword">order</span> <span class="keyword">by</span> regist_date nulls <span class="keyword">first</span>)<span class="keyword">as</span> sum_price</span><br><span class="line"><span class="keyword">FROM</span> product;</span><br></pre></td></tr></table></figure></li><li><p>5.3</p><p>  思考题</p><p>  ① 窗口函数不指定PARTITION BY的效果是什么？</p><p>  窗口函数不指定PARTITION BY 就是针对排序列进行全局排序</p><p>  ② 为什么说窗口函数只能在SELECT子句中使用？实际上，在ORDER BY 子句使用系统并不会报错。</p><p>  这要看SQL语句的执行顺序，</p><p>  FROM → WHERE → GROUP BY → HAVING → SELECT → ORDER BY</p><p>  如果在SELECT前进行窗口函数则是没有意义的。而ORDER BY 语句在SELECT语句之后因此是可以执行的。</p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL基础 </tag>
            
            <tag> 训练营 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里AI训练营SQL入门与实践task4</title>
      <link href="/2021/12/25/%E9%98%BF%E9%87%8C%E4%BA%91AI%E8%AE%AD%E7%BB%83%E8%90%A5SQL%E5%85%A5%E9%97%A8%E4%B8%8E%E5%AE%9E%E8%B7%B5Task4/"/>
      <url>/2021/12/25/%E9%98%BF%E9%87%8C%E4%BA%91AI%E8%AE%AD%E7%BB%83%E8%90%A5SQL%E5%85%A5%E9%97%A8%E4%B8%8E%E5%AE%9E%E8%B7%B5Task4/</url>
      
        <content type="html"><![CDATA[<ul><li><p>表的加减法</p><p>  表、视图和查询的执行结果都是记录的集合, 其中的元素为表或者查询结果中的每一行。</p><p>  在标准 SQL 中, 分别对检索结果使用 <strong><code>UNION</code></strong>, <strong><code>INTERSECT,</code></strong> <strong><code>EXCEPT</code></strong> 来将检索结果进行并,交和差运算, 像<strong><code>UNION</code></strong>,<strong><code>INTERSECT</code></strong>, <strong><code>EXCEPT</code></strong>这种用来进行集合运算的运算符称为集合运算符。</p><p>  [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-xnpEpSE4-1640243090299)(<a href="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/4356ea0e-245b-4a51-a80e-eeb82c896b32/Untitled.png">https://s3-us-west-2.amazonaws.com/secure.notion-static.com/4356ea0e-245b-4a51-a80e-eeb82c896b32/Untitled.png</a>)]</p><p>  [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-xZI2mx36-1640243090301)(<a href="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/8a33a134-cb68-46d2-925c-92cc90681af5/Untitled.png">https://s3-us-west-2.amazonaws.com/secure.notion-static.com/8a33a134-cb68-46d2-925c-92cc90681af5/Untitled.png</a>)]</p><ul><li><p>表的加法</p><ul><li><p>UNION</p><p>  UNION 会对两个查询的结果集进行合并和去重, 这种去重不仅会去掉两个结果集相互重复的, 还会去掉一个结果集中的重复行</p><p>  [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-jWacdlRv-1640243090302)(<a href="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/ea984434-f10b-4604-86ea-b88fc023ff59/Untitled.png">https://s3-us-west-2.amazonaws.com/secure.notion-static.com/ea984434-f10b-4604-86ea-b88fc023ff59/Untitled.png</a>)]</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--例子：</span></span><br><span class="line"><span class="comment">--分别使用 UNION 或者 OR 谓词,找出毛利率不足 30%或毛利率未知的商品.</span></span><br><span class="line"><span class="comment">-- 参考答案:</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line">  <span class="keyword">FROM</span> product </span><br><span class="line"> <span class="keyword">WHERE</span> sale_price <span class="operator">/</span> purchase_price <span class="operator">&lt;</span> <span class="number">1.3</span></span><br><span class="line"> </span><br><span class="line"> <span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line">  <span class="keyword">FROM</span> product </span><br><span class="line"> <span class="keyword">WHERE</span> sale_price <span class="operator">/</span> purchase_price <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure></li><li><p>包含重复行的UNION ALL</p><p>  需要不去重的并集, 在 UNION 的结果中保留重复行的语法其实非常简单,只需要在 UNION 后面添加 ALL 关键字就可以了.</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 商店决定对product表中利润低于50%和售价低于1000的商品提价</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line">  <span class="keyword">FROM</span> product </span><br><span class="line"> <span class="keyword">WHERE</span> sale_price <span class="operator">&lt;</span> <span class="number">1000</span></span><br><span class="line"> <span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line">  <span class="keyword">FROM</span> product </span><br><span class="line"> <span class="keyword">WHERE</span> sale_price <span class="operator">&lt;</span> <span class="number">1.5</span> <span class="operator">*</span> purchase_price</span><br></pre></td></tr></table></figure></li></ul></li><li><p>对称差</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 使用 NOT IN 实现两个表的差集</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line">  <span class="keyword">FROM</span> product</span><br><span class="line"> <span class="keyword">WHERE</span> product_id <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="keyword">SELECT</span> product_id <span class="keyword">FROM</span> product2)</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line">  <span class="keyword">FROM</span> product2</span><br><span class="line"> <span class="keyword">WHERE</span> product_id <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="keyword">SELECT</span> product_id <span class="keyword">FROM</span> product)</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>连结(JOIN)</p><p>  连结(JOIN)就是使用某种关联条件(一般是使用相等判断谓词”=”), 将其他表中的列添加过来, 进行“添加列”的集合运算。</p><ul><li><p>内连接(INNER JOIN)</p><p>  要点一: 进行连结时需要在 FROM 子句中使用多张表.</p><p>  要点二:必须使用 ON 子句来指定连结条件.</p><p>  要点三: SELECT 子句中的列最好按照 表名.列名 的格式来使用.</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--例子：</span></span><br><span class="line"><span class="keyword">SELECT</span>  SP.shop_id</span><br><span class="line">       ,SP.shop_name</span><br><span class="line">       ,SP.product_id</span><br><span class="line">       ,P.product_name</span><br><span class="line">       ,P.product_type</span><br><span class="line">       ,P.sale_price</span><br><span class="line">       ,SP.quantity</span><br><span class="line">  FROMshopproduct <span class="keyword">AS</span> SP</span><br><span class="line"> <span class="keyword">INNER</span> JOINproduct <span class="keyword">AS</span> P</span><br><span class="line">    <span class="keyword">ON</span> SP.product_id <span class="operator">=</span> P.product_id</span><br><span class="line"> <span class="keyword">WHERE</span> SP.shop_name <span class="operator">=</span> <span class="string">&#x27;东京&#x27;</span></span><br><span class="line">   <span class="keyword">AND</span> P.product_type <span class="operator">=</span> <span class="string">&#x27;衣服&#x27;</span> ;</span><br></pre></td></tr></table></figure></li><li><p>自连接</p><p>  一张表与自身作连结。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--例子：</span></span><br><span class="line"><span class="keyword">SELECT</span>  P1.product_id</span><br><span class="line">       ,P1.product_name</span><br><span class="line">       ,P1.product_type</span><br><span class="line">       ,P1.sale_price</span><br><span class="line">       ,P2.avg_price</span><br><span class="line">  <span class="keyword">FROM</span> product <span class="keyword">AS</span> P1</span><br><span class="line"> <span class="keyword">INNER</span> <span class="keyword">JOIN</span> </span><br><span class="line">   (<span class="keyword">SELECT</span> product_type,<span class="built_in">AVG</span>(sale_price) <span class="keyword">AS</span> avg_price </span><br><span class="line">      <span class="keyword">FROM</span> product </span><br><span class="line">     <span class="keyword">GROUP</span> <span class="keyword">BY</span> product_type) <span class="keyword">AS</span> P2 </span><br><span class="line">    <span class="keyword">ON</span> P1.product_type <span class="operator">=</span> P2.product_type</span><br><span class="line"> <span class="keyword">WHERE</span> P1.sale_price <span class="operator">&gt;</span> P2.avg_price;</span><br><span class="line"><span class="comment">--关联子查询：以表 A 为主表, 然后根据表 A 的关联列的每一行的取值,逐个到表 B 中的关联列中去查找取值相等的行.</span></span><br></pre></td></tr></table></figure></li><li><p>自然连结(NATURAL JOIN)</p><p>  自然连结并不是区别于内连结和外连结的第三种连结, 它其实是内连结的一种特例–当两个表进行自然连结时, 会按照两个表中都包含的列名来进行等值内连结, 此时无需使用 ON 来指定连接条件.</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--求表 product 和表 product2 中的公共部分, 可以用自然连结来实现:</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> product <span class="keyword">NATURAL</span> <span class="keyword">JOIN</span> product2</span><br></pre></td></tr></table></figure></li><li><p>外连结(OUTER JOIN)</p><p>  内连结会丢弃两张表中不满足 ON 条件的行,和内连结相对的就是外连结. 外连结会根据外连结的种类有选择地保留无法匹配到的行.</p><p>  按照保留的行位于哪张表,外连结有三种形式: 左连结, 右连结和全外连结.</p><ul><li><p>左连接</p><p>  保留写在做边的表。</p><p>  外连结要点 1: 选取出单张表中全部的信息</p><p>  外连结要点 2:使用 LEFT、RIGHT 来指定主表</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> SP.shop_id</span><br><span class="line">       ,SP.shop_name</span><br><span class="line">       ,SP.product_id</span><br><span class="line">       ,P.product_name</span><br><span class="line">       ,P.sale_price</span><br><span class="line">  FROMproduct <span class="keyword">AS</span> P</span><br><span class="line">  <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> JOINshopproduct <span class="keyword">AS</span> SP</span><br><span class="line">    <span class="keyword">ON</span> SP.product_id <span class="operator">=</span> P.product_id;</span><br></pre></td></tr></table></figure></li><li><p>非等值自左连结(SELF JOIN)</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--对每一种商品,找出售价不低于它的所有商品, 然后对售价不低于它的商品使用 COUNT 函数计数</span></span><br><span class="line"><span class="keyword">SELECT</span>  product_id</span><br><span class="line">       ,product_name</span><br><span class="line">       ,sale_price</span><br><span class="line">       ,<span class="built_in">COUNT</span>(p2_id) <span class="keyword">AS</span> rank_id</span><br><span class="line">  <span class="keyword">FROM</span> (<span class="comment">--使用自左连结对每种商品找出价格不低于它的商品</span></span><br><span class="line">        <span class="keyword">SELECT</span> P1.product_id</span><br><span class="line">               ,P1.product_name</span><br><span class="line">               ,P1.sale_price</span><br><span class="line">               ,P2.product_id <span class="keyword">AS</span> P2_id</span><br><span class="line">               ,P2.product_name <span class="keyword">AS</span> P2_name</span><br><span class="line">               ,P2.sale_price <span class="keyword">AS</span> P2_price </span><br><span class="line">          <span class="keyword">FROM</span> product <span class="keyword">AS</span> P1 </span><br><span class="line">          <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> product <span class="keyword">AS</span> P2 </span><br><span class="line">            <span class="keyword">ON</span> P1.sale_price <span class="operator">&lt;=</span> P2.sale_price </span><br><span class="line">        ) <span class="keyword">AS</span> X</span><br><span class="line"> <span class="keyword">GROUP</span> <span class="keyword">BY</span> product_id, product_name, sale_price</span><br><span class="line"> <span class="keyword">ORDER</span> <span class="keyword">BY</span> rank_id;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>交叉连结—— CROSS JOIN(笛卡尔积)</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 1.使用关键字 CROSS JOIN 显式地进行交叉连结</span></span><br><span class="line"><span class="keyword">SELECT</span> SP.shop_id</span><br><span class="line">       ,SP.shop_name</span><br><span class="line">       ,SP.product_id</span><br><span class="line">       ,P.product_name</span><br><span class="line">       ,P.sale_price</span><br><span class="line">  FROMshopproduct <span class="keyword">AS</span> SP</span><br><span class="line"> <span class="keyword">CROSS</span> JOINproduct <span class="keyword">AS</span> P;</span><br><span class="line"><span class="comment">--2.使用逗号分隔两个表,并省略 ON 子句</span></span><br><span class="line"><span class="keyword">SELECT</span> SP.shop_id</span><br><span class="line">       ,SP.shop_name</span><br><span class="line">       ,SP.product_id</span><br><span class="line">       ,P.product_name</span><br><span class="line">       ,P.sale_price</span><br><span class="line">  FROMshopproduct <span class="keyword">AS</span> SP ,product <span class="keyword">AS</span> P;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>练习题</p><ul><li><p>4.1</p><p>  找出 product 和 product2 中售价高于 500 的商品的基本信息。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> product <span class="keyword">WHERE</span> sale_price<span class="operator">&gt;</span><span class="number">500</span> </span><br><span class="line"><span class="keyword">UNION</span> </span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> product2 <span class="keyword">WHERE</span> sale_price<span class="operator">&gt;</span><span class="number">500</span></span><br></pre></td></tr></table></figure></li><li><p>4.2</p><p>  借助对称差的实现方式, 求product和product2的交集。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> product <span class="keyword">union</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> product2) <span class="keyword">as</span> u</span><br><span class="line"><span class="keyword">where</span> product_id <span class="keyword">not</span> <span class="keyword">in</span> (</span><br><span class="line"><span class="keyword">select</span> product_id <span class="keyword">from</span> product <span class="keyword">where</span> product_id <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> product_id <span class="keyword">from</span> product2)</span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> product_id <span class="keyword">from</span> product2 <span class="keyword">where</span> product_id <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> product_id <span class="keyword">from</span> product)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>4.3</p><p>  每类商品中售价最高的商品都在哪些商店有售 ？</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> sp.shop_id, sp.shop_name, sp.quantity,</span><br><span class="line">        p.product_id, p.product_name, p.product_type, p.sale_price,</span><br><span class="line">        mp.maxp <span class="keyword">as</span> <span class="string">&#x27;该类商品的最大售价&#x27;</span> </span><br><span class="line"><span class="keyword">from</span> product <span class="keyword">as</span> p </span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> shopproduct <span class="keyword">as</span> sp </span><br><span class="line"><span class="keyword">on</span> sp.product_id <span class="operator">=</span> p.product_id</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> (</span><br><span class="line"><span class="keyword">select</span> product_type, <span class="built_in">max</span>(sale_price) <span class="keyword">as</span> maxp <span class="keyword">from</span> product </span><br><span class="line">            <span class="keyword">group</span> <span class="keyword">by</span> product_type</span><br><span class="line">            ) <span class="keyword">as</span> mp</span><br><span class="line"><span class="keyword">on</span> mp.product_type <span class="operator">=</span> p.product_type <span class="keyword">and</span> p.sale_price <span class="operator">=</span> mp.maxp;</span><br></pre></td></tr></table></figure></li><li><p>4.4</p><p>  分别使用内连结和关联子查询每一类商品中售价最高的商品。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--内连接</span></span><br><span class="line"><span class="keyword">select</span> p.product_id, p.product_name, p.product_type, p.sale_price</span><br><span class="line"><span class="keyword">from</span> product <span class="keyword">as</span> p </span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> (</span><br><span class="line"><span class="keyword">select</span> product_type, <span class="built_in">max</span>(sale_price) <span class="keyword">as</span> maxp <span class="keyword">from</span> product </span><br><span class="line">            <span class="keyword">group</span> <span class="keyword">by</span> product_type</span><br><span class="line">            ) <span class="keyword">as</span> mp</span><br><span class="line"><span class="keyword">on</span> mp.product_type <span class="operator">=</span> p.product_type <span class="keyword">and</span> p.sale_price <span class="operator">=</span> mp.maxp;</span><br><span class="line"><span class="comment">--关联子查询</span></span><br><span class="line"><span class="keyword">select</span> p.product_id,p.product_name,p.product_type,p.sale_price <span class="keyword">from</span> product <span class="keyword">as</span> p</span><br><span class="line"><span class="keyword">where</span> sale_pirce<span class="operator">=</span>(</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(sale_price) <span class="keyword">from</span> product <span class="keyword">as</span> p1 </span><br><span class="line"><span class="keyword">where</span> p.product_type<span class="operator">=</span>p1.product_type);</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li><p>4.5</p><p>  用关联子查询实现：在<strong><code>product</code></strong>表中，取出 product_id, product_name, slae_price, 并按照商品的售价从低到高进行排序、对售价进行累计求和。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> p.product_id, p.product_name, p.product_type, p.sale_price,</span><br><span class="line">(<span class="keyword">select</span> <span class="built_in">sum</span>(sale_price) <span class="keyword">from</span> product <span class="keyword">as</span> p1</span><br><span class="line"><span class="keyword">where</span> p.sale_price <span class="operator">&gt;=</span> p1.sale_price</span><br><span class="line">) <span class="keyword">as</span> <span class="string">&#x27;累计求和&#x27;</span></span><br><span class="line"><span class="keyword">from</span> product <span class="keyword">as</span> p </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> sale_price;</span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL基础 </tag>
            
            <tag> 训练营 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里AI训练营SQL入门与实践task3</title>
      <link href="/2021/12/23/%E9%98%BF%E9%87%8C%E4%BA%91AI%E8%AE%AD%E7%BB%83%E8%90%A5SQL%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5%20Task3_%E8%A7%86%E5%9B%BE%E3%80%81%E5%AD%90%E6%9F%A5%E8%AF%A2%E3%80%81%E5%87%BD%E6%95%B0%E7%AD%89/"/>
      <url>/2021/12/23/%E9%98%BF%E9%87%8C%E4%BA%91AI%E8%AE%AD%E7%BB%83%E8%90%A5SQL%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5%20Task3_%E8%A7%86%E5%9B%BE%E3%80%81%E5%AD%90%E6%9F%A5%E8%AF%A2%E3%80%81%E5%87%BD%E6%95%B0%E7%AD%89/</url>
      
        <content type="html"><![CDATA[<ul><li><p>视图</p><ul><li><p>视图是什么</p><p>  视图是一个虚拟的表，视图是依据SELECT语句来创建的，所以操作视图时会根据创建视图的SELECT语句生成一张虚拟表，然后在这张虚拟表上做SQL操作。</p><p>  [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-Rfsg9YGW-1640072423323)(<a href="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/60b35bc3-7acb-4e53-a896-b45d321aa244/Untitled.png">https://s3-us-west-2.amazonaws.com/secure.notion-static.com/60b35bc3-7acb-4e53-a896-b45d321aa244/Untitled.png</a>)]</p></li><li><p>视图存在的意义</p><ol><li>通过定义视图可以将频繁使用的SELECT语句保存以提高效率。</li><li>通过定义视图可以使用户看到的数据更加清晰。</li><li>通过定义视图可以不对外公开数据表全部字段，增强数据的保密性。</li><li>通过定义视图可以降低数据的冗余。</li></ol></li><li><p>视图的操作</p><ul><li><p>创建视图</p><ul><li><p>语法</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> <span class="operator">&lt;</span>视图名称<span class="operator">&gt;</span>(<span class="operator">&lt;</span>列名<span class="number">1</span><span class="operator">&gt;</span>,<span class="operator">&lt;</span>列名<span class="number">2</span><span class="operator">&gt;</span>,...) <span class="keyword">AS</span> <span class="operator">&lt;</span><span class="keyword">SELECT</span>语句<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>注意事项</p><p>  1.SELECT 语句中列的排列顺序和视图中列的排列顺序相同</p><p>  2.视图不仅可以基于真实表，也可以在视图的基础上继续创建视图。(不建议)</p><p>  3.一般的DBMS中定义视图时不能使用ORDER BY语句。(mysql可以)</p><p>  4.视图表名要是唯一的。</p></li><li><p>基于单表的视图</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> productsum (product_type, cnt_product)</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> product_type, <span class="built_in">COUNT</span>(<span class="operator">*</span>)</span><br><span class="line">  <span class="keyword">FROM</span> product</span><br><span class="line"> <span class="keyword">GROUP</span> <span class="keyword">BY</span> product_type ;</span><br></pre></td></tr></table></figure><p>  [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-HmGQUqO7-1640072423327)(<a href="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/ef67eb7c-4198-4249-8cd4-29b5b3999683/Untitled.png">https://s3-us-west-2.amazonaws.com/secure.notion-static.com/ef67eb7c-4198-4249-8cd4-29b5b3999683/Untitled.png</a>)]</p></li><li><p>基于多表的视图</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> view_shop_product(product_type, sale_price, shop_name)</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> product_type, sale_price, shop_name</span><br><span class="line">  <span class="keyword">FROM</span> product,</span><br><span class="line">       shop_product</span><br><span class="line"> <span class="keyword">WHERE</span> product.product_id <span class="operator">=</span> shop_product.product_id;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>修改视图结构</p><ul><li><p>语法：</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">VIEW</span> <span class="operator">&lt;</span>视图名<span class="operator">&gt;</span> <span class="keyword">AS</span> <span class="operator">&lt;</span><span class="keyword">SELECT</span>语句<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>例子：</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">VIEW</span> productSum</span><br><span class="line">    <span class="keyword">AS</span></span><br><span class="line">        <span class="keyword">SELECT</span> product_type, sale_price</span><br><span class="line">          <span class="keyword">FROM</span> Product</span><br><span class="line">         <span class="keyword">WHERE</span> regist_date <span class="operator">&gt;</span> <span class="string">&#x27;2009-09-11&#x27;</span>;</span><br></pre></td></tr></table></figure><p>  [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-oPm1rAMR-1640072423329)(<a href="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/fd070f3d-ae9c-4d49-8891-aa9c16291b73/Untitled.png">https://s3-us-west-2.amazonaws.com/secure.notion-static.com/fd070f3d-ae9c-4d49-8891-aa9c16291b73/Untitled.png</a>)]</p></li></ul></li><li><p>更新视图内容</p><ul><li>对于一个视图来说，如果包含以下结构的任意一种都是不可以被更新的：<ul><li>聚合函数 SUM()、MIN()、MAX()、COUNT() 等。</li><li>DISTINCT 关键字。</li><li>GROUP BY 子句。</li><li>HAVING 子句。</li><li>UNION 或 UNION ALL 运算符。</li><li>FROM 子句中包含多个表。</li></ul></li><li><p>例子：</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> productsum</span><br><span class="line">   <span class="keyword">SET</span> sale_price <span class="operator">=</span> <span class="string">&#x27;5000&#x27;</span></span><br><span class="line"> <span class="keyword">WHERE</span> product_type <span class="operator">=</span> <span class="string">&#x27;办公用品&#x27;</span>;</span><br></pre></td></tr></table></figure><p>  更新视图数据，相关原表的数据也会更新，不过只能修改透过窗口能看到的内容。(因此不建议通过视图来修改表)</p></li></ul></li><li><p>删除视图</p><ul><li><p>语法：</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span> <span class="operator">&lt;</span>视图名<span class="number">1</span><span class="operator">&gt;</span> [ , <span class="operator">&lt;</span>视图名<span class="number">2</span><span class="operator">&gt;</span> …]</span><br></pre></td></tr></table></figure></li><li><p>例子：</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span> productSum;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul></li><li><p>子查询</p><ul><li><p>什么是子查询</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> stu_name</span><br><span class="line"><span class="keyword">FROM</span> (</span><br><span class="line">         <span class="keyword">SELECT</span> stu_name, <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> stu_cnt</span><br><span class="line">          <span class="keyword">FROM</span> students_info</span><br><span class="line">          <span class="keyword">GROUP</span> <span class="keyword">BY</span> stu_age) <span class="keyword">AS</span> studentSum;</span><br></pre></td></tr></table></figure><p>  子查询指一个查询语句嵌套在另一个查询语句内部的查询，在 SELECT 子句中先计算子查询，子查询结果作为外层另一个查询的过滤条件，查询可以基于一个表或者多个表。</p></li><li><p>子查询和视图的关系</p><p>  子查询是一次性的，而视图是存储在介质中的。</p></li><li><p>嵌套子查询</p><p>  一个子查询嵌套一个子查询,尽量避免使用。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--例子：</span></span><br><span class="line"><span class="keyword">SELECT</span> product_type, cnt_product</span><br><span class="line"><span class="keyword">FROM</span> (<span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">        <span class="keyword">FROM</span> (<span class="keyword">SELECT</span> product_type, </span><br><span class="line">                      <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> cnt_product</span><br><span class="line">                <span class="keyword">FROM</span> product </span><br><span class="line">               <span class="keyword">GROUP</span> <span class="keyword">BY</span> product_type) <span class="keyword">AS</span> productsum</span><br><span class="line">       <span class="keyword">WHERE</span> cnt_product <span class="operator">=</span> <span class="number">4</span>) <span class="keyword">AS</span> productsum2;</span><br></pre></td></tr></table></figure></li><li><p>标量子查询</p><p>  返回表中具体的某一行的某一列数据</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--例子：如下表格</span></span><br><span class="line">product_id <span class="operator">|</span> product_name <span class="operator">|</span> sale_price </span><br><span class="line"><span class="comment">------------+-------------+----------</span></span><br><span class="line"><span class="number">0003</span>       <span class="operator">|</span> 运动T恤       <span class="operator">|</span> <span class="number">4000</span> </span><br><span class="line"><span class="number">0004</span>       <span class="operator">|</span> 菜刀          <span class="operator">|</span> <span class="number">3000</span> </span><br><span class="line"><span class="number">0005</span>       <span class="operator">|</span> 高压锅        <span class="operator">|</span> <span class="number">6800</span></span><br><span class="line"><span class="comment">--执行一次标量子查询后是要返回类似于，“0004”，“菜刀”这样的结果。</span></span><br></pre></td></tr></table></figure><p>  由于标量子查询的特性，导致标量子查询不仅仅局限于 WHERE 子句中，通常任何可以使用单一值的位置都可以使用。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--例子：</span></span><br><span class="line"><span class="keyword">SELECT</span> product_id,</span><br><span class="line">       product_name,</span><br><span class="line">       sale_price,</span><br><span class="line">       (<span class="keyword">SELECT</span> <span class="built_in">AVG</span>(sale_price)</span><br><span class="line">          <span class="keyword">FROM</span> product) <span class="keyword">AS</span> avg_price</span><br><span class="line">  <span class="keyword">FROM</span> product;</span><br></pre></td></tr></table></figure></li><li><p>关联子查询</p><p>  关联子查询就是通过一些标志将内外两层的查询连接起来起到过滤数据的目的。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--例子：选取出各商品种类中高于该商品种类的平均销售单价的商品</span></span><br><span class="line"><span class="keyword">SELECT</span> product_type, product_name, sale_price</span><br><span class="line">  <span class="keyword">FROM</span> product ASp1</span><br><span class="line"> <span class="keyword">WHERE</span> sale_price <span class="operator">&gt;</span> (<span class="keyword">SELECT</span> <span class="built_in">AVG</span>(sale_price)</span><br><span class="line">   <span class="keyword">FROM</span> product ASp2</span><br><span class="line">                      <span class="keyword">WHERE</span> p1.product_type <span class="operator">=</span>p2.product_type</span><br><span class="line">   <span class="keyword">GROUP</span> <span class="keyword">BY</span> product_type);</span><br></pre></td></tr></table></figure><p>  关联子查询<a href="https://zhuanlan.zhihu.com/p/41844742?spm=5176.21852664.0.0.5c6b11b7ksTLVC">执行过程</a>：</p><ol><li>首先执行不带WHERE的主查询</li><li>根据主查询讯结果匹配product_type，获取子查询结果</li><li>将子查询结果再与主查询结合执行完整的SQL语句</li></ol></li></ul></li><li><p>函数</p><p>  所谓函数，类似一个黑盒子，你给它一个输入值，它便按照预设的程序定义给出返回值，输入值称为参数。</p><ul><li><p>算术函数</p><ul><li><p><strong>ABS</strong>-绝对值</p><p>  ABS函数用于计算也该数字的绝对值，表示一个数到原点的距离。(NULL的绝对值也是NULL)</p></li><li><p><strong>MOD</strong>-求余数</p><p>  语法：<strong><code>MOD( 被除数，除数 )</code></strong></p></li><li><p><strong>ROUND</strong>-四舍五入</p><p>  语法：<strong><code>ROUND( 对象数值，保留小数的位数 )</code></strong></p></li><li><p>例子：</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> m,</span><br><span class="line"><span class="built_in">ABS</span>(m)ASabs_col ,</span><br><span class="line">n, p,</span><br><span class="line"><span class="built_in">MOD</span>(n, p) <span class="keyword">AS</span> mod_col,</span><br><span class="line">ROUND(m,<span class="number">1</span>)ASround_colS</span><br><span class="line"><span class="keyword">FROM</span> samplemath;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>字符串函数</p><ul><li><p><strong>CONCAT</strong>-拼接</p><p>  语法：<strong><code>CONCAT(str1, str2, str3)</code></strong></p><p>  MySQL中使用 CONCAT 函数进行拼接。</p></li><li><p><strong>LENGTH</strong>-字符串长度</p><p>  语法：<strong><code>LENGTH( 字符串 )</code></strong></p></li><li><p><strong>LOWER</strong>-小写转换</p><p>  LOWER 函数只能针对英文字母使用，它会将参数中的字符串全都转换为小写。</p></li><li><p><strong>REPLACE</strong>-字符串的替换</p><p>  语法：<strong><code>REPLACE( 对象字符串，替换前的字符串，替换后的字符串 )</code></strong></p></li><li><p><strong>SUBSTRING</strong>-字符串的截取</p><p>  语法：<strong><code>SUBSTRING （对象字符串 FROM 截取的起始位置 FOR 截取的字符数）</code></strong></p><p>  使用 SUBSTRING 函数 可以截取出字符串中的一部分字符串。截取的起始位置从字符串最左侧开始计算，索引值起始为1。</p></li><li><p><strong>SUBSTRING_INDEX –</strong> 字符串按索引截取</p><p>  语法：<strong><code>SUBSTRING_INDEX (原始字符串， 分隔符，n)</code></strong></p><p>  该函数用来获取原始字符串按照分隔符分割后，第 n 个分隔符之前（或之后）的子字符串</p></li></ul></li><li><p>日期函数</p><ul><li><p>CURRENT-获取当前日期</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CURRENT_DATE</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">CURRENT_DATE</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2020</span><span class="number">-08</span><span class="number">-08</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li><li><p>CURRENT_TIME-当前时间</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CURRENT_TIME</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">CURRENT_TIME</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">17</span>:<span class="number">26</span>:<span class="number">09</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li><li><p>CURRNT_TIMESTAMP-当前日期和时间</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CURRENT_TIMESTAMP</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">CURRENT_TIMESTAMP</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2020</span><span class="number">-08</span><span class="number">-08</span> <span class="number">17</span>:<span class="number">27</span>:<span class="number">07</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li><li><p>EXTRACT-截取日期元素</p><p>  语法：<strong><code>EXTRACT(日期元素 FROM 日期)</code></strong></p><p>  使用 EXTRACT 函数可以截取出日期数据中的一部分，例如“年”</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CURRENT_TIMESTAMP</span> <span class="keyword">as</span> now,</span><br><span class="line"><span class="built_in">EXTRACT</span>(<span class="keyword">YEAR</span>   <span class="keyword">FROM</span> <span class="built_in">CURRENT_TIMESTAMP</span>) <span class="keyword">AS</span> <span class="keyword">year</span>,</span><br><span class="line"><span class="built_in">EXTRACT</span>(<span class="keyword">MONTH</span>  <span class="keyword">FROM</span> <span class="built_in">CURRENT_TIMESTAMP</span>) <span class="keyword">AS</span> <span class="keyword">month</span>,</span><br><span class="line"><span class="built_in">EXTRACT</span>(<span class="keyword">DAY</span>    <span class="keyword">FROM</span> <span class="built_in">CURRENT_TIMESTAMP</span>) <span class="keyword">AS</span> <span class="keyword">day</span>,</span><br><span class="line"><span class="built_in">EXTRACT</span>(<span class="keyword">HOUR</span>   <span class="keyword">FROM</span> <span class="built_in">CURRENT_TIMESTAMP</span>) <span class="keyword">AS</span> <span class="keyword">hour</span>,</span><br><span class="line"><span class="built_in">EXTRACT</span>(<span class="keyword">MINUTE</span> <span class="keyword">FROM</span> <span class="built_in">CURRENT_TIMESTAMP</span>) <span class="keyword">AS</span> <span class="keyword">MINute</span>,</span><br><span class="line"><span class="built_in">EXTRACT</span>(<span class="keyword">SECOND</span> <span class="keyword">FROM</span> <span class="built_in">CURRENT_TIMESTAMP</span>) <span class="keyword">AS</span> <span class="keyword">second</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------+-------+------+------+--------+--------+</span></span><br><span class="line"><span class="operator">|</span> now                 <span class="operator">|</span> <span class="keyword">year</span> <span class="operator">|</span> <span class="keyword">month</span> <span class="operator">|</span> <span class="keyword">day</span>  <span class="operator">|</span> <span class="keyword">hour</span> <span class="operator">|</span> <span class="keyword">MINute</span> <span class="operator">|</span> <span class="keyword">second</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------+-------+------+------+--------+--------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2020</span><span class="number">-08</span><span class="number">-08</span> <span class="number">17</span>:<span class="number">34</span>:<span class="number">38</span> <span class="operator">|</span> <span class="number">2020</span> <span class="operator">|</span>     <span class="number">8</span> <span class="operator">|</span>    <span class="number">8</span> <span class="operator">|</span>   <span class="number">17</span> <span class="operator">|</span>     <span class="number">34</span> <span class="operator">|</span>     <span class="number">38</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+------+-------+------+------+--------+--------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>转换函数</p><p>  “转换”这个词的含义非常广泛，在 SQL 中主要有两层意思：一是数据类型的转换，简称为类型转换，在英语中称为<strong><code>cast</code></strong>；另一层意思是值的转换。</p><ul><li><p>CAST-类型转换</p><p>  语法：<strong><code>CAST（转换前的值 AS 想要转换的数据类型）</code></strong></p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 将字符串类型转换为数值类型</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="string">&#x27;0001&#x27;</span> <span class="keyword">AS</span> SIGNED <span class="type">INTEGER</span>) <span class="keyword">AS</span> int_col;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------+</span></span><br><span class="line"><span class="operator">|</span> int_col <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+</span></span><br><span class="line"><span class="operator">|</span>       <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"><span class="comment">-- 将字符串类型转换为日期类型</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CAST</span>(<span class="string">&#x27;2009-12-14&#x27;</span> <span class="keyword">AS</span> <span class="type">DATE</span>) <span class="keyword">AS</span> date_col;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------+</span></span><br><span class="line"><span class="operator">|</span> date_col   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">2009</span><span class="number">-12</span><span class="number">-14</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li><li><p>COALESCE – 将NULL转换为其他值</p><p>  语法：<strong><code>COALESCE(数据1，数据2，数据3……)</code></strong></p><p>  COALESCE 是 SQL 特有的函数。该函数会返回可变参数 A 中左侧开始第1个不是NULL的值。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COALESCE</span>(<span class="keyword">NULL</span>, <span class="number">11</span>) <span class="keyword">AS</span> col_1,</span><br><span class="line"><span class="built_in">COALESCE</span>(<span class="keyword">NULL</span>, <span class="string">&#x27;hello world&#x27;</span>, <span class="keyword">NULL</span>) <span class="keyword">AS</span> col_2,</span><br><span class="line"><span class="built_in">COALESCE</span>(<span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;2020-11-01&#x27;</span>) <span class="keyword">AS</span> col_3;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------------+------------+</span></span><br><span class="line"><span class="operator">|</span> col_1 <span class="operator">|</span> col_2       <span class="operator">|</span> col_3      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------------+------------+</span></span><br><span class="line"><span class="operator">|</span>    <span class="number">11</span> <span class="operator">|</span> hello world <span class="operator">|</span> <span class="number">2020</span><span class="number">-11</span><span class="number">-01</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+-------------+------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>谓词</p><p>  谓词就是返回值为真值的函数。包括<strong><code>TRUE / FALSE / UNKNOWN</code></strong>。</p><p>  谓词主要有以下几个：</p><ul><li><p><strong>LIKE</strong>-用于字符串的模糊查询</p><p>  <strong><code>_</code></strong>下划线匹配任意 1 个字符</p><p>  <code>%</code> 匹配任意个任意字符</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--例子：查询ddd开头的数据</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> samplelike</span><br><span class="line"><span class="keyword">WHERE</span> strcol <span class="keyword">LIKE</span> <span class="string">&#x27;ddd%&#x27;</span>;</span><br><span class="line"><span class="comment">--例子：查询中间有ddd的数据</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> samplelike</span><br><span class="line"><span class="keyword">WHERE</span> strcol <span class="keyword">LIKE</span> <span class="string">&#x27;%ddd%&#x27;</span>;</span><br><span class="line"><span class="comment">--查询结尾有ddd的数据</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> samplelike</span><br><span class="line"><span class="keyword">WHERE</span> strcol <span class="keyword">LIKE</span> <span class="string">&#x27;%ddd&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p><strong>BETWEEN</strong>– 用于范围查询</p><p>  使用 BETWEEN 可以进行范围查询，包含临界值。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 选取销售单价为100～ 1000元的商品</span></span><br><span class="line"><span class="keyword">SELECT</span> product_name, sale_price</span><br><span class="line"><span class="keyword">FROM</span> product</span><br><span class="line"><span class="keyword">WHERE</span> sale_price <span class="keyword">BETWEEN</span> <span class="number">100</span> <span class="keyword">AND</span> <span class="number">1000</span>;</span><br></pre></td></tr></table></figure></li><li><p><strong>IS NULL</strong>、<strong>IS NOT NULL</strong>– 用于判断是否为NULL</p><p>  为了选取出某些值为 NULL 的列的数据，不能使用 =，而只能使用特定的谓词IS NULL。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> product_name, purchase_price</span><br><span class="line"><span class="keyword">FROM</span> product</span><br><span class="line"><span class="keyword">WHERE</span> purchase_price <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+----------------+</span></span><br><span class="line"><span class="operator">|</span> product_name <span class="operator">|</span> purchase_price <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+----------------+</span></span><br><span class="line"><span class="operator">|</span> 叉子         <span class="operator">|</span>           <span class="keyword">NULL</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 圆珠笔       <span class="operator">|</span>           <span class="keyword">NULL</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+----------------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li><li><p><strong>NOT IN</strong>、<strong>IN</strong>– OR的简便用法</p><p>  IN 谓词（NOT IN 谓词）具有其他谓词所没有的用法，那就是可以使用子查询作为其参数。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> product_name, purchase_price</span><br><span class="line"><span class="keyword">FROM</span> product</span><br><span class="line"><span class="keyword">WHERE</span> purchase_price <span class="keyword">IN</span> (<span class="number">320</span>, <span class="number">500</span>, <span class="number">5000</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+----------------+</span></span><br><span class="line"><span class="operator">|</span> product_name <span class="operator">|</span> purchase_price <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+----------------+</span></span><br><span class="line"><span class="operator">|</span> T恤          <span class="operator">|</span>            <span class="number">500</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 打孔器       <span class="operator">|</span>            <span class="number">320</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 高压锅       <span class="operator">|</span>           <span class="number">5000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+----------------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> product_name, sale_price</span><br><span class="line"><span class="keyword">FROM</span> product</span><br><span class="line"><span class="keyword">WHERE</span> product_id <span class="keyword">IN</span> (<span class="keyword">SELECT</span> product_id</span><br><span class="line">  <span class="keyword">FROM</span> shopproduct</span><br><span class="line">                       <span class="keyword">WHERE</span> shop_id <span class="operator">=</span> <span class="string">&#x27;000C&#x27;</span>);</span><br></pre></td></tr></table></figure><p>  需要注意的是，在使用IN 和 NOT IN 时是无法选取出NULL数据的。</p></li><li><p><strong>EXISTS</strong></p><p>  谓词的作用就是 <strong>“判断是否存在满足某种条件的记录”</strong>。</p><p>  EXIST 只需要在右侧书写 1 个参数，该参数通常都会是一个关联子查询。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--商店编号（shop_id）为 &#x27;000C&#x27;，商品（product）表和商店商品（shopproduct）表中商品编号（product_id）相同</span></span><br><span class="line"><span class="keyword">SELECT</span> product_name, sale_price</span><br><span class="line">  <span class="keyword">FROM</span> product <span class="keyword">AS</span> p</span><br><span class="line"> <span class="keyword">WHERE</span> <span class="keyword">EXISTS</span> (<span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">                 <span class="keyword">FROM</span> shopproduct <span class="keyword">AS</span> sp</span><br><span class="line">                <span class="keyword">WHERE</span> sp.shop_id <span class="operator">=</span> <span class="string">&#x27;000C&#x27;</span></span><br><span class="line">                  <span class="keyword">AND</span> sp.product_id <span class="operator">=</span> p.product_id);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>CASE表达式</p><ul><li><p>概念</p><p>  CASE 表达式是在区分情况时使用的，这种情况的区分在编程中通常称为（条件）分支</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--语法：</span></span><br><span class="line"><span class="keyword">CASE</span> <span class="keyword">WHEN</span> <span class="operator">&lt;</span>求值表达式<span class="operator">&gt;</span> <span class="keyword">THEN</span> <span class="operator">&lt;</span>表达式<span class="operator">&gt;</span></span><br><span class="line">     <span class="keyword">WHEN</span> <span class="operator">&lt;</span>求值表达式<span class="operator">&gt;</span> <span class="keyword">THEN</span> <span class="operator">&lt;</span>表达式<span class="operator">&gt;</span></span><br><span class="line">     <span class="keyword">WHEN</span> <span class="operator">&lt;</span>求值表达式<span class="operator">&gt;</span> <span class="keyword">THEN</span> <span class="operator">&lt;</span>表达式<span class="operator">&gt;</span></span><br><span class="line">     .</span><br><span class="line">     .</span><br><span class="line">     .</span><br><span class="line"><span class="keyword">ELSE</span> <span class="operator">&lt;</span>表达式<span class="operator">&gt;</span></span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"><span class="comment">--依次判断 when 表达式是否为真值，是则执行 THEN 后的语句，如果所有的 when 表达式均为假，则执行 ELSE 后的语句。</span></span><br><span class="line"><span class="comment">--无论多么庞大的 CASE 表达式，最后也只会返回一个值。</span></span><br></pre></td></tr></table></figure></li><li><p>应用场景：<strong>根据不同分支得到不同列值</strong></p><p>  CASE 表达式最后的“END”是不能省略的</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span>  product_name,</span><br><span class="line">        <span class="keyword">CASE</span> <span class="keyword">WHEN</span> product_type <span class="operator">=</span> <span class="string">&#x27;衣服&#x27;</span> <span class="keyword">THEN</span> CONCAT(<span class="string">&#x27;A ： &#x27;</span>,product_type)</span><br><span class="line">             <span class="keyword">WHEN</span> product_type <span class="operator">=</span> <span class="string">&#x27;办公用品&#x27;</span>  <span class="keyword">THEN</span> CONCAT(<span class="string">&#x27;B ： &#x27;</span>,product_type)</span><br><span class="line">             <span class="keyword">WHEN</span> product_type <span class="operator">=</span> <span class="string">&#x27;厨房用具&#x27;</span>  <span class="keyword">THEN</span> CONCAT(<span class="string">&#x27;C ： &#x27;</span>,product_type)</span><br><span class="line">             <span class="keyword">ELSE</span> <span class="keyword">NULL</span></span><br><span class="line">        <span class="keyword">END</span> <span class="keyword">AS</span> abc_product_type</span><br><span class="line">  <span class="keyword">FROM</span>  product;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+------------------+</span></span><br><span class="line"><span class="operator">|</span> product_name <span class="operator">|</span> abc_product_type <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+------------------+</span></span><br><span class="line"><span class="operator">|</span> T恤          <span class="operator">|</span> A ： 衣服        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 打孔器       <span class="operator">|</span> B ： 办公用品    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 运动T恤      <span class="operator">|</span> A ： 衣服        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 菜刀         <span class="operator">|</span> C ： 厨房用具    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 高压锅       <span class="operator">|</span> C ： 厨房用具    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 叉子         <span class="operator">|</span> C ： 厨房用具    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 擦菜板       <span class="operator">|</span> C ： 厨房用具    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 圆珠笔       <span class="operator">|</span> B ： 办公用品    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+------------------+</span></span><br><span class="line"><span class="number">8</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li><li><p>应用场景2：<strong>实现列方向上的聚合</strong></p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> product_type,</span><br><span class="line">       <span class="built_in">SUM</span>(sale_price) <span class="keyword">AS</span> sum_price</span><br><span class="line">  <span class="keyword">FROM</span> product</span><br><span class="line"> <span class="keyword">GROUP</span> <span class="keyword">BY</span> product_type;  </span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> product_type <span class="operator">|</span> sum_price <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> 衣服         <span class="operator">|</span>      <span class="number">5000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 办公用品      <span class="operator">|</span>       <span class="number">600</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 厨房用具      <span class="operator">|</span>     <span class="number">11180</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------+-----------+</span></span><br><span class="line"><span class="number">3</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 对按照商品种类计算出的销售单价合计值进行行列转换</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> product_type <span class="operator">=</span> <span class="string">&#x27;衣服&#x27;</span> <span class="keyword">THEN</span> sale_price <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>) <span class="keyword">AS</span> sum_price_clothes,</span><br><span class="line">       <span class="built_in">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> product_type <span class="operator">=</span> <span class="string">&#x27;厨房用具&#x27;</span> <span class="keyword">THEN</span> sale_price <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>) <span class="keyword">AS</span> sum_price_kitchen,</span><br><span class="line">       <span class="built_in">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> product_type <span class="operator">=</span> <span class="string">&#x27;办公用品&#x27;</span> <span class="keyword">THEN</span> sale_price <span class="keyword">ELSE</span> <span class="number">0</span> <span class="keyword">END</span>) <span class="keyword">AS</span> sum_price_office</span><br><span class="line">  <span class="keyword">FROM</span> product;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+-------------------+------------------+</span></span><br><span class="line"><span class="operator">|</span> sum_price_clothes <span class="operator">|</span> sum_price_kitchen <span class="operator">|</span> sum_price_office <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+-------------------+------------------+</span></span><br><span class="line"><span class="operator">|</span>              <span class="number">5000</span> <span class="operator">|</span>             <span class="number">11180</span> <span class="operator">|</span>              <span class="number">600</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------+-------------------+------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li><li><p>应用场景3：<strong>实现行转列</strong></p><p>  假设有如下图表的结构</p><p>  <img src="https://img-blog.csdnimg.cn/img_convert/487e38a2c364f4c830cb7cdc42fc4500.png" alt="https://img.alicdn.com/imgextra/i1/O1CN01IMBZDB1q7gojkvNse_!!6000000005449-2-tps-219-136.png"></p><p>  计划得到如下的图表结构</p><p>  <img src="https://img-blog.csdnimg.cn/img_convert/30021ddb40cf25eeb9990b5b0a61b580.png" alt="https://img.alicdn.com/imgextra/i4/O1CN01If3OFs1SfXJOk69gs_!!6000000002274-2-tps-291-60.png"></p><p>  聚合函数 + CASE WHEN 表达式即可实现该转换</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- CASE WHEN 实现数字列 score 行转列</span></span><br><span class="line"><span class="keyword">SELECT</span> name,</span><br><span class="line">       <span class="built_in">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> subject <span class="operator">=</span> <span class="string">&#x27;语文&#x27;</span> <span class="keyword">THEN</span> score <span class="keyword">ELSE</span> <span class="keyword">null</span> <span class="keyword">END</span>) <span class="keyword">as</span> chinese,</span><br><span class="line">       <span class="built_in">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> subject <span class="operator">=</span> <span class="string">&#x27;数学&#x27;</span> <span class="keyword">THEN</span> score <span class="keyword">ELSE</span> <span class="keyword">null</span> <span class="keyword">END</span>) <span class="keyword">as</span> math,</span><br><span class="line">       <span class="built_in">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> subject <span class="operator">=</span> <span class="string">&#x27;外语&#x27;</span> <span class="keyword">THEN</span> score <span class="keyword">ELSE</span> <span class="keyword">null</span> <span class="keyword">END</span>) <span class="keyword">as</span> english</span><br><span class="line">  <span class="keyword">FROM</span> score</span><br><span class="line"> <span class="keyword">GROUP</span> <span class="keyword">BY</span> name;</span><br><span class="line"><span class="operator">+</span><span class="comment">------+---------+------+---------+</span></span><br><span class="line"><span class="operator">|</span> name <span class="operator">|</span> chinese <span class="operator">|</span> math <span class="operator">|</span> english <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+---------+------+---------+</span></span><br><span class="line"><span class="operator">|</span> 张三 <span class="operator">|</span>      <span class="number">93</span> <span class="operator">|</span>   <span class="number">88</span> <span class="operator">|</span>      <span class="number">91</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> 李四 <span class="operator">|</span>      <span class="number">87</span> <span class="operator">|</span>   <span class="number">90</span> <span class="operator">|</span>      <span class="number">77</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------+---------+------+---------+</span></span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>练习题</p><ul><li><p><strong>3.1</strong></p><p>  创建出满足下述三个条件的视图（视图名称为 ViewPractice5_1）。使用 product（商品）表作为参照表，假设表中包含初始状态的 8 行数据。</p><ul><li>条件 1：销售单价大于等于 1000 日元。</li><li>条件 2：登记日期是 2009 年 9 月 20 日。</li><li><p>条件 3：包含商品名称、销售单价和登记日期三列。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> ViewPractice5_1 <span class="keyword">AS</span> </span><br><span class="line"><span class="keyword">SELECT</span> product_name,sale_price,regist_date</span><br><span class="line"><span class="keyword">FROM</span> product</span><br><span class="line"><span class="keyword">WHERE</span> sale_price<span class="operator">&gt;=</span><span class="number">1000</span> <span class="keyword">and</span> regist_date<span class="operator">=</span><span class="string">&#x27;2009-09-20&#x27;</span>;</span><br></pre></td></tr></table></figure><p>对该视图执行 SELECT 语句的结果如下所示。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> ViewPractice5_1;</span><br></pre></td></tr></table></figure><p>执行结果</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">product_name <span class="operator">|</span> sale_price <span class="operator">|</span> regist_date</span><br><span class="line"><span class="comment">--------------+------------+------------</span></span><br><span class="line">T恤衫         <span class="operator">|</span> 　 <span class="number">1000</span>    <span class="operator">|</span> <span class="number">2009</span><span class="number">-09</span><span class="number">-20</span></span><br><span class="line">菜刀          <span class="operator">|</span>    <span class="number">3000</span>    <span class="operator">|</span> <span class="number">2009</span><span class="number">-09</span><span class="number">-20</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>3.2</strong></p><p>  向习题一中创建的视图 ViewPractice5_1 中插入如下数据，会得到什么样的结果呢？</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> ViewPractice5_1 <span class="keyword">VALUES</span> (<span class="string">&#x27; 刀子 &#x27;</span>, <span class="number">300</span>, <span class="string">&#x27;2009-11-02&#x27;</span>);</span><br></pre></td></tr></table></figure><p>  插⼊时将会报错。</p></li><li><p><strong>3.3</strong></p><p>  请根据如下结果编写 SELECT 语句，其中 sale_price_all 列为全部商品的平均销售单价。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> product_id,product_name,product_type,sale_price,</span><br><span class="line">(<span class="keyword">SELECT</span> <span class="built_in">AVG</span>(sale_price) <span class="keyword">FROM</span> product) <span class="keyword">as</span> sale_price_all</span><br><span class="line"><span class="keyword">FROM</span> product;</span><br></pre></td></tr></table></figure>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">product_id <span class="operator">|</span> product_name <span class="operator">|</span> product_type <span class="operator">|</span> sale_price <span class="operator">|</span> sale_price_all</span><br><span class="line"><span class="comment">------------+-------------+--------------+------------+---------------------</span></span><br><span class="line"><span class="number">0001</span>       <span class="operator">|</span> T恤衫         <span class="operator">|</span> 衣服         <span class="operator">|</span> <span class="number">1000</span>       <span class="operator">|</span> <span class="number">2097.5000000000000000</span></span><br><span class="line"><span class="number">0002</span>       <span class="operator">|</span> 打孔器        <span class="operator">|</span> 办公用品      <span class="operator">|</span> <span class="number">500</span>        <span class="operator">|</span> <span class="number">2097.5000000000000000</span></span><br><span class="line"><span class="number">0003</span>       <span class="operator">|</span> 运动T恤       <span class="operator">|</span> 衣服          <span class="operator">|</span> <span class="number">4000</span>      <span class="operator">|</span> <span class="number">2097.5000000000000000</span></span><br><span class="line"><span class="number">0004</span>       <span class="operator">|</span> 菜刀          <span class="operator">|</span> 厨房用具      <span class="operator">|</span> <span class="number">3000</span>       <span class="operator">|</span> <span class="number">2097.5000000000000000</span></span><br><span class="line"><span class="number">0005</span>       <span class="operator">|</span> 高压锅        <span class="operator">|</span> 厨房用具      <span class="operator">|</span> <span class="number">6800</span>       <span class="operator">|</span> <span class="number">2097.5000000000000000</span></span><br><span class="line"><span class="number">0006</span>       <span class="operator">|</span> 叉子          <span class="operator">|</span> 厨房用具      <span class="operator">|</span> <span class="number">500</span>        <span class="operator">|</span> <span class="number">2097.5000000000000000</span></span><br><span class="line"><span class="number">0007</span>       <span class="operator">|</span> 擦菜板        <span class="operator">|</span> 厨房用具       <span class="operator">|</span> <span class="number">880</span>       <span class="operator">|</span> <span class="number">2097.5000000000000000</span></span><br><span class="line"><span class="number">0008</span>       <span class="operator">|</span> 圆珠笔        <span class="operator">|</span> 办公用品       <span class="operator">|</span> <span class="number">100</span>       <span class="operator">|</span> <span class="number">2097.5000000000000000</span></span><br></pre></td></tr></table></figure></li><li><p><strong>3.4</strong></p><p>  请根据习题一中的条件编写一条 SQL 语句，创建一幅包含如下数据的视图（名称为AvgPriceByType）。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建视图的语句</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> AvgPriceByType <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> product_id,</span><br><span class="line"> product_name,</span><br><span class="line"> product_type,</span><br><span class="line"> sale_price,</span><br><span class="line"> (<span class="keyword">SELECT</span> <span class="built_in">AVG</span>(sale_price)</span><br><span class="line"> <span class="keyword">FROM</span> product p2</span><br><span class="line"> <span class="keyword">WHERE</span> p1.product_type <span class="operator">=</span> p2.product_type</span><br><span class="line"> <span class="keyword">GROUP</span> <span class="keyword">BY</span> p1.product_type) <span class="keyword">AS</span> avg_sale_price</span><br><span class="line"><span class="keyword">FROM</span> product p1;</span><br></pre></td></tr></table></figure>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">product_id <span class="operator">|</span> product_name <span class="operator">|</span> product_type <span class="operator">|</span> sale_price <span class="operator">|</span> avg_sale_price</span><br><span class="line"><span class="comment">------------+-------------+--------------+------------+---------------------</span></span><br><span class="line"><span class="number">0001</span>       <span class="operator">|</span> T恤衫         <span class="operator">|</span> 衣服         <span class="operator">|</span> <span class="number">1000</span>       <span class="operator">|</span><span class="number">2500.0000000000000000</span></span><br><span class="line"><span class="number">0002</span>       <span class="operator">|</span> 打孔器         <span class="operator">|</span> 办公用品     <span class="operator">|</span> <span class="number">500</span>        <span class="operator">|</span> <span class="number">300.0000000000000000</span></span><br><span class="line"><span class="number">0003</span>       <span class="operator">|</span> 运动T恤        <span class="operator">|</span> 衣服        <span class="operator">|</span> <span class="number">4000</span>        <span class="operator">|</span><span class="number">2500.0000000000000000</span></span><br><span class="line"><span class="number">0004</span>       <span class="operator">|</span> 菜刀          <span class="operator">|</span> 厨房用具      <span class="operator">|</span> <span class="number">3000</span>        <span class="operator">|</span><span class="number">2795.0000000000000000</span></span><br><span class="line"><span class="number">0005</span>       <span class="operator">|</span> 高压锅         <span class="operator">|</span> 厨房用具     <span class="operator">|</span> <span class="number">6800</span>        <span class="operator">|</span><span class="number">2795.0000000000000000</span></span><br><span class="line"><span class="number">0006</span>       <span class="operator">|</span> 叉子          <span class="operator">|</span> 厨房用具      <span class="operator">|</span> <span class="number">500</span>         <span class="operator">|</span><span class="number">2795.0000000000000000</span></span><br><span class="line"><span class="number">0007</span>       <span class="operator">|</span> 擦菜板         <span class="operator">|</span> 厨房用具     <span class="operator">|</span> <span class="number">880</span>         <span class="operator">|</span><span class="number">2795.0000000000000000</span></span><br><span class="line"><span class="number">0008</span>       <span class="operator">|</span> 圆珠笔         <span class="operator">|</span> 办公用品     <span class="operator">|</span> <span class="number">100</span>         <span class="operator">|</span> <span class="number">300.0000000000000000</span></span><br></pre></td></tr></table></figure></li><li><p><strong>3.5</strong></p><p>  运算或者函数中含有 NULL 时，结果全都会变为NULL ？（判断题）</p><p>  正确</p></li><li><p><strong>3.6</strong></p><p>  对本章中使用的 product（商品）表执行如下 2 条 SELECT 语句，能够得到什么样的结果呢？</p><ol><li><p>获取进口价不为500、2800、5000和NULL的数据</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> product_name, purchase_price</span><br><span class="line">  <span class="keyword">FROM</span> product</span><br><span class="line"> <span class="keyword">WHERE</span> purchase_price <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="number">500</span>, <span class="number">2800</span>, <span class="number">5000</span>);</span><br></pre></td></tr></table></figure></li><li><p>NOT IN的参数不能包含NULL，否则，查询结果为空</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> product_name, purchase_price</span><br><span class="line">  <span class="keyword">FROM</span> product</span><br><span class="line"> <span class="keyword">WHERE</span> purchase_price <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="number">500</span>, <span class="number">2800</span>, <span class="number">5000</span>, <span class="keyword">NULL</span>);</span><br></pre></td></tr></table></figure></li></ol></li><li><p><strong>3.7</strong></p><p>  按照销售单价（ sale_price）对练习 6.1 中的 product（商品）表中的商品进行如下分类。</p><ul><li>低档商品：销售单价在1000日元以下（T恤衫、办公用品、叉子、擦菜板、 圆珠笔）</li><li>中档商品：销售单价在1001日元以上3000日元以下（菜刀）</li><li><p>高档商品：销售单价在3001日元以上（运动T恤、高压锅）</p><p>请编写出统计上述商品种类中所包含的商品数量的 SELECT 语句，结果如下所示。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line"><span class="built_in">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> sale_price<span class="operator">&lt;</span><span class="number">1000</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="keyword">NULL</span> <span class="keyword">END</span>) <span class="keyword">as</span> low_price,</span><br><span class="line"><span class="built_in">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> sale_price<span class="operator">&gt;</span><span class="number">1001</span> <span class="keyword">and</span> sale_price<span class="operator">&lt;</span><span class="number">3000</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="keyword">NULL</span> <span class="keyword">END</span>) <span class="keyword">as</span> mid_price,</span><br><span class="line"><span class="built_in">SUM</span>(<span class="keyword">CASE</span> <span class="keyword">WHEN</span> sale_price<span class="operator">&gt;</span><span class="number">3001</span> <span class="keyword">THEN</span> <span class="number">1</span> <span class="keyword">ELSE</span> <span class="keyword">NULL</span> <span class="keyword">END</span>) <span class="keyword">as</span> high_price</span><br><span class="line"><span class="keyword">FROM</span> product;</span><br></pre></td></tr></table></figure><p>执行结果</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">low_price <span class="operator">|</span> mid_price <span class="operator">|</span> high_price</span><br><span class="line"><span class="comment">----------+-----------+------------</span></span><br><span class="line">        <span class="number">5</span> <span class="operator">|</span>         <span class="number">1</span> <span class="operator">|</span>         <span class="number">2</span></span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL基础 </tag>
            
            <tag> 训练营 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里AI训练营SQL入门与实践task1</title>
      <link href="/2021/12/23/%E9%98%BF%E9%87%8CAI%E8%AE%AD%E7%BB%83%E8%90%A5SQL%E5%85%A5%E9%97%A8%E4%B8%8E%E5%AE%9E%E8%B7%B5task1/"/>
      <url>/2021/12/23/%E9%98%BF%E9%87%8CAI%E8%AE%AD%E7%BB%83%E8%90%A5SQL%E5%85%A5%E9%97%A8%E4%B8%8E%E5%AE%9E%E8%B7%B5task1/</url>
      
        <content type="html"><![CDATA[<ul><li><p>1.1初识数据库</p><p>  数据库(DB)：一个含有大量数据并能高校访问的数据集合</p><p>  数据库管理系统(DBMS):用来管理数据库的计算机系统,如关系型数据库管理系统(RDBMS)</p><ul><li><p>1.1 DBMS的种类</p><p>  以数据的保存格式来进行分类，可分为5种类型：</p><ul><li>层次数据库(HDB)</li><li>关系数据库(RDB)：如Oracle Database、SQL Server、postgreSQL、MySQL</li><li>面向对象数据库(OODB)</li><li>XML数据库(XMLDB)</li><li>键值存储系统(KVS)：如MongoDB</li></ul></li><li><p>1.2 RDBMS的常见系统结构</p><p>  [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-B9qNDSOz-1639722965910)(<a href="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/c94e4181-8c07-4866-ba86-e8242d922a15/Untitled.png">https://s3-us-west-2.amazonaws.com/secure.notion-static.com/c94e4181-8c07-4866-ba86-e8242d922a15/Untitled.png</a>)]</p></li><li><p>1.3 数据库的安装</p><ul><li><a href="http://tianchi-media.oss-cn-beijing.aliyuncs.com/dragonball/SQL/other/阿里云MySQL服务器使用介绍.pdf">阿里云MySQL服务器的安装使用</a></li><li><a href="http://tianchi-media.oss-cn-beijing.aliyuncs.com/dragonball/SQL/other/本地MySQL环境搭建方法介绍.pdf">本地MySQL环境的搭建</a></li></ul></li></ul></li><li><p>2.1 MySQL表结构概念介绍</p><p>  [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-BDbztR11-1639722965912)(<a href="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/ee292eb4-d946-4dd9-96c8-2bf7e50e5442/Untitled.png">https://s3-us-west-2.amazonaws.com/secure.notion-static.com/ee292eb4-d946-4dd9-96c8-2bf7e50e5442/Untitled.png</a>)]</p><ul><li>在数据库中,一行称为一条记录，一列称为一个字段。</li><li>数据库名、列名与表名：只能使用半角英文字母、数字、下划线（_），以半角英文字母开头。</li><li>数据类型：INTEGER 型、CHAR 型、VARCHAR 型(存储可变长度字符串)、DATE 型。</li><li>表的约束：除了数据类型之外，对列中存储的数据进行限制或者追加条件的功能。(非空约束、主键约束)</li></ul></li><li><p>2.2 SQL语句的分类</p><p>  根据对 RDBMS 赋予的指令种类的不同，SQL 语句可以分为以下三类：</p><ul><li><p>DDL</p><p>  数据定义语言(DDL)用来修改数据库或数据库中的表等对象。</p><ul><li>CREATE ： 创建数据库和表等对象</li><li>DROP ： 删除数据库和表等对象</li><li>ALTER ： 修改数据库和表等对象的结构</li></ul></li><li><p>DML</p><p>  数据操纵语言(DML)用来查询或者修改表中的记录。</p><ul><li>SELECT ：查询表中的数据</li><li>INSERT ：向表中插入新数据</li><li>UPDATE ：更新表中的数据</li><li>DELETE ：删除表中的数据</li></ul></li><li><p>DCL</p><p>  数据控制语言(DCL)用来确认或者取消对数据库中的数据进行的变更。</p><ul><li>COMMIT ： 确认对数据库中的数据进行的变更</li><li>ROLLBACK ： 取消对数据库中的数据进行的变更</li><li>GRANT ： 赋予用户操作权限</li><li>REVOKE ： 取消用户的操作权限</li></ul></li></ul></li><li><p>2.3 SQL的基本书写规则</p><ul><li>SQL语句要以分号（ ; ）结尾</li><li>SQL 不区分关键字的大小写，但是插入到表中的数据是区分大小写的</li><li>win 系统默认不区分表名及字段名的大小写</li><li>linux / mac 默认严格区分表名及字段名的大小写</li><li>常数的书写方式是固定的</li><li>单词需要用半角空格或者换行来分隔</li></ul></li><li><p>2.4 SQL语句示例</p><ul><li><p>数据库的创建(create database语句)</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--语法：CREATE DATABASE &lt; 数据库名称 &gt; ;</span></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE shop;</span><br></pre></td></tr></table></figure></li><li><p>表的创建(create table语句)</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--语法：</span></span><br><span class="line"><span class="comment">--CREATE TABLE &lt; 表名 &gt;</span></span><br><span class="line"><span class="comment">--( &lt; 列名 1&gt; &lt; 数据类型 &gt; &lt; 该列所需约束 &gt; ,</span></span><br><span class="line">  <span class="comment">--&lt; 列名 2&gt; &lt; 数据类型 &gt; &lt; 该列所需约束 &gt; ,</span></span><br><span class="line">  <span class="comment">--&lt; 列名 3&gt; &lt; 数据类型 &gt; &lt; 该列所需约束 &gt; ,</span></span><br><span class="line">  <span class="comment">--&lt; 列名 4&gt; &lt; 数据类型 &gt; &lt; 该列所需约束 &gt; ,</span></span><br><span class="line">  .</span><br><span class="line">  <span class="comment">--&lt; 该表的约束 1&gt; , &lt; 该表的约束 2&gt; ,……);</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> product(</span><br><span class="line">     product_id <span class="type">CHAR</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>, </span><br><span class="line">     product_name <span class="type">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>, </span><br><span class="line">     product_type <span class="type">VARCHAR</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>, </span><br><span class="line">     sale_price <span class="type">INTEGER</span>, </span><br><span class="line">     purchase_price <span class="type">INTEGER</span>, </span><br><span class="line">     regist_date <span class="type">DATE</span>, </span><br><span class="line">     <span class="keyword">PRIMARY</span> KEY(product_id)</span><br><span class="line"> )  ;</span><br></pre></td></tr></table></figure></li><li><p>表的删除</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--语法：DROP TABLE &lt;表名&gt;;</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> product;</span><br></pre></td></tr></table></figure></li><li><p>表的更新</p><ul><li><p>ALTER TABLE语句</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--添加列的ALTER TABLE语句</span></span><br><span class="line"><span class="comment">--语法：ALTER TABLE &lt; 表名 &gt; ADD COLUMN &lt; 列的定义 &gt;;</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> product <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> product_name_pinyin <span class="type">VARCHAR</span>(<span class="number">100</span>);</span><br><span class="line"><span class="comment">--删除列的ALTER TABLE语句</span></span><br><span class="line"><span class="comment">--语法：ALTER TABLE &lt;表名&gt; DROP COLUMN &lt;列名&gt;;</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> product <span class="keyword">DROP</span> <span class="keyword">COLUMN</span> product_name_pinyin;</span><br><span class="line"></span><br><span class="line"><span class="comment">--注：ALTER TABLE 语句和 DROP TABLE 语句一样，执行之后无法恢复。</span></span><br></pre></td></tr></table></figure></li><li><p>UPDATE TABLE语句</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--语法：</span></span><br><span class="line"><span class="comment">--UPDATE &lt;表名&gt;</span></span><br><span class="line"><span class="comment">--SET &lt;列名&gt; = &lt;表达式&gt; [, &lt;列名2&gt;=&lt;表达式2&gt;...];  </span></span><br><span class="line"><span class="comment">--WHERE &lt;条件&gt;;  -- 可选，非常重要。</span></span><br><span class="line"><span class="comment">--ORDER BY 子句;  --可选</span></span><br><span class="line"><span class="comment">--LIMIT 子句; --可选</span></span><br><span class="line"><span class="comment">--1.使用UPDATE时记得添加where条件，缩小修改范围</span></span><br><span class="line">  <span class="comment">-- 修改所有的注册时间</span></span><br><span class="line"><span class="keyword">UPDATE</span> product</span><br><span class="line">   <span class="keyword">SET</span> regist_date <span class="operator">=</span> <span class="string">&#x27;2009-10-10&#x27;</span>;  </span><br><span class="line"><span class="comment">-- 仅修改部分商品的单价</span></span><br><span class="line"><span class="keyword">UPDATE</span> product</span><br><span class="line">   <span class="keyword">SET</span> sale_price <span class="operator">=</span> sale_price <span class="operator">*</span> <span class="number">10</span></span><br><span class="line"> <span class="keyword">WHERE</span> product_type <span class="operator">=</span> <span class="string">&#x27;厨房用具&#x27;</span>;</span><br><span class="line"><span class="comment">--2.使用 UPDATE 也可以将列更新为 NULL（该更新俗称为NULL清空）。</span></span><br><span class="line">  <span class="comment">-- 将商品编号为0008的数据（圆珠笔）的登记日期更新为NULL  </span></span><br><span class="line"><span class="keyword">UPDATE</span> product</span><br><span class="line">   <span class="keyword">SET</span> regist_date <span class="operator">=</span> <span class="keyword">NULL</span></span><br><span class="line"> <span class="keyword">WHERE</span> product_id <span class="operator">=</span> <span class="string">&#x27;0008&#x27;</span>;</span><br><span class="line"><span class="comment">--3.UPDATE 语句的 SET 子句支持同时将多个列作为更新对象。</span></span><br><span class="line"><span class="keyword">UPDATE</span> product</span><br><span class="line">   <span class="keyword">SET</span> sale_price <span class="operator">=</span> sale_price <span class="operator">*</span> <span class="number">10</span>,</span><br><span class="line">       purchase_price <span class="operator">=</span> purchase_price <span class="operator">/</span> <span class="number">2</span></span><br><span class="line"> <span class="keyword">WHERE</span> product_type <span class="operator">=</span> <span class="string">&#x27;厨房用具&#x27;</span>;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>表的插入数据(insert into语句)</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--语法：</span></span><br><span class="line"><span class="comment">--INSERT INTO &lt;表名&gt; (列1, 列2, 列3, ……) VALUES (值1, 值2, 值3, ……);</span></span><br><span class="line"><span class="comment">--1.对表进行全列 INSERT 时，可以省略表名后的列清单。这时 VALUES子句的值会默认按照从左到右的顺序赋给每一列。</span></span><br><span class="line"><span class="comment">-- 包含列清单</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> productins (product_id, product_name, product_type, </span><br><span class="line">sale_price, purchase_price, regist_date) <span class="keyword">VALUES</span> (<span class="string">&#x27;0005&#x27;</span>, <span class="string">&#x27;高压锅&#x27;</span>, <span class="string">&#x27;厨房用具&#x27;</span>, <span class="number">6800</span>, <span class="number">5000</span>, <span class="string">&#x27;2009-01-15&#x27;</span>);</span><br><span class="line"><span class="comment">-- 省略列清单</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> productins </span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">&#x27;0005&#x27;</span>, <span class="string">&#x27;高压锅&#x27;</span>, <span class="string">&#x27;厨房用具&#x27;</span>, <span class="number">6800</span>, <span class="number">5000</span>, <span class="string">&#x27;2009-01-15&#x27;</span>);</span><br><span class="line"><span class="comment">--2.很多 RDBMS 都支持一次插入多行数据</span></span><br><span class="line"><span class="comment">-- 通常的INSERT</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> productins <span class="keyword">VALUES</span> (<span class="string">&#x27;0002&#x27;</span>, <span class="string">&#x27;打孔器&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;办公用品&#x27;</span>, <span class="number">500</span>, <span class="number">320</span>, <span class="string">&#x27;2009-09-11&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> productins <span class="keyword">VALUES</span> (<span class="string">&#x27;0003&#x27;</span>, <span class="string">&#x27;运动T恤&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;衣服&#x27;</span>, <span class="number">4000</span>, <span class="number">2800</span>, <span class="keyword">NULL</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> productins <span class="keyword">VALUES</span> (<span class="string">&#x27;0004&#x27;</span>, <span class="string">&#x27;菜刀&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;厨房用具&#x27;</span>, <span class="number">3000</span>, <span class="number">2800</span>, <span class="string">&#x27;2009-09-20&#x27;</span>);</span><br><span class="line"><span class="comment">-- 多行INSERT （ DB2、SQL、SQL Server、 PostgreSQL 和 MySQL多行插入）</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> productins <span class="keyword">VALUES</span> (<span class="string">&#x27;0002&#x27;</span>, <span class="string">&#x27;打孔器&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;办公用品&#x27;</span>, <span class="number">500</span>, <span class="number">320</span>, <span class="string">&#x27;2009-09-11&#x27;</span>),</span><br><span class="line">(<span class="string">&#x27;0003&#x27;</span>, <span class="string">&#x27;运动T恤&#x27;</span>, <span class="string">&#x27;衣服&#x27;</span>, <span class="number">4000</span>, <span class="number">2800</span>, <span class="keyword">NULL</span>),</span><br><span class="line">(<span class="string">&#x27;0004&#x27;</span>, <span class="string">&#x27;菜刀&#x27;</span>, <span class="string">&#x27;厨房用具&#x27;</span>, <span class="number">3000</span>, <span class="number">2800</span>, <span class="string">&#x27;2009-09-20&#x27;</span>);  </span><br><span class="line"><span class="comment">-- Oracle中的多行INSERT</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">ALL</span> <span class="keyword">INTO</span> productins <span class="keyword">VALUES</span> (<span class="string">&#x27;0002&#x27;</span>, <span class="string">&#x27;打孔器&#x27;</span>, <span class="string">&#x27;办公用品&#x27;</span>, <span class="number">500</span>, <span class="number">320</span>, <span class="string">&#x27;2009-09-11&#x27;</span>)</span><br><span class="line"><span class="keyword">INTO</span> productins <span class="keyword">VALUES</span> (<span class="string">&#x27;0003&#x27;</span>, <span class="string">&#x27;运动T恤&#x27;</span>, <span class="string">&#x27;衣服&#x27;</span>, <span class="number">4000</span>, <span class="number">2800</span>, <span class="keyword">NULL</span>)</span><br><span class="line"><span class="keyword">INTO</span> productins <span class="keyword">VALUES</span> (<span class="string">&#x27;0004&#x27;</span>, <span class="string">&#x27;菜刀&#x27;</span>, <span class="string">&#x27;厨房用具&#x27;</span>, <span class="number">3000</span>, <span class="number">2800</span>, <span class="string">&#x27;2009-09-20&#x27;</span>)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> DUAL;  </span><br><span class="line"><span class="comment">-- DUAL是Oracle特有（安装时的必选项）的一种临时表A。因此“SELECT *FROM DUAL” 部分也只是临时性的，并没有实际意义。</span></span><br><span class="line"><span class="comment">--3.INSERT 语句插入NULL值。</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> productins (product_id, product_name, product_type, </span><br><span class="line">sale_price, purchase_price, regist_date) <span class="keyword">VALUES</span> (<span class="string">&#x27;0006&#x27;</span>, <span class="string">&#x27;叉子&#x27;</span>, </span><br><span class="line"><span class="string">&#x27;厨房用具&#x27;</span>, <span class="number">500</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;2009-09-20&#x27;</span>);</span><br><span class="line"><span class="comment">--4.INSERT … SELECT 语句从其他表复制数据</span></span><br><span class="line"><span class="comment">-- 将商品表中的数据复制到商品复制表中</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> productocpy (product_id, product_name, product_type, sale_price, purchase_price, regist_date)</span><br><span class="line"><span class="keyword">SELECT</span> product_id, product_name, product_type, sale_price, </span><br><span class="line">purchase_price, regist_date</span><br><span class="line"><span class="keyword">FROM</span> Product;</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>练习题</p><ul><li><p>1.1</p><p>  编写一条 CREATE TABLE 语句，用来创建一个包含表 1-A 中所列各项的表 Addressbook （地址簿），并为 regist_no （注册编号）列设置主键约束</p><p>  <img src="https://img-blog.csdnimg.cn/img_convert/936ded95450e906e81936394c1a3c3a3.png" alt="https://img.alicdn.com/imgextra/i2/O1CN01yUhR8r1b2S3GHfh4B_!!6000000003407-2-tps-653-319.png"></p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Addressbook(</span><br><span class="line">regist_no <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">NAME <span class="type">VARCHAR</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">address <span class="type">VARCHAR</span>(<span class="number">256</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">tel_no <span class="type">CHAR</span>(<span class="number">10</span>),</span><br><span class="line">mail_address <span class="type">CHAR</span>(<span class="number">20</span>),</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY(regist_no)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li><p>1.2</p><p>  假设在创建练习1.1中的 Addressbook 表时忘记添加如下一列 postal_code （邮政编码）了，请把此列添加到 Addressbook 表中。</p><p>  列名 ： postal_code</p><p>  数据类型 ：定长字符串类型（长度为 8）</p><p>  约束 ：不能为 NULL</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Addressbook <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> postal_code <span class="type">CHAR</span>(<span class="number">8</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure></li><li><p>1.3</p><p>  编写 SQL 语句来删除 Addressbook 表。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> addressbook;</span><br></pre></td></tr></table></figure></li><li><p>1.4</p><p>  编写 SQL 语句来恢复删除掉的 Addressbook 表。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--一般drop删除无法恢复</span></span><br></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL基础 </tag>
            
            <tag> 训练营 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里AI训练营SQL入门与实践task2</title>
      <link href="/2021/12/23/%E9%98%BF%E9%87%8C%E4%BA%91AI%E8%AE%AD%E7%BB%83%E8%90%A5SQL%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5%20Task02%EF%BC%9ASQL%E5%9F%BA%E7%A1%80%E6%9F%A5%E8%AF%A2%E4%B8%8E%E6%8E%92%E5%BA%8F/"/>
      <url>/2021/12/23/%E9%98%BF%E9%87%8C%E4%BA%91AI%E8%AE%AD%E7%BB%83%E8%90%A5SQL%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5%20Task02%EF%BC%9ASQL%E5%9F%BA%E7%A1%80%E6%9F%A5%E8%AF%A2%E4%B8%8E%E6%8E%92%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<ul><li><p>select语句基础</p><ul><li><p>where语句</p><p>  SELECT 语句通过WHERE子句来指定查询数据的条件。</p><p>  在WHERE 子句中可以指定“某一列的值和这个字符串相等”或者“某一列的值大于这个数字”等条件。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--语法：</span></span><br><span class="line"><span class="comment">--SELECT &lt;列名&gt;, ……</span></span><br><span class="line">  <span class="comment">--FROM &lt;表名&gt;</span></span><br><span class="line"> <span class="comment">--WHERE &lt;条件表达式&gt;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 用来选取product type列为衣服’的记录的SELECT语句</span></span><br><span class="line"><span class="keyword">SELECT</span> product_name, product_type</span><br><span class="line">  <span class="keyword">FROM</span> product</span><br><span class="line"> <span class="keyword">WHERE</span> product_type <span class="operator">=</span> <span class="string">&#x27;衣服&#x27;</span>;</span><br><span class="line"><span class="comment">-- 也可以选取出不是查询条件的列（条件列与输出列不同）</span></span><br><span class="line"><span class="keyword">SELECT</span> product_name</span><br><span class="line">  <span class="keyword">FROM</span> product</span><br><span class="line"> <span class="keyword">WHERE</span> product_type <span class="operator">=</span> <span class="string">&#x27;衣服&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>相关法则</p><ul><li>星号（*）代表全部列的意思。</li><li>SQL中可以随意使用换行符，不影响语句执行（但不可插入空行）。</li><li>设定汉语别名时需要使用双引号（”）括起来。</li><li>在SELECT语句中使用DISTINCT可以删除重复行。</li><li>注释是SQL语句中用来标识说明或者注意事项的部分。分为1行注释”— “和多行注释两种”/<em> </em>/“。</li><li><p>xx可以用占位符、_：代表确定的一个字符、%：代表是任意个数的字符，0~n个</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 想要查询出全部列时，可以使用代表所有列的星号（*）。</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">  <span class="keyword">FROM</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span>;</span><br><span class="line"><span class="comment">-- SQL语句可以使用AS关键字为列设定别名（用中文时需要双引号（“”））。</span></span><br><span class="line"><span class="keyword">SELECT</span> product_id     <span class="keyword">AS</span> id,</span><br><span class="line">       product_name   <span class="keyword">AS</span> name,</span><br><span class="line">       purchase_price <span class="keyword">AS</span> &quot;进货单价&quot;</span><br><span class="line">  <span class="keyword">FROM</span> product;</span><br><span class="line"><span class="comment">-- 使用DISTINCT删除product_type列中重复的数据</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> product_type</span><br><span class="line">  <span class="keyword">FROM</span> product;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>算术运算符&amp;比较运算符</p><ul><li>算术运算符：+、-、*、/</li><li>比较运算符：=、&lt;&gt;、≥、&gt;、≤、&lt;</li><li><p>常用法则：</p><ul><li>SELECT子句中可以使用常数或者表达式。</li><li>字符串类型的数据原则上按照字典顺序进行排序，不能与数字的大小顺序混淆。</li><li><p>希望选取NULL记录时，需要在条件表达式中使用IS NULL运算符。希望选取不是NULL的记录时，需要在条件表达式中使用IS NOT NULL运算符。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- SQL语句中也可以使用运算表达式</span></span><br><span class="line"><span class="keyword">SELECT</span> product_name, sale_price, sale_price <span class="operator">*</span> <span class="number">2</span> <span class="keyword">AS</span> &quot;sale_price x2&quot;</span><br><span class="line">  <span class="keyword">FROM</span> product;</span><br><span class="line"><span class="comment">-- WHERE子句的条件表达式中也可以使用计算表达式</span></span><br><span class="line"><span class="keyword">SELECT</span> product_name, sale_price, purchase_price</span><br><span class="line">  <span class="keyword">FROM</span> product</span><br><span class="line"> <span class="keyword">WHERE</span> sale_price<span class="operator">-</span>purchase_price <span class="operator">&gt;=</span> <span class="number">500</span>;</span><br><span class="line"><span class="comment">/* 对字符串使用不等号</span></span><br><span class="line"><span class="comment">首先创建chars并插入数据</span></span><br><span class="line"><span class="comment">选取出大于‘2’的SELECT语句*/</span></span><br><span class="line"><span class="comment">-- DDL：创建表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> chars</span><br><span class="line">（chr <span class="type">CHAR</span>（<span class="number">3</span>）<span class="keyword">NOT</span> <span class="keyword">NULL</span>，</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY（chr））;</span><br><span class="line"><span class="comment">-- 选取出大于&#x27;2&#x27;的数据的SELECT语句(&#x27;2&#x27;为字符串)</span></span><br><span class="line"><span class="keyword">SELECT</span> chr</span><br><span class="line">  <span class="keyword">FROM</span> chars</span><br><span class="line"> <span class="keyword">WHERE</span> chr <span class="operator">&gt;</span> <span class="string">&#x27;2&#x27;</span>;</span><br><span class="line"><span class="comment">-- 选取NULL的记录</span></span><br><span class="line"><span class="keyword">SELECT</span> product_name，purchase_price</span><br><span class="line">  <span class="keyword">FROM</span> product</span><br><span class="line"> <span class="keyword">WHERE</span> purchase_price <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br><span class="line"><span class="comment">-- 选取不为NULL的记录</span></span><br><span class="line"><span class="keyword">SELECT</span> product_name，purchase_price</span><br><span class="line">  <span class="keyword">FROM</span> product</span><br><span class="line"> <span class="keyword">WHERE</span> purchase_price <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>逻辑运算符</p><ul><li><p>NOT</p><p>  NOT不能单独使用，如下例：</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 选取出销售单价大于等于1000日元的记录</span></span><br><span class="line"><span class="keyword">SELECT</span> product_name, product_type, sale_price</span><br><span class="line">  <span class="keyword">FROM</span> product</span><br><span class="line"> <span class="keyword">WHERE</span> sale_price <span class="operator">&gt;=</span> <span class="number">1000</span>;</span><br><span class="line"> <span class="comment">-- 向代码清单2-30的查询条件中添加NOT运算符</span></span><br><span class="line"><span class="keyword">SELECT</span> product_name, product_type, sale_price</span><br><span class="line">  <span class="keyword">FROM</span> product</span><br><span class="line"> <span class="keyword">WHERE</span> <span class="keyword">NOT</span> sale_price <span class="operator">&gt;=</span> <span class="number">1000</span>;</span><br></pre></td></tr></table></figure></li><li><p>AND和OR</p><p>  当希望同时使用多个查询条件时，可以使用AND或者OR运算符。</p><p>  AND运算符工作效果图:</p><p>  [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-cNc1wp0H-1639969624554)(<a href="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/b020760a-4fe1-43b7-8ec0-6efd751b3093/Untitled.png">https://s3-us-west-2.amazonaws.com/secure.notion-static.com/b020760a-4fe1-43b7-8ec0-6efd751b3093/Untitled.png</a>)]</p><p>  OR运算符工作效果图:</p><p>  [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-CEq81wvx-1639969624557)(<a href="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/e1f7ef2d-c358-40e0-b9de-bfebf46c96a6/Untitled.png">https://s3-us-west-2.amazonaws.com/secure.notion-static.com/e1f7ef2d-c358-40e0-b9de-bfebf46c96a6/Untitled.png</a>)]</p></li><li><p>逻辑运算符优先级：</p><p>  AND 运算符优先于 OR 运算符</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 通过使用括号让OR运算符先于AND运算符执行</span></span><br><span class="line"><span class="keyword">SELECT</span> product_name, product_type, regist_date</span><br><span class="line">  <span class="keyword">FROM</span> product</span><br><span class="line"> <span class="keyword">WHERE</span> product_type <span class="operator">=</span> <span class="string">&#x27;办公用品&#x27;</span></span><br><span class="line">   <span class="keyword">AND</span> ( regist_date <span class="operator">=</span> <span class="string">&#x27;2009-09-11&#x27;</span></span><br><span class="line">        <span class="keyword">OR</span> regist_date <span class="operator">=</span> <span class="string">&#x27;2009-09-20&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>真值表</p><ul><li>AND 运算符：两侧的真值都为真时返回真，除此之外都返回假。</li><li>OR 运算符：两侧的真值只要有一个不为假就返回真，只有当其两侧的真值都为假时才返回假。</li><li>NOT运算符：只是单纯的将真转换为假，将假转换为真。</li><li>NULL的真值结果既不为真，也不为假，因为并不知道这样一个值。这时真值是除真假之外的第三种值——<strong>不确定</strong>（UNKNOWN）。</li></ul></li></ul></li><li><p>练习题</p><ul><li><p>1.编写一条SQL语句，从product（商品）表中选取出“登记日期（regist在2009年4月28日之后”的商品，查询结果要包含product_name和regist_date两列。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> product_name,regist_date <span class="keyword">FROM</span> product <span class="keyword">WHERE</span>  regist_date <span class="operator">&gt;</span> &quot;2009-4-28&quot;;</span><br></pre></td></tr></table></figure></li><li><p>2.请说出对product 表执行如下3条SELECT语句时的返回结果。</p><ul><li><p>查询出销售价格为空的记录</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">  <span class="keyword">FROM</span> product</span><br><span class="line"> <span class="keyword">WHERE</span> purchase_price <span class="operator">=</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure></li><li><p>查询出销售价格不为空的记录</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">  <span class="keyword">FROM</span> product</span><br><span class="line"> <span class="keyword">WHERE</span> purchase_price <span class="operator">&lt;&gt;</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure></li><li><p>返回都为空</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line">  <span class="keyword">FROM</span> product</span><br><span class="line"> <span class="keyword">WHERE</span> product_name <span class="operator">&gt;</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>3.代码清单2-22（2-2节）中的SELECT语句能够从product表中取出“销售单价（saleprice）比进货单价（purchase price）高出500日元以上”的商品。请写出两条可以得到相同结果的SELECT语句。执行结果如下所示。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> product <span class="keyword">WHERE</span> (sale_price<span class="number">-500</span>)<span class="operator">&gt;=</span>purchase_price;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> product <span class="keyword">WHERE</span> (sale_price<span class="operator">-</span>purchase_price)<span class="operator">&gt;=</span><span class="number">500</span>;</span><br></pre></td></tr></table></figure></li><li><p>4.请写出一条SELECT语句，从product表中选取出满足“销售单价打九折之后利润高于100日元的办公用品和厨房用具”条件的记录。查询结果要包括product_name列、product_type列以及销售单价打九折之后的利润（别名设定为profit）。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> product_name,product_type,profit</span><br><span class="line"><span class="keyword">FROM</span> product</span><br><span class="line"><span class="keyword">WHERE</span> ((sale_price<span class="operator">*</span><span class="number">0.9</span> <span class="keyword">AS</span> profit<span class="operator">-</span>purchase_price)<span class="operator">&gt;</span><span class="number">100</span>) <span class="keyword">AND</span> (product_type<span class="operator">=</span>&quot;办公用品&quot; <span class="keyword">OR</span> product_type<span class="operator">=</span>&quot;厨房用具&quot;);</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>表的聚合查询</p><ul><li>五种常用的聚合函数<ul><li>COUNT：计算表中的记录数（行数）</li><li>SUM：计算表中数值列中数据的合计值</li><li>AVG：计算表中数值列中数据的平均值</li><li>MAX：求出表中任意列中数据的最大值</li><li>MIN：求出表中任意列中数据的最小值</li></ul></li><li>常用法则<ul><li>COUNT函数的结果根据参数的不同而不同。COUNT(*)会得到包含NULL的数据行数，而COUNT(&lt;列名&gt;)会得到NULL之外的数据行数。</li><li>MAX/MIN函数几乎适用于所有数据类型的列。SUM/AVG函数只适用于数值类型的列。</li><li>在聚合函数的参数中使用DISTINCT，可以删除重复数据。</li></ul></li></ul></li><li><p>表的分组查询</p><ul><li><p>GROUP BY语句</p><p>  对数据进行分组汇总。在 GROUP BY 子句中指定的列称为<strong>聚合键</strong>或者<strong>分组列</strong>。</p><p>  [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-FP6OttII-1639969624559)(<a href="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/79918fbd-1c80-4919-ac1b-2f2150edf646/Untitled.png">https://s3-us-west-2.amazonaws.com/secure.notion-static.com/79918fbd-1c80-4919-ac1b-2f2150edf646/Untitled.png</a>)]</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 按照商品种类统计数据行数</span></span><br><span class="line"><span class="keyword">SELECT</span> product_type, <span class="built_in">COUNT</span>(<span class="operator">*</span>)</span><br><span class="line">  <span class="keyword">FROM</span> product</span><br><span class="line"> <span class="keyword">GROUP</span> <span class="keyword">BY</span> product_type;</span><br><span class="line"><span class="comment">--按照衣服的进口价格进行分组统计</span></span><br><span class="line"> <span class="keyword">SELECT</span> purchase_price, <span class="built_in">COUNT</span>(<span class="operator">*</span>)</span><br><span class="line">  <span class="keyword">FROM</span> product</span><br><span class="line"> <span class="keyword">WHERE</span> product_type <span class="operator">=</span> <span class="string">&#x27;衣服&#x27;</span></span><br><span class="line"> <span class="keyword">GROUP</span> <span class="keyword">BY</span> purchase_price;</span><br></pre></td></tr></table></figure></li><li><p>注意事项</p><ul><li>聚合键包含BULL时，会将NULL作为一组特殊数据进行处理。</li><li>在聚合函数的SELECT子句中写了聚合健以外的列 使用COUNT等聚合函数时，SELECT子句中如果出现列名，只能是GROUP BY子句中指定的列名（也就是聚合键）。</li><li>在WHERE中使用聚合函数 原因是聚合函数的使用前提是结果集已经确定，而WHERE还处于确定结果集的过程中，所以相互矛盾会引发错误。 如果想指定条件，可以在SELECT，HAVING（下面马上会讲）以及ORDER BY子句中使用聚合函数。</li><li>在GROUP BY子句中使用列的别名 SELECT子句中可以通过AS来指定别名，但在GROUP BY中不能使用别名。因为在DBMS中 ,SELECT子句在GROUP BY子句后执行。</li></ul></li></ul></li><li><p>聚合结果指定条件</p><ul><li><p>HAVING语句</p><p>  对分组后的数据进行处理</p><p>  [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-LPSW1A6z-1639969624561)(<a href="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/0889c861-81ee-4984-b5c8-414a4196d3f6/Untitled.png">https://s3-us-west-2.amazonaws.com/secure.notion-static.com/0889c861-81ee-4984-b5c8-414a4196d3f6/Untitled.png</a>)]</p><p>  这里WHERE不可行，因为，WHERE子句只能指定记录（行）的条件，而不能用来指定组的条件（例如，“数据行数为 2 行”或者“平均值为 500”等）。</p></li><li><p>HAVING特点</p><p>  HAVING子句用于对分组进行过滤，可以使用数字、聚合函数和GROUP BY中指定的列名（聚合键）。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 数字</span></span><br><span class="line"><span class="keyword">SELECT</span> product_type, <span class="built_in">COUNT</span>(<span class="operator">*</span>)</span><br><span class="line">  <span class="keyword">FROM</span> product</span><br><span class="line"> <span class="keyword">GROUP</span> <span class="keyword">BY</span> product_type</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line"><span class="comment">-- 错误形式（因为product_name不包含在GROUP BY聚合键中）</span></span><br><span class="line"><span class="keyword">SELECT</span> product_type, <span class="built_in">COUNT</span>(<span class="operator">*</span>)</span><br><span class="line">  <span class="keyword">FROM</span> product</span><br><span class="line"> <span class="keyword">GROUP</span> <span class="keyword">BY</span> product_type</span><br><span class="line"><span class="keyword">HAVING</span> product_name <span class="operator">=</span> <span class="string">&#x27;圆珠笔&#x27;</span>;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>对查询结果进行排序与限制查看</p><ul><li><p>ORDER BY语句</p><p>  默认为升序排列，降序排列为DESC</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 降序排列</span></span><br><span class="line"><span class="keyword">SELECT</span> product_id, product_name, sale_price, purchase_price</span><br><span class="line">  <span class="keyword">FROM</span> product</span><br><span class="line"> <span class="keyword">ORDER</span> <span class="keyword">BY</span> sale_price <span class="keyword">DESC</span>;</span><br><span class="line"><span class="comment">-- 多个排序键</span></span><br><span class="line"><span class="keyword">SELECT</span> product_id, product_name, sale_price, purchase_price</span><br><span class="line">  <span class="keyword">FROM</span> product</span><br><span class="line"> <span class="keyword">ORDER</span> <span class="keyword">BY</span> sale_price, product_id;</span><br><span class="line"><span class="comment">-- 当用于排序的列名中含有NULL时，NULL会在开头或末尾进行汇总。</span></span><br><span class="line"><span class="keyword">SELECT</span> product_id, product_name, sale_price, purchase_price</span><br><span class="line">  <span class="keyword">FROM</span> product</span><br><span class="line"> <span class="keyword">ORDER</span> <span class="keyword">BY</span> purchase_price;</span><br></pre></td></tr></table></figure></li><li><p>LIMIT 语句</p><p>  limit语句可对查询的数据进行取前几个查看。</p><p>  limit n 等同于 limit 0,n  索引从0到n</p><p>  limit m,n 等同于 索引从m到m+n</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查询<span class="number">8</span>条数据，索引从<span class="number">5</span>到<span class="number">12</span>，第<span class="number">6</span>条记录到第<span class="number">13</span>条记录</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_user limit <span class="number">5</span>,<span class="number">8</span>;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>练习题</p><ul><li><p>5.请指出下述SELECT语句中所有的语法错误。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> product_id, SUM（product_name）</span><br><span class="line"><span class="comment">--本SELECT语句中存在错误。</span></span><br><span class="line">  <span class="keyword">FROM</span> product </span><br><span class="line"> <span class="keyword">GROUP</span> <span class="keyword">BY</span> product_type </span><br><span class="line"> <span class="keyword">WHERE</span> regist_date <span class="operator">&gt;</span> <span class="string">&#x27;2009-09-01&#x27;</span>;</span><br></pre></td></tr></table></figure><p>  1.聚合函数不可以用除聚合键以外的列；2.不可用WHERE对分组结果进行过滤；3.product_name为字符串类型，sum()函数不可用</p><p>  4.SELECT子句没有包含GROUP BY 列</p></li><li><p>6.请编写一条SELECT语句，求出销售单价（sale_price列）合计值大于进货单价（purchase_price列）合计值1.5倍的商品种类。执行结果如下所示。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> product_type,<span class="built_in">SUM</span>(sale_price)<span class="keyword">as</span> <span class="string">&#x27;sum&#x27;</span>,<span class="built_in">SUM</span>(purchase_price) <span class="keyword">as</span> <span class="string">&#x27;sum&#x27;</span> </span><br><span class="line"><span class="keyword">FROM</span> product </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> product_type</span><br><span class="line"><span class="keyword">HAVING</span> <span class="built_in">SUM</span>(sale_price)<span class="operator">&gt;</span><span class="number">1.5</span><span class="operator">*</span><span class="built_in">SUM</span>(purchase_price);</span><br><span class="line"></span><br><span class="line">product_type <span class="operator">|</span> sum  <span class="operator">|</span> sum </span><br><span class="line"><span class="comment">-------------+------+------</span></span><br><span class="line">衣服         <span class="operator">|</span> <span class="number">5000</span> <span class="operator">|</span> <span class="number">3300</span></span><br><span class="line">办公用品      <span class="operator">|</span>  <span class="number">600</span> <span class="operator">|</span> <span class="number">320</span></span><br></pre></td></tr></table></figure></li><li><p>7.此前我们曾经使用SELECT语句选取出了product（商品）表中的全部记录。当时我们使用了ORDERBY子句来指定排列顺序，但现在已经无法记起当时如何指定的了。请根据下列执行结果，思考ORDERBY子句的内容。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> product</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> regist_date <span class="keyword">desc</span>, sale_price;</span><br></pre></td></tr></table></figure><p>  [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-eQJZxQgH-1639969624563)(<a href="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/aee85fce-bc22-45aa-b44e-a9f4e0dff957/Untitled.png">https://s3-us-west-2.amazonaws.com/secure.notion-static.com/aee85fce-bc22-45aa-b44e-a9f4e0dff957/Untitled.png</a>)]</p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL基础 </tag>
            
            <tag> 训练营 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《ppt设计》</title>
      <link href="/2021/08/26/ppt%E6%95%99%E7%A8%8B/"/>
      <url>/2021/08/26/ppt%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="第3集：文字与字体"><a href="#第3集：文字与字体" class="headerlink" title="第3集：文字与字体**"></a>第3集：文字与字体**</h1><p><img src="/img/post/ppt教程/Untitled.png" alt="Untitled"></p><p><strong>一.文案怎么处理？</strong>                  03集：- 02:44     </p><ol><li>文字太多怎么删？<ol><li>拆 分析逻辑拆段落</li><li>找 提取概括内容</li><li>删 删除并优化文字</li></ol></li><li><p>文字不让删怎么办？</p><pre><code> 无法删除的文案可以理清逻辑、突出重点！</code></pre></li></ol><p><strong>二.让文案更有趣</strong></p><ul><li><p>反转法</p><pre><code>  “笨鸟先飞，不如洗洗睡”</code></pre></li><li><p>悬念法</p><pre><code>  “教你12字如何说服男人”</code></pre></li><li><p>谐音法</p><pre><code>  “试不可挡”</code></pre></li></ul><p><strong>三.挑选字体</strong>              03集： - 13:32</p><ol><li>字体本身流出的气质</li><li>常见的字体搭配<ol><li>正文字体：阿里巴巴普惠体、锐字真言体</li><li>字体细致风格<ol><li>毛笔字体：旁门正道粗书体，贤二体。</li><li>硬笔书法字体：手书体，沐瑶随心手写体(安装后以拼音“muyao-softbrush”显示)。</li><li>阳刚字体：旁门正道标题体，站酷高端黑，站酷酷黑。</li><li>柔美字体：站酷小薇logo体，各大字体中“Light”版本。</li><li>卡通字体：站酷快乐体、包图小白体。</li></ol></li></ol></li><li>如何挑选字体<ol><li>字体数量 2~3种</li><li>气质 字体气质与PPT整体气质相符合</li><li>易读 正文便于阅读</li></ol></li></ol><p><strong>四.如何保存特殊字体</strong>          03集：- 14:04</p><ol><li>字体矢量化（效果好，可改色，首选方案）<ol><li>创建一个图形</li><li>先选中字体后选中图形，然后选择合并形状(剪除)</li></ol></li><li>字体图片化（会出现位置偏移的现象）<ol><li>将所有字体全选复制，然后粘贴为图片</li></ol></li><li>嵌入字体(简单快速、有些字体不支持嵌入、文件会变大)<ol><li>文件—选项—保存—将字体嵌入文件</li><li>通常勾选“仅嵌入演示文稿中的字符”</li></ol></li><li>图片演示文稿(转存后PPT内容清晰度下降并无法修改)<ol><li>文件—另存为—文件类型：勾选“PowerPoint图片演示文稿”</li></ol></li><li>现场安装字体<ol><li>将ppt和字体文件放到一个文件夹中，现场安装<h1 id="第4集：形状和图示"><a href="#第4集：形状和图示" class="headerlink" title="第4集：形状和图示**"></a>第4集：形状和图示**</h1></li></ol></li></ol><p><img src="/img/post/ppt教程/Untitled%201.png" alt="Untitled"></p><p>背景：ppt可视化：通过图像化的方式更容易理解内容的规律、趋势以及关联。图像化包括图示、图形、图片、图表</p><p><strong>一.常见的逻辑图示与实战案例</strong>           04集： - 03:24</p><ul><li><p>总分关系</p><pre><code>  围绕一个中心点展开</code></pre></li><li><p>并列关系</p></li><li><p>递进关系</p><h1 id="第5集：图片实战"><a href="#第5集：图片实战" class="headerlink" title="第5集：图片实战**"></a>第5集：图片实战**</h1><p>  <strong>一. 图片的两个作用</strong></p></li></ul><ol><li>佐证事实</li><li>烘托气氛</li></ol><p><strong>二.怎么找到好的图片</strong></p><ol><li><p>图片网站</p><ol><li>pixabay.com</li><li>pexels.com</li><li>unsplash.com</li><li>摄图网</li><li><p>千库网</p><p>不必做图片网站的收藏癖，知道优化搜索关键词更重要</p></li></ol></li><li><p>优化搜索关键词</p><ol><li><p>3w联想法</p><p> <img src="/img/post/ppt教程/Untitled%202.png" alt="Untitled"></p><p> <img src="/img/post/ppt教程/Untitled%203.png" alt="Untitled"></p></li><li><p>3位老师换词法</p><p> <img src="/img/post/ppt教程/Untitled%204.png" alt="Untitled"></p><p> 英语：使用English搜索</p><p> 语文：使用相似词搜索</p><p> 电脑：根据图片下的关键词找到更多的关键词</p></li></ol></li></ol><p><strong>三.挑选图片的三张网</strong>           7：14</p><ol><li>符合主题</li><li>符合气质</li><li>高清留白</li></ol><p><strong>四.图片的5种设计方法</strong>       8：28</p><ol><li><p>为图片增加蒙版</p><p> 作用：聚焦、遮瑕等</p></li><li><p>墨迹效果</p><p> <img src="/img/post/ppt教程/Untitled%205.png" alt="Untitled"></p></li><li><p>布尔运算</p><p> <img src="/img/post/ppt教程/Untitled%206.png" alt="选择一个矩形编辑顶点调整需要的形状，接着选中图片选中形状  相交"></p><p> 选择一个矩形编辑顶点调整需要的形状，接着选中图片选中形状  相交</p></li><li><p>镜像翻转</p><p> <img src="/img/post/ppt教程/Untitled%207.png" alt="截取图片→复制→旋转→水平翻转"></p><p> 截取图片→复制→旋转→水平翻转</p></li><li><p>善于利用图片元素</p><p> <img src="/img/post/ppt教程/Untitled%208.png" alt="Untitled"></p></li></ol><p><strong>五.真实场景中图片如何变好</strong></p><ol><li><p>重塑图片</p><p> 裁剪处理、变色饱和度处理</p><p> <img src="/img/post/ppt教程/Untitled%209.png" alt="Untitled"></p></li><li><p>异形处理</p><p> 抠出需要的形状、套用样机</p><p> <img src="/img/post/ppt教程/Untitled%2010.png" alt="插入任意多边形沿着轮廓去勾勒 填充颜色 图片与形状做布尔运算的相交处理"></p><p> 插入任意多边形沿着轮廓去勾勒 填充颜色 图片与形状做布尔运算的相交处理</p><p> <img src="/img/post/ppt教程/Untitled%2011.png" alt="Untitled"></p></li></ol><p><strong>六.小技能</strong></p><p>图片无缝拉伸</p><p><img src="/img/post/ppt教程/Untitled%2012.png" alt="Untitled"></p><h1 id="第六集：配色"><a href="#第六集：配色" class="headerlink" title="第六集：配色"></a>第六集：配色</h1><p><img src="/img/post/ppt教程/Untitled%2013.png" alt="Untitled"></p><p><strong>一.好的配色的作用</strong></p><pre><code>    企业品牌感、专业、简洁</code></pre><p><strong>二.正确配色的三把刷子</strong></p><p>数量刷</p><p>气质刷</p><p>易读刷</p><p><strong>三.结合实战教你如何配色</strong></p><ul><li><p>单色系配色</p><p>  红色：象征着生命、喜庆、积极                                                     适用主题：购物、食品、党政、文化</p><p>  <img src="/img/post/ppt教程/Untitled%2014.png" alt="Untitled"></p><p>  黄色：活泼轻快有朝气、最醒目 最明亮                                     适用主题：儿童品牌、时尚品牌、金融、美食      </p><p>  <img src="/img/post/ppt教程/Untitled%2015.png" alt="Untitled"></p><p>  蓝色：理智、成熟                                                                                   适用主题：商务、技术创新、科技产品</p><p>  <img src="/img/post/ppt教程/Untitled%2016.png" alt="Untitled"></p><p>  紫色：优雅且温柔、庄重华丽                                                          适用主题：服装、餐饮、酒店、旅游 </p><p>  <img src="/img/post/ppt教程/Untitled%2017.png" alt="Untitled"></p><p>  粉色：柔和 可爱 彰显了浪漫的色调                                              适用主题：母婴、婚庆、旅游、美容、服装</p><p>  <img src="/img/post/ppt教程/Untitled%2018.png" alt="Untitled"></p><p>  绿色：自然  健康、生命、青春                                                        适用主题：健康、医药、能源、农业、食品</p><p>  <img src="/img/post/ppt教程/Untitled%2019.png" alt="Untitled"></p><p>  灰色：比较能营造空间感、让画面有质感有氛围                  适用主题：电子产品、摄影、正装、体育、电器、机械</p><p>  <img src="/img/post/ppt教程/Untitled%2020.png" alt="Untitled"></p><p>  黑色：神秘、高级、奢华、有力量的庄重感                             适用主题：腕表、高端定制、科技、手机、运动</p><p>  <img src="/img/post/ppt教程/Snipaste_2021-08-15_12-18-04.jpg" alt="Snipaste_2021-08-15_12-18-04.jpg"></p></li><li><p>从企业的logo中取色</p><p>  <img src="/img/post/ppt教程/Untitled%2021.png" alt="Untitled"></p></li><li><p>多色系配色</p><p>  去一些配色网找配色：<a href="https://zhuanlan.zhihu.com/p/34781340">五个专业配色网站</a></p><p>  <img src="/img/post/ppt教程/Untitled%2022.png" alt="Untitled"></p><p>  <img src="/img/post/ppt教程/Untitled%2023.png" alt="Untitled"></p><p>  <img src="/img/post/ppt教程/Untitled%2024.png" alt="Untitled"></p></li></ul><p><strong>四.三大渐变技巧快速提升设计</strong></p><ol><li><p>背景的渐变</p><p> <img src="/img/post/ppt教程/Untitled%2025.png" alt="Untitled"></p></li><li><p>线条的渐变</p><p> <img src="/img/post/ppt教程/Untitled%2026.png" alt="Untitled"></p></li><li><p>标题的渐变</p><p> <img src="/img/post/ppt教程/Untitled%2027.png" alt="Untitled"></p></li></ol><p><strong>五.配色和实际场景的关系</strong>              14:25</p><ul><li>学校、政府场景设备比较老旧尽量使用浅色的背景</li><li>LED屏幕一般使用深色背景</li><li>宣布会一般使用暗色背景（不是纯黑）</li><li>需要打印出来的ppt一般使用浅色背景<h1 id="第七集：排版"><a href="#第七集：排版" class="headerlink" title="第七集：排版"></a>第七集：排版</h1></li></ul><p><img src="/img/post/ppt教程/Untitled%2028.png" alt="Untitled"></p><p><strong>一.排版的四大原则</strong>           01:06</p><ol><li><p>分组（相似的东西归为一类）</p><ol><li><p>拉开距离</p><p> <img src="/img/post/ppt教程/Untitled%2029.png" alt="Untitled"></p></li><li><p>使用线条</p><p> <img src="/img/post/ppt教程/Untitled%2030.png" alt="Untitled"></p></li><li><p>善用色块</p><p> <img src="/img/post/ppt教程/Untitled%2031.png" alt="Untitled"></p></li><li><p>使用颜色</p><p> <img src="/img/post/ppt教程/Untitled%2032.png" alt="Untitled"></p></li><li><p>使用图片</p><p> <img src="/img/post/ppt教程/Untitled%2033.png" alt="Untitled"></p></li></ol></li><li><p>对齐</p><p> 对齐让人看的更专业、更直观</p><p> <img src="/img/post/ppt教程/Untitled%2034.png" alt="Untitled"></p><ul><li><p>左对齐（更符合阅读顺序）</p><p>  <img src="/img/post/ppt教程/Untitled%2035.png" alt="Untitled"></p></li><li><p>居中对齐（给人一种稳重的感觉）</p><p>  <img src="/img/post/ppt教程/Untitled%2036.png" alt="Untitled"></p></li><li><p>右对齐（严谨有规律的同时，比较给人一种新颖的感受）</p><p>  <img src="/img/post/ppt教程/Untitled%2037.png" alt="Untitled"></p></li><li><p>两端对齐</p><p>  <img src="/img/post/ppt教程/Untitled%2038.png" alt="Untitled"></p></li><li><p>沿线对齐</p><p>  <img src="/img/post/ppt教程/Untitled%2039.png" alt="Untitled"></p></li></ul></li><li><p>对比</p><ul><li><p>大小对比</p><p>  <img src="/img/post/ppt教程/Untitled%2040.png" alt="Untitled"></p></li><li><p>颜色对比</p><p>  <img src="/img/post/ppt教程/Untitled%2041.png" alt="Untitled"></p></li><li><p>粗细对比</p><p>  <img src="/img/post/ppt教程/Untitled%2042.png" alt="Untitled"></p></li><li><p>虚实对比</p><p>  <img src="/img/post/ppt教程/Untitled%2043.png" alt="Untitled"></p></li><li><p>字体对比（字体之间需要有一定差异）</p><p>  <img src="/img/post/ppt教程/Untitled%2044.png" alt="Untitled"></p></li></ul></li><li><p>重复（给人感觉是统一的 整体的）</p><p> <img src="/img/post/ppt教程/Untitled%2045.png" alt="Untitled"></p><ul><li><p>元素的重复</p><p>  <img src="/img/post/ppt教程/Untitled%2046.png" alt="Untitled"></p></li><li><p>颜色的重复</p><p>  不妨参考行业的属性、企业VI、个人喜好</p><p>  <img src="/img/post/ppt教程/Untitled%2047.png" alt="Untitled"></p></li><li><p>版式的重复</p><p>  <img src="/img/post/ppt教程/Untitled%2048.png" alt="Untitled"></p></li></ul></li></ol><p><strong>二.留白的妙用</strong>                       31:35</p><ul><li><p>留白的误区</p><ul><li><p>留白并不是单纯的留出白色，应该是流出空间</p><p>  <img src="/img/post/ppt教程/Untitled%2049.png" alt="Untitled"></p></li><li><p>并不是所有场景都适合留白</p><p>  产品促销、节假日的海报需要一种廉价感</p><p>  <img src="/img/post/ppt教程/Untitled%2050.png" alt="Untitled"></p></li></ul></li><li><p>留白上手的办法</p><ol><li><p>选择合适的图片</p><p> <img src="/img/post/ppt教程/Untitled%2051.png" alt="Untitled"></p></li><li><p>拉开适当的距离</p><p> <img src="/img/post/ppt教程/Untitled%2052.png" alt="Untitled"></p></li></ol></li></ul><p><strong>三.五大相见恨晚的设计技巧</strong>                            34:53</p><ol><li><p>放大局部</p><p> <img src="/img/post/ppt教程/Untitled%2053.png" alt="Untitled"></p></li><li><p>突破边界</p><p> 抠图网站：<a href="https://www.remove.bg/zh">https://www.remove.bg/zh</a></p><p> <img src="/img/post/ppt教程/Untitled%2054.png" alt="Untitled"></p></li><li><p>倾斜让画面更有动感</p><p> <img src="/img/post/ppt教程/Untitled%2055.png" alt="Untitled"></p></li><li><p>放到图片的闪光点</p><p> <img src="/img/post/ppt教程/Untitled%2056.png" alt="Untitled"></p></li><li><p>图片的二次加工</p><p> 像素风网站：<a href="http://xoihazard.com/tools/halftone">xoihazard.com/tools/halftone</a></p><p> <img src="/img/post/ppt教程/Untitled%2057.png" alt="Untitled"></p><p> 双色调的图片效果：<a href="http://duotones.co/">duotones.co</a></p><p> <img src="/img/post/ppt教程/Untitled%2058.png" alt="Untitled"></p><p> 故障风效果:/photomosh.com</p><p> <img src="/img/post/ppt教程/Snipaste_2021-08-16_12-55-00.jpg" alt="Snipaste_2021-08-16_12-55-00.jpg"></p></li></ol><h1 id="第八集：ppt的解法"><a href="#第八集：ppt的解法" class="headerlink" title="第八集：ppt的解法"></a>第八集：ppt的解法</h1><p><img src="/img/post/ppt教程/Untitled%2059.png" alt="Untitled"></p><p><strong>一.为什么要设计典型页面？</strong></p><pre><code>    脱颖而出、制造难忘感</code></pre><p><strong>二.ppt的组成</strong></p><p><img src="/img/post/ppt教程/Untitled%2060.png" alt="Untitled"></p><ul><li><p>ppt用于阅读有过渡页和目录页很好，不过用于演讲则显得多余</p><ul><li>可用口述代替画面</li><li><p>将目录页和过渡页结合到一页当中</p><p>  <img src="/img/post/ppt教程/Untitled%2061.png" alt="Untitled"></p></li></ul></li></ul><p><strong>三.登月计划提升你的演讲逻辑</strong></p><p><img src="/img/post/ppt教程/Untitled%2062.png" alt="Untitled"></p><p><strong>四.典型页面的设计技巧</strong></p><ul><li><p>没时间快速做出ppt</p><ol><li><p>找到留白多的图片设计</p><p> <img src="/img/post/ppt教程/Untitled%2063.png" alt="Untitled"></p></li><li><p>使用星空图片</p><p> <img src="/img/post/ppt教程/Untitled%2064.png" alt="Untitled"></p></li><li><p>图片与形状组合</p><p> <img src="/img/post/ppt教程/Untitled%2065.png" alt="Untitled"></p></li></ol></li><li><p>有时间制造更有创意的ppt技巧</p><ol><li><p>异形处理(布尔运算、蒙版、渐变)</p><p> <img src="/img/post/ppt教程/Untitled%2066.png" alt="Untitled"></p></li><li><p>善用书法字体</p><p> <img src="/img/post/ppt教程/Untitled%2067.png" alt="Untitled"></p></li><li><p>水墨笔刷</p></li></ol></li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ppt </tag>
            
            <tag> 办公 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《网络爬虫-概述》</title>
      <link href="/2021/08/26/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB_%E6%A6%82%E8%BF%B0/"/>
      <url>/2021/08/26/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB_%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="考核方式"><a href="#考核方式" class="headerlink" title="考核方式"></a>考核方式</h1><p><img src="/img/post/Untitled.png" alt="/img/post/Untitled.png"></p><p><img src="/img/post/Untitled%201.png" alt="/img/post/Untitled%201.png"></p><h1 id="数据来源："><a href="#数据来源：" class="headerlink" title="数据来源："></a>数据来源：</h1><p>政府|机构、企业自身、数据公司、数据交易、网络爬虫</p><h1 id="AI时代三要素："><a href="#AI时代三要素：" class="headerlink" title="AI时代三要素："></a>AI时代三要素：</h1><p>数据、算力、算法</p><h1 id="爬虫应用场景："><a href="#爬虫应用场景：" class="headerlink" title="爬虫应用场景："></a>爬虫应用场景：</h1><p><img src="/img/post/Untitled%202.png" alt="/img/post/Untitled%202.png"></p><h1 id="爬虫的合法性："><a href="#爬虫的合法性：" class="headerlink" title="爬虫的合法性："></a>爬虫的合法性：</h1><p><img src="/img/post/Untitled%203.png" alt="/img/post/Untitled%203.png"></p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p><img src="/img/post/Untitled%204.png" alt="/img/post/Untitled%204.png"></p><h1 id="我的第一个爬虫："><a href="#我的第一个爬虫：" class="headerlink" title="我的第一个爬虫："></a>我的第一个爬虫：</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#第一个爬虫（四步法）</span></span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="comment">#1.确定要爬虫的url</span></span><br><span class="line">url=<span class="string">&quot;http://www.baidu.com&quot;</span></span><br><span class="line"><span class="comment">#2.发送http请求</span></span><br><span class="line">response=urllib.request.urlopen(url)</span><br><span class="line"><span class="built_in">print</span>(response)</span><br><span class="line"><span class="comment">#3获取网站相应的内容</span></span><br><span class="line">html = response.read().decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(html)</span><br><span class="line"><span class="comment">#4.数据存储</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;baidu.html&quot;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)<span class="keyword">as</span> f:</span><br><span class="line">    f.write(html)</span><br></pre></td></tr></table></figure><h1 id="课堂练习1："><a href="#课堂练习1：" class="headerlink" title="课堂练习1："></a>课堂练习1：</h1><p>【实训项目名称】：我的第一个爬虫—— Hello Home</p><p>【实训任务】：</p><p>（1）爬取你经常浏览网站的首页（5个以上）;</p><p>（2）将爬取的内容存储到文件中（格式为.html）;</p><p>答案：</p><ol><li>爬取博客园首页</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#第一个爬虫（四步法）</span></span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="comment">#1.确定要爬虫的url</span></span><br><span class="line">url = <span class="string">&quot;https://www.cnblogs.com&quot;</span>  <span class="comment">#博客园</span></span><br><span class="line"><span class="comment">#2.发送http请求</span></span><br><span class="line">response = urllib.request.urlopen(url)</span><br><span class="line"><span class="built_in">print</span>(response)</span><br><span class="line"><span class="comment">#3.获取网站相应的内容</span></span><br><span class="line">html = response.read().decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(html)</span><br><span class="line"><span class="comment">#4.数据存储</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;blogs.html&quot;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)<span class="keyword">as</span> f:</span><br><span class="line">    f.write(html)</span><br></pre></td></tr></table></figure><p><img src="/img/post/Untitled%205.png" alt="/img/post/Untitled%205.png"></p><ol><li>爬取看雪首页</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#第一个爬虫（四步法）</span></span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="comment">#1.确定要爬虫的url</span></span><br><span class="line">url = <span class="string">&quot;https://bbs.pediy.com/&quot;</span></span><br><span class="line"><span class="comment">#2.发送http请求</span></span><br><span class="line">response = urllib.request.urlopen(url)</span><br><span class="line"><span class="comment">#3.获取网站相应的内容</span></span><br><span class="line">html = response.read().decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="comment">#4.数据存储</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;看雪.html&quot;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(html)</span><br></pre></td></tr></table></figure><p><img src="/img/post/Untitled%206.png" alt="/img/post/Untitled%206.png"></p><ol><li>爬取央视CCTV首页</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#第一个爬虫（四步法）</span></span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="comment">#1.确定要爬虫的url</span></span><br><span class="line">url = <span class="string">&quot;https://tv.cctv.com/&quot;</span></span><br><span class="line"><span class="comment">#2.发送http请求</span></span><br><span class="line">response = urllib.request.urlopen(url)</span><br><span class="line"><span class="comment">#3.获取网站相应的内容</span></span><br><span class="line">html = response.read().decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(html)</span><br><span class="line"><span class="comment">#4.数据存储</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;cctv.html&quot;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)<span class="keyword">as</span> f:</span><br><span class="line">    f.write(html)</span><br></pre></td></tr></table></figure><p><img src="/img/post/Untitled%207.png" alt="/img/post/Untitled%207.png"></p><ol><li>爬取全国信息安全标准化技术委员会首页</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#第一个爬虫（四步法）</span></span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="comment">#1.确定要爬虫的url</span></span><br><span class="line">url = <span class="string">&quot;https://www.tc260.org.cn/front/main.html&quot;</span></span><br><span class="line"><span class="comment">#2.发送http请求</span></span><br><span class="line">response = urllib.request.urlopen(url)</span><br><span class="line"><span class="built_in">print</span>(response)</span><br><span class="line"><span class="comment">#3.获取网站相应的内容</span></span><br><span class="line">html = response.read().decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(html)</span><br><span class="line"><span class="comment">#4.数据存储</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;CNERT.html&quot;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)<span class="keyword">as</span> f:</span><br><span class="line">    f.write(html)</span><br></pre></td></tr></table></figure><p><img src="/img/post/Untitled%208.png" alt="/img/post/Untitled%208.png"></p><p>5.爬取厦门大学数据库实验室首页</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#第一个爬虫（四步法）</span></span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="comment">#1.确定要爬虫的url</span></span><br><span class="line">url = <span class="string">&quot;http://dblab.xmu.edu.cn/&quot;</span></span><br><span class="line"><span class="comment">#2.发送http请求</span></span><br><span class="line">response = urllib.request.urlopen(url)</span><br><span class="line"><span class="built_in">print</span>(response)</span><br><span class="line"><span class="comment">#3.获取网站相应的内容</span></span><br><span class="line">html = response.read().decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(html)</span><br><span class="line"><span class="comment">#4.数据存储</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;bigdatalab.html&quot;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)<span class="keyword">as</span> f:</span><br><span class="line">    f.write(html)</span><br></pre></td></tr></table></figure><p><img src="/img/post/Untitled%209.png" alt="/img/post/Untitled%209.png"></p><h1 id="chrom浏览器开发工具介绍："><a href="#chrom浏览器开发工具介绍：" class="headerlink" title="chrom浏览器开发工具介绍："></a>chrom浏览器开发工具介绍：</h1><p><img src="/img/post/Untitled%2010.png" alt="NetWork抓包工具"></p><p>NetWork抓包工具</p><p><img src="/img/post/Untitled%2011.png" alt="NetWork抓包工具"></p><p>NetWork抓包工具</p><p><img src="/img/post/Untitled%2012.png" alt="/img/post/Untitled%2012.png"></p><p><img src="/img/post/Untitled%2013.png" alt="/img/post/Untitled%2013.png"></p><h1 id="反爬与反反爬机制："><a href="#反爬与反反爬机制：" class="headerlink" title="反爬与反反爬机制："></a>反爬与反反爬机制：</h1><ul><li>爬虫时遇到反爬</li></ul><p><img src="/img/post/Untitled%2014.png" alt="418：非浏览器请求"></p><p>418：非浏览器请求</p><ul><li>常见的反爬与反反爬</li></ul><p><img src="/img/post/Untitled%2015.png" alt="/img/post/Untitled%2015.png"></p><h1 id="课堂练习2："><a href="#课堂练习2：" class="headerlink" title="课堂练习2："></a>课堂练习2：</h1><p>【实训项目名称】：解决“我的第一个爬虫—— Hello Home”中的臭虫（Bug）</p><p>【实训任务】：</p><p>（1）解决上次Hello Home中出现的U-A反爬问题，每个项目都增加上U-A伪装。</p><p>（2）找到2个以上有UA反爬的网站，回复在作业的上传区，同时也要发布在课程里的讨论专区【有U-A反爬机制的网址列表】。</p><p>答案：</p><ol><li>爬取CNCERT首页</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="comment">#步骤1.确定我们要爬取内容的网址url</span></span><br><span class="line">url = <span class="string">&quot;https://www.cert.org.cn/&quot;</span><span class="comment">#</span></span><br><span class="line"><span class="comment">#增加U-A伪装请求头</span></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#步骤2.发出HTTP请求</span></span><br><span class="line"><span class="comment">#包括请求头设置的请求</span></span><br><span class="line">request = urllib.request.Request(url=url,headers=headers)</span><br><span class="line">response = urllib.request.urlopen(request)</span><br><span class="line"><span class="comment">#步骤3.获取网站响应的数据</span></span><br><span class="line">content = response.read().decode()</span><br><span class="line"><span class="comment">#步骤4.对响应的数据进行持久化</span></span><br><span class="line"><span class="built_in">print</span>(content)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;CNCERT.html&quot;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;UTF-8&#x27;</span>)<span class="keyword">as</span> f:</span><br><span class="line">    f.write(content)</span><br></pre></td></tr></table></figure><p><img src="/img/post/Untitled%2016.png" alt="/img/post/Untitled%2016.png"></p><ol><li>爬取bugfor首页</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="comment">#1.确定我们要爬取内容的网址url</span></span><br><span class="line">url = <span class="string">&quot;https://www.bugfor.com/&quot;</span></span><br><span class="line"><span class="comment">#增加U-A伪装请求头</span></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#2.发出HTTP请求</span></span><br><span class="line"><span class="comment">#包含请求头设置的请求</span></span><br><span class="line">request = urllib.request.Request(url=url,headers=headers)</span><br><span class="line">response = urllib.request.urlopen(request)</span><br><span class="line"><span class="comment">#3.获取网站响应的数据</span></span><br><span class="line">content = response.read().decode()</span><br><span class="line"><span class="comment">#4.对响应的数据持久化</span></span><br><span class="line"><span class="built_in">print</span>(content)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;bugfor.html&quot;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;UTF-8&#x27;</span>)<span class="keyword">as</span> f:</span><br><span class="line">    f.write(content)</span><br></pre></td></tr></table></figure><p><img src="/img/post/Untitled%2017.png" alt="/img/post/Untitled%2017.png"></p><h1 id="微实训"><a href="#微实训" class="headerlink" title="微实训"></a>微实训</h1><p><img src="/img/post/Untitled%2018.png" alt="/img/post/Untitled%2018.png"></p><p><a href="https://bbs.pediy.com：">https://bbs.pediy.com：</a></p><p><img src="/img/post/2.png" alt="/img/post/2.png"></p><p><a href="http://zh.d2l.ai/index.html">http://zh.d2l.ai/index.html</a>:</p><p><img src="/img/post/3.png" alt="/img/post/3.png"></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web：">https://developer.mozilla.org/zh-CN/docs/Web：</a></p><p><img src="/img/post/1.png" alt="/img/post/1.png"></p><p>Accept    可接受的响应内容类型（Content-Types）。</p><p>Accept-Charset    可接受的字符集。</p><p>Accept-Encoding    可接受的响应内容的编码方式。</p><p>Authorization    用于表示HTTP协议中需要认证资源的认证信息</p><p>Cache-Control    用来指定当前的请求/回复中的，是否使用缓存机制。</p><p>Cookie    由之前服务器通过Set-Cookie（见下文）设置的一个HTTP协议Cookie.</p><p>Host    表示服务器的域名以及服务器所监听的端口号。如果所请求的端口是对应的服务的标准端口（80），则端口号可以省略。</p><p>Refresh    用于重定向，或者当一个新的资源被创建时。默认会在5秒后刷新重定向。</p><p>Set-Cookie    设置HTTP cookie</p><p>Status    通用网关接口的响应头字段，用来说明当前HTTP连接的响应状态。</p><h1 id="课后作业：-预习网络请求方式"><a href="#课后作业：-预习网络请求方式" class="headerlink" title="课后作业：    预习网络请求方式"></a>课后作业：    预习网络请求方式</h1><p><img src="/img/post/Untitled%2019.png" alt="/img/post/Untitled%2019.png"></p><ul><li>requests库——Get请求：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#引入库文件</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="comment">#步骤1：找到要爬取的URL</span></span><br><span class="line">url = <span class="string">&quot;https://www.bilibili.com/&quot;</span></span><br><span class="line"><span class="comment">#步骤2：发送HTTP请求</span></span><br><span class="line">response = requests.get(url)</span><br><span class="line"><span class="comment">#步骤3：获取网站响应的数据</span></span><br><span class="line">html = response.content.decode(<span class="string">&quot;UTF-8&quot;</span>)</span><br><span class="line"><span class="comment">#步骤4：对响应的数据进行持久化</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;R-hellobilibili.html&quot;</span>,<span class="string">&quot;w&quot;</span>,encoding=<span class="string">&quot;UTF-8&quot;</span>)<span class="keyword">as</span> file:</span><br><span class="line">    file.write(html)</span><br></pre></td></tr></table></figure><p><img src="/img/post/Untitled%2020.png" alt="/img/post/Untitled%2020.png"></p><ul><li><p>Get带参请求</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#引入库文件</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="comment">#1.获取爬取内容的URL</span></span><br><span class="line">url =<span class="string">&quot;https://search.bilibili.com/&quot;</span></span><br><span class="line"><span class="comment">#2.确定搜索的关键字</span></span><br><span class="line">keyword=<span class="built_in">input</span>(<span class="string">&quot;请输入搜索的关键字：&quot;</span>)</span><br><span class="line"><span class="comment">#3.设置URL的额外参数</span></span><br><span class="line">param=&#123;</span><br><span class="line">    <span class="string">&quot;keyword&quot;</span>:keyword</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#4.构造伪请求头</span></span><br><span class="line">header=&#123;</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>:<span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#5.发送HTTP请求</span></span><br><span class="line">response = requests.get(url,params=param,headers=header)</span><br><span class="line"><span class="comment">#6.获取网站响应的数据</span></span><br><span class="line">html = response.text</span><br><span class="line"><span class="comment">#7.对响应的数据进行持久化</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;HelloBaiduSearch.html&quot;</span>,<span class="string">&quot;w&quot;</span>,encoding=<span class="string">&quot;UTF-8&quot;</span>)<span class="keyword">as</span> file:</span><br><span class="line">    file.write(html)</span><br></pre></td></tr></table></figure><p>  <img src="/img/post/Untitled%2021.png" alt="/img/post/Untitled%2021.png"></p></li><li><p>Post请求</p><p>  课程代码：</p><p>  <img src="/img/post/Untitled%2022.png" alt="/img/post/Untitled%2022.png"></p><p>  post与get区别：</p><p>  <img src="/img/post/Untitled%2023.png" alt="/img/post/Untitled%2023.png"></p><ul><li><p>AJAX</p><p><img src="/img/post/Untitled%2024.png" alt="/img/post/Untitled%2024.png"></p><p>课程代码：</p><p><img src="/img/post/Untitled%2025.png" alt="/img/post/Untitled%2025.png"></p><p>级联请求：</p><p><img src="/img/post/Untitled%2026.png" alt="/img/post/Untitled%2026.png"></p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《新摄影笔记》</title>
      <link href="/2021/04/10/%E3%80%8A%E6%96%B0%E6%91%84%E5%BD%B1%E7%AC%94%E8%AE%B0%E3%80%8B/"/>
      <url>/2021/04/10/%E3%80%8A%E6%96%B0%E6%91%84%E5%BD%B1%E7%AC%94%E8%AE%B0%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<p><strong>前言</strong></p><ul><li>在平凡中拍摄到不凡的瞬间</li><li>摄影就是记录下您到达并发现的、触动您内心的场景及瞬间。</li><li>您通过一张或者一组照片要表达的主题，就是这张或者这组照片最重要的东西。</li><li>构图并不决定画面中有什么元素，也不决定这些元素的状态。构图主要决定元素摆放在画面中的什么位置。</li></ul><p><strong>什么是焦距</strong></p><p>这个数字越小，我们称之为焦距越短，拍摄的视野就越宽，取景范围就越广，画面中容纳的景物也就越多，但是每个景物在画面中占的面积就越小。这个数字越大，我们称之为焦距越长，拍摄的视野就越窄，取景范围就越窄，画面中容纳的景物也就越少，但是每个景物在画面中占的面积就越大。</p><p><strong>焦距与题材</strong></p><ul><li>超广角焦距一般指的是24mm以下的焦距</li><li>24~28mm是较为标准的广角焦距，主要用来拍摄风景。</li><li>35mm被称为“大师的焦距”，也被称为“人文眼”。</li><li>50mm焦距近似人眼的透视效果，适合拍摄人文照片，同时一般光圈较大，能有很好的背景虚化效果，适合拍摄人像照片，也是“大师”们常用的焦距。</li><li>85mm焦距的镜头被称为人像镜头，能有很好的背景虚化效果，很好的画面裁切能力，还能保持和模特之间有适当的“交流”距离。</li><li>135mm焦距的镜头也是差不多的效果，只是它更加适合拍特写，以及稍远一些的拍摄，也是拍摄人像的常用焦距。</li><li>200mm和300mm就是妥妥的长焦镜头了，可用于拍摄鸟类啊，荷花啊，运动物体啊，</li><li>300mm焦距以上的镜头，适合拍摄野生动物、运动题材等。也适合拍日出、日落，满月、弦月等的特写。</li></ul><p>超广角变焦镜头一般指的是从11mm、12mm、14mm、16mm、18mm这样的超广角焦距“起跳”，直到24mm、35mm这样的焦距截止的镜头</p><p>标准变焦镜头一般就是指从24mm或者28mm起跳，直到70mm、85mm、105mm、120mm截止的镜头。</p><p>中长焦变焦镜头一般指的是从70mm、100mm左右起，直到200mm、300mm、400mm截止的镜头。其适合拍摄远的景物，用来拍摄人像或者街拍人文题材也不错。</p><p>超长焦变焦镜头一般指的是从150mm、200mm起，直到500mm、600mm截止的镜头。这类镜头适合拍摄远的景物。较常见的就是拍野生动物题材了。</p><p>常用焦距匹配题材拍摄风光：35mm或50mm  拍摄人文：35mm  拍摄人像：50mm或85mm   拍摄花鸟：200mm</p><p>不是什么题材一定要用什么焦距拍摄，而是当您带着适合某个题材的焦距的镜头，大概率会使相关镜头成为拍摄的“主力”。而不带，则可能会少拍摄到很多照片。</p><p><strong>等效焦距</strong></p><p>这时APS-C机身安装200mm镜头拍摄的画面就等同于全画幅机身安装300mm镜头拍摄的效果。</p><p>实际焦距×焦距转换系数=35mm焦距等效焦距</p><p>⑴ 全画幅相机只能用全画幅镜头。⑵ 全画幅镜头既可以用在全画幅相机上，也可以用在半画幅相机（APS-C画幅相机的俗称）上。⑶ 可换镜头上面标注的焦距都是实际焦距。全画幅镜头和半画幅专用镜头都是如此。⑷ 只要是半画幅机身，不管用什么镜头，就一定要通过焦距转换系数来求得等效焦距。⑸ 全画幅系数是1，就是不需要计算，等效焦距就是实际焦距。尼康、索尼、宾得、富士半画幅相机的焦距转换系数是1.5。佳能半画幅相机的焦距转换系数是1.6。奥之心和松下的M/43系统是乘2。</p><p>当我们说到焦距与题材的时候，说的都是35mm等效焦距或者说135等效焦距。</p><p><strong>什么是透视</strong></p><p>什么是透视呢？简单说就是“近大远小”。</p><p>这也说明了焦距与透视的一些间接关系：因为使用广角镜头拍摄往往离得近，所以透视效果明显；因为使用长焦镜头拍摄往往离得远，所以透视效果不明显。</p><p><strong>透视效果在人像照片中的体现</strong></p><p>使用广角镜头的时候，往往要离得近，离得近则透视感强。使用长焦镜头的时候，往往要离得远，离得远则透视感弱。</p><p>对圆脸的人物来说使用50mm的焦距拍摄透视效果比较好。如果是“锥子脸”的人物，那么使用85mm的焦距也许是最好的。</p><p>一般来说24mm或者35mm的焦距更加适合拍摄人物全身照。</p><p>半身和特写拍摄这种常用的人像拍摄方式，更应该用50mm或者85mm这样的焦距拍摄。</p><p><strong>如何取景</strong></p><p>取景决定了您拍摄的画面中有什么元素，以及这些元素以什么状态出现。</p><p>如何控制取景范围？即满足控制取景范围后，我们取景进画面的元素要尽量对主题有帮助，至少不能影响主题的表达。</p><p>不同的取景角度可以带来不同的透视效果</p><p>另一方面，取景角度也可以决定画面中有哪些元素。</p><p>好器材对于拍摄出好照片，绝对是有很大帮助的。</p><p><strong>延伸学习 问题与提高</strong></p><p>不管您如何控制取景范围，如何找取景角度，如何抓取景时机，紧紧围绕的都是您拍摄的照片的“中心思想”——主题。</p><p><strong>取景常见的7个问题</strong></p><p>有句话叫“人像拍摄三要素：模特好看、模特好看、模特好看”</p><p>对摄影来说，这个“景”要首先能触动您。</p><p>星空、银河、流星雨、日出、日落等景色，一定要找到好的地面景物作为衬托。这样才算是一幅完整的画面。</p><p>拍摄的画面有主体（人或物）的时候，我们拍摄时要特别关注主体是否在“最佳状态”。</p><p>一般来说，我们要采用稍微俯拍的角度去拍摄人物，这会让脸型显得更好看。</p><p>画面中缺少着眼点</p><p>遇到一个很好看的场景，可以在这里待出现着眼点。</p><p>画面需要前景通常只有一个原因，有了前景能更加烘托主题、氛围。</p><p>拍摄风景的时候捡捡垃圾，拍摄人像的时候躲躲背景中的人，这都是拍摄的常识</p><p><strong>取景的摄影语言</strong></p><p>控制取景范围营造反差</p><p>所谓代入感就是指让人能够和画面中的某个元素“感同身受”，或者至少让人有身临其境的感觉。从取景的角度来说，获得代入感，较简单的就是视角一致，或者离得近。</p><p>超近距离拍摄会让观者更能够产生到临场感</p><p>首先恰当的前景可以引导我们的视线。有纵深感的前景可以将我们的视线引导到画面的主体，这是突出主体的一个好办法。</p><p>前景可能和主体有呼应，以强化我们要表达的画面主题</p><p><strong>影调</strong></p><p>我们在初学时，可以简单将影调理解为一张照片的明暗程度。明亮的照片就是高调，昏暗的照片就是低调，不亮不暗的照片就是中间调。</p><p>中间调就是指高调和低调中间的影调。如果非要有一个能让人信服的概念的话，就必须引入18%灰的概念。</p><p>现实生活中所有物品的反射率大概是18%。相机默认还原为中间亮度，就是18%的反射率，所以中间的亮度又被称为18%灰。</p><p><strong>影调的量化</strong></p><p>中间调也是相机或者手机默认的曝光结果，也就是自动挡曝光时的照片亮度。</p><p>那么我们就需要在拍摄前将影调量化。其实在相机中有一个非常标准的量化体系——曝光补偿。</p><p>曝光值是用来量化一张照片明暗程度的参数。简单地说，曝光值就是一张照片的亮度，就是曝光量</p><p>大家请记住曝光补偿通常就是指照片亮度。这并不是很严谨，但是足够“简单粗暴”，就先这么记。</p><p><strong>测光是怎么回事</strong></p><p>测光就是指相机帮助您衡量您测光区域的亮度的功能。</p><p>测光就是相机衡量测光区域亮度的功能</p><p>测光主要的模式为点测光和评价测光（也称矩阵测光、多重测光等，不用品牌的相机叫法不同）这两种，这也是较常用的两种。</p><p>所有的测光模式仅在测光区域以及计算权重方面有差异，并无本质上谁更高级、谁更专业的区分</p><p>点测光只对画面极小的部分（约1%~1.5%）进行测光，适合用于测试特别复杂和极端的光线下（例如，逆光条件，舞台灯光条件等），某些您明确知道要曝光到什么程度的点的亮度</p><p>对模特的脸进行点测光，并且保持曝光补偿为0EV，那么不管周围是什么亮度，相机都会保证模特的脸曝光正常</p><p><strong>曝光补偿怎么用</strong></p><p>其实只要相机在“醒着”的状态，就是时时刻刻都在测光的。半按快门按钮只是为了激活相机。</p><p>同理，如果取景范围本身比较黑或者比较暗，在画面中占了很大面积，为了体现其本来的颜色就要把照片拍暗，就要减少曝光补偿。</p><p>所以如果取景范围内很黑，我们就要拍出这种原本的黑，需要减少曝光补偿，是为“黑减”。</p><p><strong>控制曝光三要素</strong></p><p>光圈是用光圈值表示的。这个数值其实是焦距与光圈孔径的比值，所以孔径是放在了分母上。这样一来光圈越大，光圈值越小；光圈越小，光圈值其实越大。</p><p>光圈值越小，光圈越大，照片越容易拍明亮；光圈值越大，光圈越小，照片越容易拍暗</p><p>只需记住改变1挡光圈，亮度大慨增加一位或降低一半</p><p>光圈越大，光圈孔径越大，那么背景虚化能力越强</p><p>镜头是不是脏了可以使用小光圈对着白墙拍摄一张照片来检验。</p><p>光圈相关的知识基本上就这么简单。大家要记住：⑴ 光圈是表示镜头中孔径大小的一个比值；⑵ 光圈越大光圈值越小，光圈越小光圈值越大；⑶ 光圈越大照片越容易拍明亮，光圈越小照片越容易拍暗；⑷ 光圈越大虚化效果越强，光圈越小虚化效果越弱。</p><p>比1/4秒速度低的，就是很低的快门速度；比1/60秒速度低的，就是慢门；比1/250秒速度高的，就是高速快门；比1/2000秒速度高的，就是很高的高速快门。</p><p>感光度提高造成的画质下降主要表现为4个现象：”锐度下降”、“细节损失”、“噪点增加”、“色彩偏移”</p><p><strong>互易律</strong></p><p>在光圈、快门速度、感光度的共同作用下，就可以决定曝光补偿。而这4个参数，相邻两挡之间曝光量都是2倍关系。</p><p>通过测光，我们发现当光圈为f/8、快门速度为1/60秒、感光度为ISO 1600的时候，曝光补偿为0EV</p><p><strong>M挡手动曝光</strong></p><p>在M挡下，光圈、快门速度、感光度这三者都可以由您完全控制。</p><p><strong>A挡光圈优先</strong></p><p>A挡光圈优先模式，并不是一个半自动或者自动的曝光模式，光圈优先模式依然可以让您完全控制曝光——因为您可以在这个模式下直接调节曝光补偿。</p><p>光圈优先模式适用于需要控制光圈的时候，比如在拍摄人像、风光等场景中使用</p><p><strong>S挡快门优先</strong></p><p>S挡（佳能等一些品牌也称为Tv挡）就是指快门优先模式。快门优先模式就是您控制快门速度，您控制曝光补偿，光圈由相机自己给出。</p><p>快门优先模式适用于拍摄画面中有动态元素的场景。</p><p>在使用光圈优先模式和快门优先模式的时候，感光度也是可以由我们来控制的。但我建议将感光度设定为“AUTO”，对的，设定为自动。</p><p><strong>又谈M挡手动曝光</strong></p><p>拍摄极黑的场景，P、S、A 3个挡位的曝光补偿最多也就到±5EV，一般也就是±3EV。但是有的东西黑极了，就需要减少曝光补偿不止5挡，所以索性就直接用M挡了。</p><p>用闪光灯的时候一般也用M挡。</p><p>对于拍摄多张照片进行拼接，或者后期堆栈（叠加）合成照片，我们也要使用M挡，保证用同一个参数拍摄，这样才能成功合成照片。</p><p><strong>第4节 正确的曝光</strong></p><p>当照片中大面积是白色或者浅色的元素时，我们要将照片拍摄得明亮一些。当照片中大面积是黑色或者深色的元素时，我们要将照片拍摄得灰暗一些，以准确拍摄出这个场景本来的亮度。</p><p><strong>直方图</strong></p><p>最关键的就是最终的曝光结果也要符合您的拍摄意图，以及要表达的照片主题。所以对于一个场景的曝光，也没有一定之规，是很“主观”的。</p><p>一幅高调的作品，就应该在直方图右边有很多像素，右边曲线高一些。</p><p>一幅低调的作品，就应该在直方图左边有很多像素，左边曲线高一些。</p><p>一幅强反差的作品，就应该在直方图两边有很多像素，曲线为两边高、中间低。</p><p>这样拍摄时，我们就可以实时以直方图作为参考。重要的是应尽量避免死黑或者死白的出现</p><p>在拍摄风光的时候，以直方图作为参考，可以帮我们尽量“向右曝光”——拍得过曝一些，并且不让画面显得死白。</p><p>不同的场景下，针对不同的职业特点，会有不同的拍摄方法。对于摆拍，可以慢慢调，在保证不死白的前提下，宁过勿欠是非常好的。对于抓拍，对出片速度有要求，曝光不需要那么“精耕细作”，遇到大光比场景，宁欠勿过是个保险的方法。</p><p>提亮暗部和压暗亮部，都是通过减小反差的手法来实现正常曝光的</p><p>提亮暗部主要通过人造光或者利用环境光为主体补光。</p><p>所谓高动态范围（High-Dynamic-Range，HDR），说简单点儿就是高宽容度，白的地方不显得死白，黑的地方不显得死黑。</p><p>下面我就说几点我对HDR的个人看法。⑴ 使用HDR的“最高境界”就是使照片看起来舒服，看不出是使用了HDR的。⑵ 相机拍摄使用HDR，会自动生成一张使用HDR的照片，但最好同时保留原片，也许您会对自动生成的照片不满意，这样您还有后期调整的机会。⑶ 使用后期软件的HDR，曝光情况不同的照片越多越好，RAW格式的比JPG格式的好。⑷ HDR尽量只针对风光场景使用吧。画面中不要有动的东西。⑸ 不要“为了HDR而HDR”。</p><p><strong>光线的特性</strong></p><p>首先我们要知道光线的3个特性。⑴ 强度。光线的强度与光源的能量、距离以及传播介质有关。光线的强度给人的直观感觉就是光线的明暗程度。⑵ 方向。光线的方向就是指光源的方向，但是在多光源或者漫反射的情况下就不太容易确定方向。⑶ 色温。色温主要表现在光线的颜色上。</p><p>其实顺光不应过多地运用在人像摄影中。因为人像摄影时正面直射的光线会消除面部的影子，使得面部看起来趋于平面化，所以顺光又叫平光。</p><p>我们在顺光拍摄风景的时候，也更容易获得我们希望看到的蓝天、白云、红花、绿草效果。</p><p>90°侧光是用来强调明暗对比的特殊光线。被摄主体一面处于强光中，另一面则完全处于阴影中。90°侧光非常适合用来表现被摄主体表面的质感。</p><p><strong>白平衡</strong></p><p>白平衡的初始功能就是将在不同环境色温中的白色物体都还原成真的白色。</p><p>所以在使用自定义白平衡之前一定要先在您要拍摄的场景中设定一下自定义白平衡。</p><p>新手摄友们请记住：相机有4种色温设定，K、场景模式、自定义白平衡、自动白平衡。我推荐大家使用自动白平衡。</p><p><strong>光线的分类</strong></p><p>人造光就是指您可以一边拍摄、一边控制的光源发出的光。</p><p>日出、日落时的光线色温很低，光线温暖、柔和，因为光线强度低，所以是拍摄太阳较好的时刻。</p><p>阳下拍摄人物一般是不合适的。一般可以选择阴天、日出后一小时或</p><p>要尽量利用现场光线来表达主题</p><p>一般在需要进行艺术化处理的时候，才会用90°侧光</p><p>两盏45°侧光灯分别放置于模特左、右的效果。两盏灯发出的光的强度一样。如果再加上背景光，就是目前大多数影室的布光方法。这种布光法能使光线均匀，能完整表现出面部。非常适用于证件照的拍摄</p><p>伦勃朗布光法有以下几个特点。⑴ 模特约3/4的面部对着相机。让模特面向相机，缓慢变换角度，直到看不到一侧的耳朵为止。⑵ 架设主灯，强度要能使模特面部正确曝光，方向为与模特面部方向同一侧45°左右。注意，要在模特面部形成三角形光区（以鼻子阴影、面颊阴影、下眼线为边长，围成的三角形亮区）。</p><p>使用伦勃朗布光法主要能够表现出模特形象的深邃和坚毅，能够强调面部的线条。所以其更适合用于对男士的摄影，对于女士就不太适合了。</p><p>这样布光的好处就是能让模特的脸看起来更像“瓜子脸”</p><p><strong>曝光常见的5个问题</strong></p><p>过曝是指照片的亮度超过了拍摄的画面应有的亮度范围；欠曝就是指照片的亮度没达到拍摄的画面应有的亮度范围</p><p>照片的曝光可以分为高调、中间调、低调。高调就是照片比较亮，中间调就是照片不亮不暗，低调就是照片比较暗。</p><p>宽容度是指能正确容纳照片中亮度反差的范围。</p><p>都说拍摄人像不要用强光，其实拍摄风光也是这样的。</p><p>将高光和白色的色阶压暗，将阴影和黑色的色阶调亮，就可以在很大程度上减少强光带来的反差。</p><p><strong>曝光与情绪</strong></p><p>在色相环中我们可以看到很多不同的颜色绕成一圈。某一种颜色左右15°内的颜色，我们可以将之看作同类色。一张照片如果充满了同类色，画面则会给我们和谐、舒适的感觉。</p><p>互补色的对比是最为强烈的色彩对比。这样的对比和明暗的反差一样，会给人很激烈的感受。蓝配橙，红配绿，大抵如此。</p><p>多重曝光的要义就是比如您拍了第一张照片，有黑（暗）的区域，有白（亮）的区域，那您就记住，在拍摄第二张照片的时候，黑（暗）的地方，越黑越没曝过光，越像普通一次曝光；而白（亮）的地方，越白越无法体现您的第二次曝光，甚至叠加两次的曝光量就会让这部分直接显得死白。</p><p>相机给了您黑色的画布，摄影让您涂抹光明。</p><p><strong>第1节 对焦与景深</strong></p><p>焦平面是一个面，面上的内容都是清楚的</p><ol><li><p>超过了对焦范围</p></li><li><p>对焦在了一个无反差的地方</p></li><li><p>对焦系统不够强</p></li><li><p>目标物体移动过快</p></li></ol><p>MF就是手动对焦，该什么时候用它呢？⑴ 相机只能手动对焦。比如徕卡M等，不会使用自动对焦的转接环。⑵ 非要对焦在无反差的地方（比如说拍白墙）或者很暗的环境。⑶ 对于高速无规则运动的物体，手动对焦可能成功率更高一些。⑷ 拍摄微距题材时，因为自动对焦往往会对不到您想要的位置，所以您可以手动对焦。⑸ 其他自动对焦无法使用的时候。</p><p>AF-S（佳能叫ONE SHOT）就是对好焦后，半按着快门按钮就算是把对焦点锁定了，只要不松开快门按钮，不按下快门按钮，相机是不会继续对焦的，除非松开快门按钮再对焦，或者按下快门按钮拍完一张照片后才会再对焦。</p><p>AF-C（佳能叫SERVO）就是只要一直半按着快门按钮，相机就会一直不停地自动对焦。</p><p>对焦点选择模式指的是您的相机到底对哪儿对焦，主要分为单点对焦、扩展对焦、区域对焦。</p><p>平时一般拍摄——使用“AF-S+单点对焦”，拍运动物体的时候——使用“AF-C+扩展对焦”。</p><p><strong>第2节 通过景深实现虚化</strong></p><p>实现背景虚化并非使用大光圈一个途径，有4个因素都可以让背景处于景深之外，我总结了4句口诀：背景远，相机近，光圈大，焦距长。</p><p><strong>焦距长</strong></p><p>对拍摄人物特写来说，使用50~200mm的焦距会有比较好的透视效果，同时配合这些焦距的大光圈定焦镜头的虚化效果是非常好的。这</p><p><strong>超焦距</strong></p><p>想要实现浅景深就要用“大光圈+长焦+对焦距离近”这三者来搞定。如果我们要使背景不虚化，远近景物都清晰，自然就要用“小光圈+广角+对焦距离远”了。</p><p><strong>虚实常见的6个问题</strong></p><p>最低的快门速度应该是您使用的焦距的倒数。简单地说：您用200mm焦距的长焦镜头，快门速度至少要1/200秒才能保证拍摄的照片可能不模糊</p><p>所以拍摄星空而不是星轨时，我们有一个“500原则</p><p><strong>三分法构图</strong></p><p>记住一点，永远使您拍摄的主体朝向比较空旷的一面。</p><p>而未来不管您是学习构图，学习摄影，还是学习绘画，或者任何一件事，记住，先学会基础知识，明白规矩，当您需要的时候，您才有资格说“打破”。因为您有明确的需要，您懂得为什么要打破。</p><p>同时我们知道人像构图的时候，人面部如果朝向一方，一定要尽量避免朝向与人所在位置相同的一方。</p>]]></content>
      
      
      <categories>
          
          <category> 文摘 </category>
          
          <category> 美学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摄影 </tag>
            
            <tag> 阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mySQL基础之多表操作</title>
      <link href="/2020/05/19/mySQL%E5%85%A5%E9%97%A8%E4%B9%8B%E5%A4%9A%E8%A1%A8%E6%93%8D%E4%BD%9C/"/>
      <url>/2020/05/19/mySQL%E5%85%A5%E9%97%A8%E4%B9%8B%E5%A4%9A%E8%A1%A8%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="外键"><a href="#外键" class="headerlink" title="外键"></a>外键</h1><h2 id="初识外键"><a href="#初识外键" class="headerlink" title="初识外键"></a>初识外键</h2><blockquote><p><strong>外键</strong>：引用另一个表中的一列或多列，被引用的列应该具有主键约束或唯一性约束。（外键用于建立和加强两个表数据之间的连接，保证数据的完整和统一性）<br><strong>主表</strong>：被引用的表<br><strong>从表</strong>：引用外键的表</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--例：</span></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE duobiao;</span><br><span class="line">USE duobiao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> grade(</span><br><span class="line">id <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">name <span class="type">VARCHAR</span>(<span class="number">20</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student(</span><br><span class="line">sid <span class="type">INT</span>(<span class="number">5</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">sname <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">gid <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line"><span class="keyword">foreign</span> key(gid)<span class="keyword">references</span> grade(id)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">--student表中的gid是引用了grade表中主键（id），即：gid可以作为student表的外键，student表可以用gid连接grade表中的信息，从而建立两个表数据之间的连接。</span></span><br><span class="line"><span class="comment">--此两个表的主从关系为：grade为主表，student为从表</span></span><br></pre></td></tr></table></figure><h2 id="为表添加外键约束"><a href="#为表添加外键约束" class="headerlink" title="为表添加外键约束"></a>为表添加外键约束</h2><blockquote><p><code>语法：alter table 表名 add constraint 外键名 foreign key(外键字段名) REFERENCES 主表表名（主键字段名）;</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--例：</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student <span class="keyword">add</span> <span class="keyword">constraint</span> RE_ID <span class="keyword">foreign</span> key(gid) <span class="keyword">REFERENCES</span> grade(id);</span><br><span class="line"><span class="comment">--查看结果：show create table student;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200519145437299.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="过程图"></p><h2 id="删除外键约束"><a href="#删除外键约束" class="headerlink" title="删除外键约束"></a>删除外键约束</h2><blockquote><p><code>alter table 表名 drop foreign key 外键名;</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--例：</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student <span class="keyword">drop</span> <span class="keyword">foreign</span> key RE_ID;</span><br><span class="line"><span class="comment">--查看结果：show create table student;</span></span><br></pre></td></tr></table></figure><h2 id="外键的注意事项："><a href="#外键的注意事项：" class="headerlink" title="外键的注意事项："></a>外键的注意事项：</h2><blockquote><p>1.建立外键的表必须是<strong>InnoDB型</strong>，不能是临时表。因为mySQL中只有InnoDB类型的表才支持外键。<br>2.定义外键名时，不能加引号，如：constraint ‘NN-ID’或constraint “NN-ID”都是错误的。<br>3.外键约束的参数:<br>（1）cascade:从主表删除或者更新且自动删除或更新从表中匹配的行<br>（2）set null:从主表删除或更新行，并设置从表中的外键行为null,如果使用该选项，必须保证子表列没有指定not null<br>（3）restrict：拒绝对主表的删除或更新操作。<br>(4)<strong>no action</strong>:标准SQL的关键字，在mysql中于restrict相同（<strong>默认值</strong>）xf</p></blockquote><h1 id="操作关联表"><a href="#操作关联表" class="headerlink" title="操作关联表"></a>操作关联表</h1><h2 id="关联关系"><a href="#关联关系" class="headerlink" title="关联关系"></a>关联关系</h2><blockquote><p>在实际开发中，需要根据实体的内容设计数据表，实体间会有各种关联关系。所以根据实体设计的数据表之间也存在着各种关联关系，mySQL中数据表的关联关系有三种：多对一，多对多，一对一。</p><h4 id="（1）多对一"><a href="#（1）多对一" class="headerlink" title="（1）多对一"></a>（1）多对一</h4><p>例如：一个班级有多个学生，不能说一个学生属于多个班级。<br>两表间建立外键：在多对一的表关系中，应该将外键建在多的一方（如：学生），否则会造成数据的冗余</p><h4 id="（2）多对多"><a href="#（2）多对多" class="headerlink" title="（2）多对多"></a>（2）多对多</h4><p>例如：订单与商品，一个订单中可以有多个商品，一个商品可以放到多个订单中。<br>两表间建立外键：通常情况下，为了实现这种关系需要定义一张<strong>中间表</strong>（称为连接表），该表存在两个外键（分别参照商品表与订单表）。</p></blockquote><h4 id="（3）一对一"><a href="#（3）一对一" class="headerlink" title="（3）一对一"></a>（3）一对一</h4><blockquote><p>例如：身份证与人，一个人只能有一张身份证，一张身份证只能匹配到一个人。<br>两表间建立外键：首先，分清主从关系，<strong>从表需要主表的存在才有意义</strong>（身份证需要人存在才有意义），因此，人为主表，身份证为从表（在身份证表中建立外键）。<br>应用方面：<br>1.分割具有很多列的表<br>2.由于安全原因而隔离表的一部分<br>3.保存临时的数据，并且可以毫不费力地通过删除这些数据</p></blockquote><h2 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h2><blockquote><p> 因为<strong>外键列只能插入参照列存在的值</strong>，所以如果要为两个表添加数据，就需要先为主表添加数据</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--建立student表与grade表外键联系</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> student <span class="keyword">add</span> <span class="keyword">constraint</span> RE_ID <span class="keyword">foreign</span> key(gid) <span class="keyword">REFERENCES</span> grade(id);</span><br><span class="line"><span class="comment">--查看结果</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> student;</span><br><span class="line"><span class="comment">--为主表添加数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> grade(id,name)<span class="type">VARCHAR</span>(<span class="number">1</span>,<span class="string">&#x27;一年级&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> grade(id,name)<span class="type">VARCHAR</span>(<span class="number">2</span>,<span class="string">&#x27;二年级&#x27;</span>);</span><br><span class="line"><span class="comment">--为从表添加数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student(sid,sname,gid)<span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="number">1</span>),(<span class="number">2</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="number">1</span>),(<span class="number">3</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="number">2</span>);</span><br><span class="line"><span class="comment">--查看结果</span></span><br><span class="line"><span class="keyword">SELECT</span> sname <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> name<span class="operator">=</span><span class="string">&#x27;一年级&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h2><blockquote><p>先删除从表中参照列的数据（改为NULL）或删除从表数据，然后删除主表数据</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--在student表中，将一年级的学生全部删除</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> student <span class="keyword">where</span> sname<span class="operator">=</span><span class="string">&#x27;李四&#x27;</span>;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> student <span class="keyword">where</span> sname<span class="operator">=</span><span class="string">&#x27;张三&#x27;</span>;</span><br><span class="line"><span class="comment">--在grade表中，将一年级删除</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> grade <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"><span class="comment">--查看结果</span></span><br><span class="line"><span class="keyword">select</span><span class="operator">*</span><span class="keyword">from</span> grade;</span><br></pre></td></tr></table></figure><h1 id="连接查询"><a href="#连接查询" class="headerlink" title="连接查询"></a>连接查询</h1><blockquote><p>在关系型数据库管理系统中，建立表时各个数据之间的关系不必确定，通常将每个实体的所有信息存放在一个表中，<strong>当查询数据时，通过连接操作查询多个表中的实体信息，当两个或多个表中存在相同的意义的字段时，便可以通过这些字段对不同的表进行连接查询</strong>，连接查询包括：交叉查询，内连接查询，外连接查询</p><h2 id="交叉连接（少见）"><a href="#交叉连接（少见）" class="headerlink" title="交叉连接（少见）"></a>交叉连接（少见）</h2><p>交叉连接返回的结果是<strong>被连接的两个表中所有数据行的笛卡儿积</strong>即：返回第一个表中符合查询条件的数据行数乘以第二个表符合查询条件的数据行数</p><p><code>语法：SELECT*FROM 表1 CROSS JOIN 表2;</code><br>CROSS JOIN用于连接两个要查询的表，该语句可以查询两个表中所有的数据组合。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--例：</span></span><br><span class="line"><span class="comment">--生成表</span></span><br><span class="line">USE db2020</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> department(</span><br><span class="line">did <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">dname <span class="type">VARCHAR</span>(<span class="number">36</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> employee(</span><br><span class="line">id <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">name <span class="type">VARCHAR</span>(<span class="number">36</span>),</span><br><span class="line">age <span class="type">INT</span>(<span class="number">2</span>),</span><br><span class="line">did <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>);</span><br><span class="line"><span class="comment">--插入数据</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> department(did,dname)<span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;IT部&#x27;</span>),(<span class="number">2</span>,<span class="string">&#x27;公关部&#x27;</span>),(<span class="number">3</span>,<span class="string">&#x27;人事部&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> employee <span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="number">20</span>,<span class="number">1</span>),(<span class="number">2</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="number">20</span>,<span class="number">2</span>),(<span class="number">3</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="number">20</span>,<span class="number">3</span>);</span><br><span class="line"><span class="comment">--使用交叉连接查询</span></span><br><span class="line"><span class="keyword">SELECT</span><span class="operator">*</span><span class="keyword">FROM</span> department <span class="keyword">CROSS</span> <span class="keyword">JOIN</span> employee;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200519211551964.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="过程图"></p><h2 id="内连接（简单连接或自然连接）"><a href="#内连接（简单连接或自然连接）" class="headerlink" title="内连接（简单连接或自然连接）"></a>内连接（简单连接或自然连接）</h2><blockquote><p>内连接使用<strong>比较运算符</strong>对两个表中的数据进行比较，并列出<strong>与连接条件匹配</strong>的数据行，结合成新的记录。<br><code>语法：SELECT 查询字段 FROM 表1 [INNER] JOIN 表2 ON 表1.关系字段=表2.关系字段；</code><br>INNER JOIN 用于连接两个表，ON来指定连接条件，其中INNER可以省略。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--例1：</span></span><br><span class="line"><span class="keyword">SELECT</span> employee.name,department.dname <span class="keyword">FROM</span> department <span class="keyword">JOIN</span> employee <span class="keyword">ON</span> department.did<span class="operator">=</span>employee.did;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200519212937320.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="过程图"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--例2：</span></span><br><span class="line"><span class="comment">--使用where条件语句来实现同样的功能</span></span><br><span class="line"><span class="keyword">SELECT</span> employee.name,department.dname <span class="keyword">FROM</span> department,employee <span class="keyword">WHERE</span> department.did<span class="operator">=</span>employee.did;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200519213402837.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="过程图"></p><blockquote><p><strong>自连接查询（特殊的内连接）</strong>：在一个连接查询中，涉及的两个表是同一个表。 例如：查询李四所在部门有哪些员工，就可以使用自连接查询</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> p1.<span class="operator">*</span> <span class="keyword">FROM</span> employee p1 <span class="keyword">JOIN</span> employee p2 <span class="keyword">ON</span> p1.did<span class="operator">=</span>p2.did <span class="keyword">WHERE</span> p2.name<span class="operator">=</span><span class="string">&#x27;李四&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2020051921461184.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="过程图"></p><h2 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h2><blockquote><p>返回查询结果<strong>不仅包含符合条件的数据</strong>，而且还包括<strong>左表（左连接）</strong>，<strong>右表（右连接）</strong>或两个表（全外连接）中的<strong>所有数据</strong>，此时就需要使用外连接查询。</p><p><code>语法：SELECT 所查字段 FROM 表1 LEFT|RIGHT[OUTER] JOIN 表2 ON 表1.关系字段=表2.关系字段 WHERE 条件;</code></p><h4 id="1-LEFT-JOIN-左连接"><a href="#1-LEFT-JOIN-左连接" class="headerlink" title="(1)LEFT JOIN(左连接)"></a>(1)LEFT JOIN(左连接)</h4><p>返回查询结果：符合条件的数据和LEFT JOIN子句中指定的左表中所有记录，如果左表的某条记录在右表中不存在，则在右表中显示为空。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--例：</span></span><br><span class="line"><span class="keyword">SELECT</span> department.did,department.dname,employee.name <span class="keyword">FROM</span> department <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> employee <span class="keyword">ON</span> department.did<span class="operator">=</span>employee.did;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200519220120224.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="过程图"></p><h4 id="（2）RIGHT-JOIN（右连接）"><a href="#（2）RIGHT-JOIN（右连接）" class="headerlink" title="（2）RIGHT JOIN（右连接）"></a>（2）RIGHT JOIN（右连接）</h4><blockquote><p> 返回查询结果：符合条件的数据和RIGHT JOIN子句中指定的右表中所有记录，如果右表的某条记录在左表中不存在，则在左表中显示为空。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> department.did,department.dname,employee.name <span class="keyword">FROM</span> department <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> employee <span class="keyword">ON</span> department.did<span class="operator">=</span>employee.did;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200519222402852.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="过程图"></p><h2 id="复合条件连接查询"><a href="#复合条件连接查询" class="headerlink" title="复合条件连接查询"></a>复合条件连接查询</h2><blockquote><p>复合条件连接查询即：在连接查询的过程中，通过添加<strong>过滤条件</strong>来限制查询结果，使查询结果更加精确。</p><h1 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h1><p><strong>子查询</strong>：一个查询语句嵌套在另一个查询语句内部的查询。<br>它可以嵌套在一个SELECT,SELECT…INTO,INSERT…INTO等语句中。<br><strong>执行过程</strong>：先执行子查询中的语句，然后将返回的结果作为外层查询的过滤条件。<br>在子查询中通常可以使用IN,EXISTS,ANY,ALL操作符。</p></blockquote><h2 id="带IN关键字的子查询"><a href="#带IN关键字的子查询" class="headerlink" title="带IN关键字的子查询"></a>带IN关键字的子查询</h2><blockquote><p>内层查询语句只返回一个数据列，这个数据列中的值将供外层语句进行比较操作。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--例：</span></span><br><span class="line"><span class="keyword">SELECT</span><span class="operator">*</span><span class="keyword">FROM</span> department <span class="keyword">WHERE</span> did <span class="keyword">IN</span>(<span class="keyword">SELECT</span> did <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> age<span class="operator">=</span><span class="number">20</span>);</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200519224434981.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="结果图"></p><h2 id="带EXISTS关键字的子查询"><a href="#带EXISTS关键字的子查询" class="headerlink" title="带EXISTS关键字的子查询"></a>带EXISTS关键字的子查询</h2><blockquote><p>EXISTS关键字后面的参数可以是任意一个子查询，这个子查询的作用相当于测试，它不产生任何数据，只返回TRUE或FALSE，当返回值为TRUE时，外层语句才会执行。</p><h2 id="带ANY的关键字的子查询"><a href="#带ANY的关键字的子查询" class="headerlink" title="带ANY的关键字的子查询"></a>带ANY的关键字的子查询</h2><p>ANY关键字允许创建一个表达式对子查询的返回值进行比较，只要满足内层子查询中任意一个比较条件，就返回一个结果作为外层查询条件。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--例：</span></span><br><span class="line"><span class="keyword">SELECT</span><span class="operator">*</span><span class="keyword">FROM</span> department <span class="keyword">WHERE</span> did<span class="operator">&gt;</span><span class="keyword">any</span>(<span class="keyword">select</span> did <span class="keyword">from</span> employee);</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200519225822327.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="结果图"></p><h2 id="带ALL关键字的子查询"><a href="#带ALL关键字的子查询" class="headerlink" title="带ALL关键字的子查询"></a>带ALL关键字的子查询</h2><blockquote><p>ALL关键字与ANY有点类似，只不过带ALL关键字的子查询返回的结果需同时满足所有内层查询条件。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--例：</span></span><br><span class="line"><span class="keyword">SELECT</span><span class="operator">*</span><span class="keyword">FROM</span> department <span class="keyword">WHERE</span> did<span class="operator">&gt;</span><span class="keyword">all</span>(<span class="keyword">select</span> did <span class="keyword">from</span> employee);</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200519230320746.png" alt="结果图"></p><h2 id="带比较运算符的子查询"><a href="#带比较运算符的子查询" class="headerlink" title="带比较运算符的子查询"></a>带比较运算符的子查询</h2><blockquote><p>前面的ANY和ALL关键字的子查询中都使用了比较运算符，常见的有：&gt;,&lt;,&gt;=,!=等</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mySQL基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PKI技术【理论+实战】</title>
      <link href="/2020/05/15/%E5%AD%A6%E4%B9%A0PKI%E6%8A%80%E6%9C%AF%E3%80%90%E7%90%86%E8%AE%BA+%E5%AE%9E%E6%88%98%E3%80%91/"/>
      <url>/2020/05/15/%E5%AD%A6%E4%B9%A0PKI%E6%8A%80%E6%9C%AF%E3%80%90%E7%90%86%E8%AE%BA+%E5%AE%9E%E6%88%98%E3%80%91/</url>
      
        <content type="html"><![CDATA[<blockquote><p>csdn地址：<a href="https://blog.csdn.net/m0_46209092/article/details/106046089">https://blog.csdn.net/m0_46209092/article/details/106046089</a></p></blockquote><h2 id="1-预备知识"><a href="#1-预备知识" class="headerlink" title="1.预备知识"></a>1.预备知识</h2><h3 id="PKI-Public-Key-Infrastructure-定义"><a href="#PKI-Public-Key-Infrastructure-定义" class="headerlink" title="PKI(Public Key Infrastructure)定义"></a><code>PKI(Public Key Infrastructure)定义</code></h3><p> PKI：利用公钥理论和技术建立的提供网络信息安全服务的基础设施。为用户提供所需的密钥和证书管理，用户可以利用PKI平台提供的安全服务进行安全通信。</p><h3 id="PKI内容："><a href="#PKI内容：" class="headerlink" title="PKI内容："></a>PKI内容：</h3><ol><li><p>认证机构</p><p>PKI的核心部分，认证中心，是数字证书的签发机构，权威可信任的第三方机构</p></li><li><p>数字证书库</p><p>在使用公钥体制的网络环境中，必须向公钥的使用者证明公钥的真实合法性。因此，在公钥体制环境中，必须有一个可信的机构来对任何一个主体的公钥进行公证，证明主体的身份以及它与公钥的匹配关系。</p></li><li><p>密钥备份</p><p>如果用户丢失了密钥，会造成已经加密的文件无法解密，引起数据丢失，为了避免这种情况，PKI提供密钥备份及恢复机制</p></li><li><p>证书作废</p><p>身份变更或密钥遗失</p></li><li><p>应用接口系统</p><p>PKI应用接口系统是为各种各样的应用提供安全、一致、可信任的方式与PKI交互，确保所建立起来的网络环境安全可信，并降低管理成本。</p><p>6.安全强度 取决于密钥长度</p><p>如：56位密钥破解 需要3.5或21分钟</p><p>128位密钥破解 需要5.4*10 18次方年</p><p>7.安全标准</p><p>（1）成本标准：信息价值与破解成本的比较</p><p>（2）时间有效期：信息的有效期与破解时间的比较</p></li></ol><h3 id="PKI加密技术："><a href="#PKI加密技术：" class="headerlink" title="PKI加密技术："></a><code>PKI加密技术：</code></h3><p> 对称加密 加密密钥和解密密钥是同一个密钥</p><p><img src="https://img-blog.csdnimg.cn/20200512010507622.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="https://www.processon.com/view/link/5eb80ca2f346fb6907e75d11"></p><p>对称加密 示意图</p><p><img src="https://img-blog.csdnimg.cn/20200512010625716.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="https://www.processon.com/view/link/5eb80ca2f346fb6907e75d11"></p><p>密钥维护工作量大 示意图</p><p> 非对称加密 公钥 和 私钥 密钥对 公钥加密私钥解密 私钥加密公钥解密 （公钥与私钥不能互相推导）</p><p> 每个用户有一个非对称密钥就足够，适合互联网传公钥 加密效率低</p><p><img src="https://img-blog.csdnimg.cn/20200512011011215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="https://www.processon.com/view/link/5eb80ca2f346fb6907e75d11"></p><p>非对称加密 示意图</p><p> 2.加密细节</p><p> 加密 隐藏细节 使用对称密钥加密数据 使用公钥加密对称密钥</p><p><img src="https://img-blog.csdnimg.cn/20200512011221265.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p>加密方法 细节图</p><p> 数字签名 作用 防止抵赖 确信信息来源 不能更改</p><p><img src="https://img-blog.csdnimg.cn/20200512011954931.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p>数字签名 示意图</p><p> 3.证书颁发机构</p><p> 数字证书 就是非对称密钥</p><p><img src="https://img-blog.csdnimg.cn/20200512012532632.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p>数字证书 示意图</p><h2 id="2-实践"><a href="#2-实践" class="headerlink" title="2.实践"></a>2.实践</h2><p> 查找电脑中的数字证书，以windows2003为例：</p><p> <img src="https://img-blog.csdnimg.cn/20200511000004585.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511000415139.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511000624978.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511000952143.png" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511001025895.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/2020051100113121.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511001407511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> 查看网站数字证书：</p><p> <img src="https://img-blog.csdnimg.cn/2020051101230447.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511014548150.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511014719955.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> 查看与增删计算机上的数字证书</p><p> <img src="https://img-blog.csdnimg.cn/20200511015739651.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511020015874.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511020327663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511020500200.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/2020051102084253.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> 查看证书2</p><p> <img src="https://img-blog.csdnimg.cn/20200511022221870.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511022303520.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> 5.CA的种类</p><p> （1）企业CA 在域环境中 为域中的用户和计算机颁发证书 不需要管理员颁发 在线</p><p> （2）独立CA 为互联网上广大企业和用户发证书 根证书机构可以离线 提供证书吊销列表的CA必须在线</p><p> （1）根CA</p><p> （2）子CA</p><p> <img src="https://img-blog.csdnimg.cn/20200512012929256.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><h2 id="2-在企业中如何使用PKI技术实现安全"><a href="#2-在企业中如何使用PKI技术实现安全" class="headerlink" title="2.在企业中如何使用PKI技术实现安全"></a>2.在企业中如何使用PKI技术实现安全</h2><p> <img src="https://img-blog.csdnimg.cn/20200512120435348.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> 更改计算机名</p><h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://img-blog.csdnimg.cn/20200512014617284.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></h2><p> 在windows2008中安装根CA</p><p> <img src="https://img-blog.csdnimg.cn/20200512162234548.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200512162835568.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200512163110923.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200512163148864.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200512163310840.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200512163455764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200512163726709.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200512164158318.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200512164344447.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> 在企业中安装企业CA 子CA</p><p> <img src="https://img-blog.csdnimg.cn/20200512164801349.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200512164851593.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200512164927163.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200512165003724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/2020051216502935.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200512165317285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> 为子CA申请数字证书</p><p> <img src="https://img-blog.csdnimg.cn/20200512165348237.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200512165553718.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> 将申请提交给 独立CA</p><p> <img src="https://img-blog.csdnimg.cn/20200512171133588.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200512171223954.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200512170429750.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200512171325249.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/2020051217142433.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200512171615790.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200512171738651.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> 安装数字证书</p><p> <img src="https://img-blog.csdnimg.cn/20200512172140228.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200512185209162.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200512185256107.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200512185528604.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200512190313165.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200512185432837.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200512190517986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> 注：文章中有参照韩立刚老师的视频教程，实验过程由于虚拟机问题实验未完成，在后续有时间会补回来。。。</p><p> 如若文章未满足您的需求非常抱歉，由于个人原因尚未将此文完善，有时间一定补上。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录搭建域环境实验</title>
      <link href="/2020/05/12/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E6%90%AD%E5%BB%BA%E3%80%90%E5%9F%9F%E3%80%91%E7%8E%AF%E5%A2%83%E5%AE%9E%E9%AA%8C%EF%BC%8C%E6%9C%89%E5%9B%BE%E6%9C%89%E7%9C%9F%E7%9B%B8/"/>
      <url>/2020/05/12/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E6%90%AD%E5%BB%BA%E3%80%90%E5%9F%9F%E3%80%91%E7%8E%AF%E5%A2%83%E5%AE%9E%E9%AA%8C%EF%BC%8C%E6%9C%89%E5%9B%BE%E6%9C%89%E7%9C%9F%E7%9B%B8/</url>
      
        <content type="html"><![CDATA[<h2 id="1-介绍域（Domain）"><a href="#1-介绍域（Domain）" class="headerlink" title="1.介绍域（Domain）"></a>1.介绍域（Domain）</h2><h3 id="内网环境："><a href="#内网环境：" class="headerlink" title="内网环境："></a>内网环境：</h3><p> （1）工作组：默认模式，人人平等，不方面公司管理</p><p> （2）域：人人不平等，集中管理，统一管理</p><p> (3)本地管理员组：administrators<br>(4)域管理员组：Domain Admins</p><h3 id="域的特点："><a href="#域的特点：" class="headerlink" title="域的特点："></a>域的特点：</h3><p> 集中/统一管理（在内网中公司所有成员都可以登入公司所有的电脑，但权限有限，域管理员权限最大，可控制公司所有的电脑）</p><h3 id="域的组成"><a href="#域的组成" class="headerlink" title="域的组成:"></a>域的组成:</h3><p> （1）域控制器: DC（Domain Controller）<br>（2）成员机</p><h3 id="活动目录（ActiveDirectory）："><a href="#活动目录（ActiveDirectory）：" class="headerlink" title="活动目录（ActiveDirectory）："></a>活动目录（ActiveDirectory）：</h3><p> （1）作用：储存公司总资源<br>（2）特点：集中管理/统一管理</p><h3 id="域的部署："><a href="#域的部署：" class="headerlink" title="域的部署："></a>域的部署：</h3><p> 安装活动目录（AD）<br>（1）安装域控制器—就生成了域环境<br>（2）安装了活动目录—就生成了域控制器</p><p> （3）成员机名：主机名+域名</p><h3 id="组策略GPO："><a href="#组策略GPO：" class="headerlink" title="组策略GPO："></a>组策略GPO：</h3><p> 作用：为域用户设定策略，通过组策略可以修改计算机的各种属性，如开始菜单、桌面背景、网络参数等。<br><code>重点</code>：组策略在域中，是基于OU来下发的！！<br>组策略在域中下发后，用户的应用顺序是：L - S - D - OU(L:本地组策略，S：工作站组策略，D：域组策略，OU：OU组策略)，<code>在应用过程中，如果出现冲突，后应用的生效！</code></p><h3 id="域工作过程："><a href="#域工作过程：" class="headerlink" title="域工作过程："></a>域工作过程：</h3><p> <img src="https://img-blog.csdnimg.cn/20200512004758846.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="https://www.processon.com/view/link/5eb80ca2f346fb6907e75d11"></p><h3 id="域树与域林："><a href="#域树与域林：" class="headerlink" title="域树与域林："></a>域树与域林：<img src="https://img-blog.csdnimg.cn/20200512005016680.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></h3><h2 id="2-搭建域环境（Domain）"><a href="#2-搭建域环境（Domain）" class="headerlink" title="2.搭建域环境（Domain）"></a>2.搭建域环境（Domain）</h2><p> 以windows2008为例</p><h3 id="（1）安装部署活动目录："><a href="#（1）安装部署活动目录：" class="headerlink" title="（1）安装部署活动目录："></a>（1）安装部署活动目录：</h3><p> 1）开启2008虚拟机，并桥接到vmnet2<br>2）配置静态IP地址10.1.1.1/24<img src="https://img-blog.csdnimg.cn/20200511145303658.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""><br>3）开始-运行-输入dcpromo,安装活动目录。<img src="https://img-blog.csdnimg.cn/20200511145657443.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> 弹出向导：<br>勾选DNS-新林中新建域-功能级别都设置为2003-域的FQDN（zhusheng.com）<br><img src="https://img-blog.csdnimg.cn/20200511151202376.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511145858261.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""><br><img src="https://img-blog.csdnimg.cn/20200511151107474.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""><img src="https://img-blog.csdnimg.cn/20200511151216883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511151358215.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511151908648.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511152021759.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> 设置目录服务还原密码123.com-勾选安装后重启</p><p> <img src="https://img-blog.csdnimg.cn/20200511152125206.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511152326651.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511152437752.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> 4）在DC上登录域zhusheng\administrator<br>DC的本地管理员升级为域管理员</p><p> <img src="https://img-blog.csdnimg.cn/20200511152758444.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> 5）验证AD是否安装成功：<br>1-计算机右键属性-所属域<br>2-DNS服务器中是否自动创建zhusheng.com区域文件及主机<br>3-自动注册DC的域名解析记录<br>4-开始-管理工具-A D 用户和计算机<br>computer：普通域成员机列表<br>Domain Controller：DC列表<br>users：域账号</p><p> <img src="https://img-blog.csdnimg.cn/20200512001648826.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511153121232.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511153609757.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><h3 id="（2）将PC加入域："><a href="#（2）将PC加入域：" class="headerlink" title="（2）将PC加入域："></a>（2）将PC加入域：</h3><p> 1）配置IP，并指定DNS</p><p> <img src="https://img-blog.csdnimg.cn/20200511160911548.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""><br>2.计算机右键属性—更改—加入zhusheng.com域</p><p> <img src="https://img-blog.csdnimg.cn/20200511161048877.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511161333787.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511161442799.png" alt=""></p><p> 3.重启加入域后，成功使用域用户登录成员机</p><p> <img src="https://img-blog.csdnimg.cn/20200511161513652.png" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511162223370.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><h3 id="（3）新建域用户"><a href="#（3）新建域用户" class="headerlink" title="（3）新建域用户"></a>（3）新建域用户</h3><p> <img src="https://img-blog.csdnimg.cn/202005111623509.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511163232292.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511162701211.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> 将域用户加入成员机的本地管理员组</p><p> <img src="https://img-blog.csdnimg.cn/20200511164910346.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><h3 id="（4）常见小问题"><a href="#（4）常见小问题" class="headerlink" title="（4）常见小问题"></a>（4）常见小问题</h3><p> 1）加入域不成功<br>网络是不是不通！<br>解析是否能成功解析！<br>是否为DNS缓存问题<br>2）登入域不成功<br>如XP，已勾选登录域QF，不用再写zhusheng\si.li<br>3）域用户的权限<br>建议将域用户加入到普通成员机的本地管理员组中</p><h3 id="5）OU：组织单位"><a href="#5）OU：组织单位" class="headerlink" title="(5）OU：组织单位"></a>(5）OU：组织单位</h3><p> 作用：用于归类域资源（域用户、域计算机、域组）</p><p> 1）新建OU</p><p> <img src="https://img-blog.csdnimg.cn/20200511191916291.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511192759932.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511193051852.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511193345939.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><h3 id="6）组策略：Group-Policy-GPO"><a href="#6）组策略：Group-Policy-GPO" class="headerlink" title="(6）组策略：Group Policy = GPO"></a>(6）组策略：Group Policy = GPO</h3><p> 为OU新建组策略：</p><p> 1）在管理工具中打开组策略管理</p><p> 2）新建组策略</p><p> <img src="https://img-blog.csdnimg.cn/20200511194809908.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511195207269.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511195522278.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> 3）设定组策略-例1</p><p> <img src="https://img-blog.csdnimg.cn/20200511200222252.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> 4）制作共享文件夹，共享文件</p><p> <img src="https://img-blog.csdnimg.cn/20200511200719538.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511201016245.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> 5）将共享文件写入组策略中</p><p> <img src="https://img-blog.csdnimg.cn/20200511201913385.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> 6）查看OU中的所有组策略</p><p> <img src="https://img-blog.csdnimg.cn/20200511203951725.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511204054298.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> 7）强制-组策略</p><p> <img src="https://img-blog.csdnimg.cn/2020051120463538.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> 8）阻止继承</p><p> <img src="https://img-blog.csdnimg.cn/20200511205222600.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> 9）设定组策略-例2</p><p> <img src="https://img-blog.csdnimg.cn/20200511210325160.png" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200511210742842.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> 10)组策略执行情况：</p><p> <em>**</em>正常情况下：L - S - D - OU顺序</p><p> 上级OU： 桌面：aa 运行：删除</p><p> 下级OU： 桌面：未配置 运行：不删除</p><p> 下级OU用户结果：桌面：aa 运行：不删除</p><p> <em>**</em>下级OU设置了阻止继承：</p><p> 上级OU： 桌面：aa 运行：删除</p><p> 下级OU： 桌面：未配置 运行：不删除</p><p> 下级OU用户结果： 桌面：未配置 运行：不删除</p><p> <em>**</em>上级设置了强制：</p><p> 上级OU： 桌面：aa 运行：删除</p><p> 下级OU： 桌面：未配置 运行：不删除</p><p> 下级OU的用户结果： 桌面：aa 运行：删除</p><p> 注意：当上级强制和下级阻止继承同时设置，强制生效！</p><p>  GPO练习：<br> 1.在董事会部门设置GPO，并要求强制桌面背景，并验证<br> 2.在董事会部门上级的ou上设置GPO,也进行强制桌面背景，并验证<br> 3.在董事会部门上级的ou上设置GPO,强制删除运行菜单，并验证<br> 4.练习阻止继承，并验证<br> 5.练习向下强制，并验证<br> 6.实现董事会的计算机无须按ctrl+alt+delete，并验证</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql进阶之单表查询</title>
      <link href="/2020/04/17/%E5%B0%8F%E7%99%BD%E4%B9%9F%E8%83%BD%E7%9C%8B%E6%87%82%E7%9A%84mySQL%E8%BF%9B%E9%98%B6%E3%80%90%E5%8D%95%E8%A1%A8%E6%9F%A5%E8%AF%A2%E3%80%91/"/>
      <url>/2020/04/17/%E5%B0%8F%E7%99%BD%E4%B9%9F%E8%83%BD%E7%9C%8B%E6%87%82%E7%9A%84mySQL%E8%BF%9B%E9%98%B6%E3%80%90%E5%8D%95%E8%A1%A8%E6%9F%A5%E8%AF%A2%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p>csdn地址：<a href="https://blog.csdn.net/m0_46209092/article/details/105468143">https://blog.csdn.net/m0_46209092/article/details/105468143</a></p><h2 id="1-查询基础"><a href="#1-查询基础" class="headerlink" title="1.查询基础"></a>1.查询基础</h2><h3 id="SELECT语句基础"><a href="#SELECT语句基础" class="headerlink" title="SELECT语句基础"></a>SELECT语句基础</h3><h3 id=""><a href="#" class="headerlink" title=" "></a> </h3><p>列的查询</p><p>  通过 SELECT 语句查询并选取出必要数据的过程称为匹配查询或查询（query）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--基本的SELECT语句</span><br><span class="line">SELECT &lt;列名，…… </span><br><span class="line">FROM &lt;表名；</span><br></pre></td></tr></table></figure><p>  该SELECT 语句包含了SELECT 和FROM 两个子句（clause） 。</p><p>  SELECT 子句中列举了希望从表中查询出的列的名称，而 FROM 子句 则指定了选取出数据的表的名称。<br> 注：</p><p>  (1)查询多列时，需要使用逗号进行分隔</p><p>  (2) 查询结果中列的顺序和 SELECT 子句中的顺序相同 。</p><p>  (3)想要查询出全部列时，可以使用代表所有列的星号（*）不过如果使用星号的话，就无法设定列的显示顺序了 。</p><h3 id="为列设定别名"><a href="#为列设定别名" class="headerlink" title="为列设定别名"></a>为列设定别名</h3><p>  SQL 语句可以使用 AS关键字为列设定别名。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT  product_id AS id,  product_name AS name, purchase_price AS price</span><br><span class="line">FROM Product;</span><br></pre></td></tr></table></figure><p>  (1)别名可以使用中文，使用中文时需要用双引号（”）括起来 。</p><p>  注：使用双引号可以设定包含空格 （空白）的别名。但是如果忘记使用双引号就可能出错，因此并不推荐。</p><p>  大家可以像product<em> id这样使用下划线（</em>）来代替空白。</p><p>  (2)在SQL语句中使用字符串或者日期常数时，必须使用单引号()将其括起来。</p><h3 id="常数的查询"><a href="#常数的查询" class="headerlink" title="常数的查询"></a>常数的查询</h3><p>  SELECT 子句中可以书写列名，书写常数，还可以书写表达式（后面有详情）。</p><h3 id="过滤表中重复数据"><a href="#过滤表中重复数据" class="headerlink" title="过滤表中重复数据"></a>过滤表中重复数据</h3><p> 使用DISTINCT过滤product_type列中重复的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT DISTINCT product_type  </span><br><span class="line">FROM Product;</span><br></pre></td></tr></table></figure><p>  注：在使用DISTINCT 时，NULL 也被视为一类数据。NULL 存在于多行中时，也会被合并为一条 NULL 数据。</p><p> 在多列之前使用DISTINCT</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT DISTINCT product_type, regist_date  </span><br><span class="line">FROM Product;</span><br></pre></td></tr></table></figure><p>  DISTINCT关键字，作用于多个字段时，需满足多个字段才会过滤重复数据</p><h3 id="根据WHERE语句来选择记录"><a href="#根据WHERE语句来选择记录" class="headerlink" title="根据WHERE语句来选择记录"></a>根据WHERE语句来选择记录</h3><p> 语句通过WHERE 子句来指定查询数据的条件</p><p> SELECT语句中的WHERE子句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT &lt;列名, ……  </span><br><span class="line">FROM &lt;表名 </span><br><span class="line">WHERE &lt;条件表达式;</span><br></pre></td></tr></table></figure><p>  执行过程：首先通过 WHERE 子句查询出符合指定条件的记录(即：行)，然后再选取出SELECT 语句指定的列。</p><p>  注：</p><p>  （1）SQL中子句的书写顺序是固定的，不能随意更改。</p><p>  （2）WHERE子句也可以使用表达式。</p><h3 id="注释的书写方法"><a href="#注释的书写方法" class="headerlink" title="注释的书写方法"></a>注释的书写方法</h3><p> 注释是SQL 语句中用来标识 说明或者注意事项的部分。</p><p> 写法：</p><p> ● 1行注释 书写在—之后，只能写在同一行。<br>● 多行注释 书写在/<em>和</em>/之间，可以跨多行。</p><p>  注释能够帮助阅读者更好地理解SQL 语句，特别是在书写复杂的SQL 语句时， 希望大家能够尽量多加简明易懂的注释。</p><h3 id="算术运算符和比较运算符"><a href="#算术运算符和比较运算符" class="headerlink" title="算术运算符和比较运算符"></a>算术运算符和比较运算符</h3><h3 id="-1"><a href="#-1" class="headerlink" title=" "></a> </h3><p>算术运算符</p><p>SQL语句中可以使用的四则运算的主要运算符<br>| 含义 | 运算符 |<br>| —- | —- |<br>| 加法运算 | + |<br>| 减法运算 | - |<br>| 乘法运算 | * |<br>| 除法运算 | / |</p><p> SELECT 子句中书写算术表达式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT product_name, sale_price,  sale_price * 2 AS &quot;sale_price_x2&quot;  </span><br><span class="line">FROM Product;</span><br></pre></td></tr></table></figure><p>  SELECT子句中可以使用常数或者表达式。</p><p>  注：SQL 中也可以像平常的运算表达式那样使用括号( )。括号中 运算表达式的优先级会得到提升，优先进行运算。</p><h3 id="需要注意NULL"><a href="#需要注意NULL" class="headerlink" title="需要注意NULL"></a>需要注意NULL</h3><p>  A 5 + NULL B 10 - NULL</p><p>  C 1 * NULL D 4 / NULL</p><p>  E NULL / 9 F NULL / 0</p><p> 实际上所有包含 NULL 的计算，结果肯定是 NULL，NULL / 0也不例外。</p><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><p>比较运算符<br>| 运算符 | 含义 |<br>| —- | —- |<br>| = | 和~相等 |<br>| &lt; | 和~不相等 |<br>| \= | 大于等于~ |<br>| \ | 大于~ |<br>| &lt;= | 小于等于~ |<br>| &lt; | 小于~ |</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">--例：选取出销售单价大于等于1000日元的记录 </span><br><span class="line">SELECT product_name, product_type, sale_price  </span><br><span class="line">FROM Product </span><br><span class="line">WHERE sale_price = 1000;</span><br></pre></td></tr></table></figure><p>  注：</p><p>  （1）小于某个日期就是在该日期之前的意思</p><p>  （2）使用比较运算符时一定要注意不等号和等号的位置。</p><p> WHERE子句的条件表达式中也可以使用计算表达式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">--例：</span><br><span class="line">SELECT product_name, sale_price, purchase_price  </span><br><span class="line">FROM Product </span><br><span class="line">WHERE sale_price - purchase_price = 500;</span><br></pre></td></tr></table></figure><h3 id="对字符串使用不等号时的注意事项"><a href="#对字符串使用不等号时的注意事项" class="headerlink" title="对字符串使用不等号时的注意事项"></a>对字符串使用不等号时的注意事项</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">--例：选取出大于&#x27;2&#x27;的数据的SELECT语句 </span><br><span class="line">SELECT chr  </span><br><span class="line">FROM Chars </span><br><span class="line">WHERE chr  &#x27;2&#x27;;</span><br></pre></td></tr></table></figure><p>  注： 2 和2 并 不一样。</p><p>  chr 列被定为字符串类型，并且在对字符串类型的数据进行大小比较时，使用的是和数字比较不同的规则。</p><p>  字符串类型的数据比较规则即：以相同字符开头的单词比不同字符开头的单词更相近，与字典顺序类似。<br> <img src="https://img-blog.csdnimg.cn/20200412145504990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p>  10 和11 同样都是以1 开头的字符串，首先判定为比2 小。</p><h3 id="不能对NULL使用比较运算符"><a href="#不能对NULL使用比较运算符" class="headerlink" title="不能对NULL使用比较运算符"></a>不能对NULL使用比较运算符</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">--例：选取出进货单价不是2800日元的记录 </span><br><span class="line">SELECT product_name, purchase_price  </span><br><span class="line">FROM Product </span><br><span class="line">WHERE purchase_price &lt; 2800;</span><br></pre></td></tr></table></figure><p>  这两条记录由于进货单价 不明（NULL），因此无法判定是不是 2800日元。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">--例：错误的SELECT语句（一条记录也取不出来） </span><br><span class="line">SELECT product_name, purchase_price  </span><br><span class="line">FROM Product </span><br><span class="line">WHERE purchase_price = NULL;</span><br></pre></td></tr></table></figure><p>  使用=运算符也还是无法选取出NULL 的记录</p><p> SQL 提供了专门用来判断是否为 NULL 的IS NULL 运算符。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">--例：选取NULL的记录 </span><br><span class="line">SELECT product_name, purchase_price  </span><br><span class="line">FROM Product </span><br><span class="line">WHERE purchase_price IS NULL;</span><br></pre></td></tr></table></figure><p> 反之，希望选取不是NULL 的记录时，需要使用 IS NOT NULL 运 算符</p><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><h3 id="-2"><a href="#-2" class="headerlink" title=" "></a> </h3><p>NOT运算符</p><p> NOT运算符用来否定某一条件，但是不能滥用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">--例：选取出销售单价大于等于1000日元的记录</span><br><span class="line">SELECT product_name, product_type, sale_price  </span><br><span class="line">FROM Product </span><br><span class="line">WHERE NOT sale_price &lt; 1000;</span><br><span class="line">--例：结果与上例一致</span><br><span class="line">SELECT product_name, product_type, sale_price  </span><br><span class="line">FROM Product </span><br><span class="line">WHERE  sale_price = 1000;</span><br></pre></td></tr></table></figure><h3 id="AND运算符和OR运算符"><a href="#AND运算符和OR运算符" class="headerlink" title="AND运算符和OR运算符"></a>AND运算符和OR运算符</h3><p>  AND 运算符在其两侧的查询条件都成立时整个查询条件才成立，其意思相当于并且。</p><p>  OR 运算符在其两侧的查询条件有一个成立时整个查询条件都成立， 其意思相当于或者</p><p>  注：AND 运算符优先于 OR 运算符，想要优先执行OR运算符时可以使用括号。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">--例：在WHERE子句的查询条件中使用OR运算符</span><br><span class="line">SELECT product_name, purchase_price  </span><br><span class="line">FROM Product </span><br><span class="line">WHERE product_type = &#x27;厨房用具&#x27; OR sale_price = 3000;</span><br></pre></td></tr></table></figure><h3 id="通过括号强化处理"><a href="#通过括号强化处理" class="headerlink" title="通过括号强化处理"></a>通过括号强化处理</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">--例：通过使用括号让OR运算符先于AND运算符执行 </span><br><span class="line">SELECT product_name, product_type, regist_date  </span><br><span class="line">FROM Product </span><br><span class="line">WHERE product_type = &#x27;办公用品&#x27;  AND ( regist_date = &#x27;2009-09-11&#x27; OR regist_date = &#x27;2009-09-20&#x27;);</span><br></pre></td></tr></table></figure><h3 id="逻辑运算符和真值"><a href="#逻辑运算符和真值" class="headerlink" title="逻辑运算符和真值"></a>逻辑运算符和真值</h3><p>  NOT、AND 和 OR 称为逻辑运算符。这里所说的逻辑就是对真值进行操作的意思。</p><p>  真值就是值为真（TRUE）或假 （FALSE）其中之一的值</p><p> AND 运算符两侧的真值都为真时返回真，除此之外都返回假。</p><p> OR 运算符两侧的真值只要有一个不为假就返回真，只有当其两侧的真值都为假时才返回假。</p><p> NOT 运算符只是单纯的将真转换为假，将假转换为真。</p><h3 id="含有NULL时的真值"><a href="#含有NULL时的真值" class="headerlink" title="含有NULL时的真值"></a>含有NULL时的真值</h3><p> 既不是真也不是假，这时真值是除真假之外的第三种值——不确定（UNKNOWN）</p><p> 与通常的逻辑运算被称为二值逻辑相对，只有 SQL 中 的逻辑运算被称为三值逻辑。</p><p>  考虑到使用NULL 时的条件判断会变得异常复杂。因此，数据库领域的有识之士们达成了尽量不使用 NULL的共识。</p><h2 id="2-聚合与排序"><a href="#2-聚合与排序" class="headerlink" title="2.聚合与排序"></a>2.聚合与排序</h2><h3 id="（1）对表进行聚合查询"><a href="#（1）对表进行聚合查询" class="headerlink" title="（1）对表进行聚合查询"></a>（1）对表进行聚合查询</h3><p>  通过 SQL 对数据进行某种操作或计算时需要使用函数</p><p> 5个常用的函数：</p><p> COUNT： 计算表中的记录数（行数）</p><p> SUM： 计算表中数值列中数据的合计值</p><p> AVG： 计算表中数值列中数据的平均值</p><p> MAX： 求出表中任意列中数据的最大值</p><p> MIN： 求出表中任意列中数据的最小值</p><p>  用于汇总的函数称为聚合函数或者聚集函数。</p><p>  所谓聚合，就是将多行汇总为一行。实际上，所有的聚合函数都是这样，输入多行输出一行。</p><h3 id="计算表中数据的行数（COUNT）"><a href="#计算表中数据的行数（COUNT）" class="headerlink" title="计算表中数据的行数（COUNT）"></a>计算表中数据的行数（COUNT）</h3><p> 用COUNT 函数时，输入表的列，就能够输出数据行数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">--语法：</span><br><span class="line">SELECT COUNT(parameter)</span><br><span class="line">FROM 表名;</span><br><span class="line"></span><br><span class="line">--计算全部数据的行数 </span><br><span class="line">SELECT COUNT(*)  </span><br><span class="line">FROM Product;</span><br><span class="line"></span><br><span class="line">--计算NULL之外的数据行数 </span><br><span class="line">SELECT COUNT(具体字段名)  </span><br><span class="line">FROM Product;</span><br></pre></td></tr></table></figure><p> COUNT函数的结果根据参数的不同而不同。如：COUNT(<em>)会得到包含NULL的数据的行数，而COUNT(&lt;列名)会得到NULL之外的数据行数。<br>注： COUNT 函数使用</em>代替所有列，其他函数并不能将星号作为参数。</p><h3 id="计算合计值（SUM）"><a href="#计算合计值（SUM）" class="headerlink" title="计算合计值（SUM）"></a>计算合计值（SUM）</h3><p> 语法与COUNT函数基本相同</p><p> 聚合函数会将NULL排除在外。但COUNT(*)例外，并不会排除NULL。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--计算分别slae_price与purchase_price的合值</span><br><span class="line">SELECT SUM(sale_price), SUM(purchase_price)   </span><br><span class="line">FROM Product;</span><br></pre></td></tr></table></figure><p>  注：所有的聚合函数，如果以列名为参数，那么在计算之前就已经把 NULL 排除在外了。因此，无论有多少个 NULL 都会被无视。这与等 价为 0并不相同 。</p><h3 id="计算平均值"><a href="#计算平均值" class="headerlink" title="计算平均值"></a>计算平均值</h3><p> 其语法和 SUM函数完全相同</p><p> 不会计算值为的NULL行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--计算sale_price列的平均值</span><br><span class="line">SELECT AVG(sale_price)   </span><br><span class="line">FROM Product;</span><br></pre></td></tr></table></figure><h3 id="计算最大值和最小值（MAX-amp-MIN）"><a href="#计算最大值和最小值（MAX-amp-MIN）" class="headerlink" title="计算最大值和最小值（MAX&amp;MIN）"></a>计算最大值和最小值（MAX&amp;MIN）</h3><p> 这两个函数的语法与 SUM 的语法相同</p><p> 但是，MAX/MIN 函数和SUM/AVG函数有一点不同，那就是 SUM/ AVG函数只能对数值类型的列使用，而 MAX/MIN 函数原则上可以适用 于任何数据类型（能够排序）的列。</p><h3 id="使用聚合函数过滤重复值（DISTINCT）"><a href="#使用聚合函数过滤重复值（DISTINCT）" class="headerlink" title="使用聚合函数过滤重复值（DISTINCT）"></a>使用聚合函数过滤重复值（DISTINCT）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">--计算去除重复数据后的数据行数 </span><br><span class="line">SELECT COUNT(DISTINCT product_type)  </span><br><span class="line">FROM Product;</span><br><span class="line">--先计算数据行数再删除重复数据的结果 </span><br><span class="line">SELECT DISTINCT COUNT(product_type)  </span><br><span class="line">FROM Product;</span><br><span class="line">--两者结果不一致</span><br></pre></td></tr></table></figure><h3 id="对表进行分组"><a href="#对表进行分组" class="headerlink" title="对表进行分组"></a>对表进行分组</h3><h3 id="-3"><a href="#-3" class="headerlink" title=" "></a> </h3><p>GROUP BY子句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">--语法</span><br><span class="line">SELECT &lt;列名1, &lt;列名2, &lt;列名3, ……  </span><br><span class="line">FROM &lt;表名 </span><br><span class="line">GROUP BY &lt;列名1, &lt;列名2, &lt;列名3, ……;</span><br></pre></td></tr></table></figure><p> GROUP BY 子句就像切蛋糕那样将表进行分组</p><p> 在 GROUP BY 子句中指定的列称为聚合键或者分组列。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">子句的书写顺序（暂定） SELECT→FROM→WHERE→GROUP BY</span><br></pre></td></tr></table></figure><h3 id="聚合键中包含NULL的情况"><a href="#聚合键中包含NULL的情况" class="headerlink" title="聚合键中包含NULL的情况"></a>聚合键中包含NULL的情况</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">--按照进货单价统计数据行数 </span><br><span class="line">SELECT purchase_price, COUNT(*)  </span><br><span class="line">FROM Product </span><br><span class="line">GROUP BY purchase_price;</span><br></pre></td></tr></table></figure><p> 聚合键中包含NULL时，在结果中会以不确定行（空行）的形式表现出来。</p><h3 id="使用WHERE子句时GROUP-BY的执行结果"><a href="#使用WHERE子句时GROUP-BY的执行结果" class="headerlink" title="使用WHERE子句时GROUP BY的执行结果"></a>使用WHERE子句时GROUP BY的执行结果</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">--　语法：使用WHERE子句和GROUP BY子句进行汇总处理</span><br><span class="line">SELECT &lt;列名1, &lt;列名2, &lt;列名3, ……  </span><br><span class="line">FROM &lt;表名 </span><br><span class="line">WHERE  </span><br><span class="line">GROUP BY &lt;列名1, &lt;列名2, &lt;列名3, ……;</span><br></pre></td></tr></table></figure><p> 执行顺序：会先根据 WHERE 子句指定的条件进行过滤，然后再进行汇总处理。</p><p> 即：GROUP BY 和 WHERE 并用时 SELECT 语句的执行顺序 <strong>FROM → WHERE → GROUP BY → SELECT</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">--例：</span><br><span class="line">SELECT purchase_price, COUNT(*)  </span><br><span class="line">FROM Product </span><br><span class="line">WHERE product_type = &#x27;衣服&#x27; </span><br><span class="line">GROUP BY purchase_price;</span><br></pre></td></tr></table></figure><h3 id="与聚合函数和GROUP-BY子句有关的常见错误"><a href="#与聚合函数和GROUP-BY子句有关的常见错误" class="headerlink" title="与聚合函数和GROUP BY子句有关的常见错误"></a>与聚合函数和GROUP BY子句有关的常见错误</h3><p> 1.把聚合键之外的列名书写在SELECT 子句之中。（只有MySQL认同这种语法）</p><p> 聚合键相对应的、同时存在多个值的列出现在SELECT 子 句中的情况，理论上是不可能的。</p><p> 使用GROUP BY子句时，SELECT子句中不能出现聚合键之外的列名。</p><p> 2.在GROUP BY子句中写了列的别名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">--错误示范</span><br><span class="line">SELECT product_type AS pt, COUNT(*)  </span><br><span class="line">FROM Product </span><br><span class="line">GROUP BY pt;</span><br><span class="line">--原因：由SQL语句在DBMS内部的执行顺序造成的</span><br></pre></td></tr></table></figure><p> 在GROUP BY子句中不能使用SELECT子句中定义的别名。</p><p> 3.GROUP BY子句的结果能排序吗</p><p> GROUP BY子句结果的默认显示是无序的。</p><p> 4.在WHERE子句中使用聚合函数</p><p> 只有 SELECT 子句和 HAVING 子句（ ORDER BY 子句）中能够使用COUNT 等聚合函数。</p><h3 id="为聚合结果指定条件"><a href="#为聚合结果指定条件" class="headerlink" title="为聚合结果指定条件"></a>为聚合结果指定条件</h3><h3 id="-4"><a href="#-4" class="headerlink" title=" "></a> </h3><p>HAVING子句</p><p> 由于WHERE 子句只能指定记录（行）的条件，而不能用来指定组的条件，所以可以使用HAVING子句。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">--语法：</span><br><span class="line">SELECT &lt;列名1, &lt;列名2, &lt;列名3, ……  </span><br><span class="line">FROM &lt;表名 </span><br><span class="line">GROUP BY &lt;列名1, &lt;列名2, &lt;列名3, …… </span><br><span class="line">HAVING &lt;分组结果对应的条件</span><br><span class="line">--注：HAVING子句要写在GROUP BY子句之后。</span><br></pre></td></tr></table></figure><p> 使用 HAVING 子句时 SELECT 语句书写顺序 SELECT → FROM → WHERE → GROUP BY → HAVING</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-- 例1：从按照商品种类进行分组后的结果中，取出“包含的数据行数为2 行”的组</span><br><span class="line">SELECT product_type, COUNT(*)  </span><br><span class="line">FROM Product </span><br><span class="line">GROUP BY product_type </span><br><span class="line">HAVING COUNT(*) = 2;</span><br><span class="line">--例2：使用HAVING子句设定条件的情况 </span><br><span class="line">SELECT product_type, AVG(sale_price)  </span><br><span class="line">FROM Product </span><br><span class="line">GROUP BY product_type </span><br><span class="line">HAVING AVG(sale_price) = 2500;</span><br></pre></td></tr></table></figure><p> HAVING 子句中 能够使用的3种要素如下所示：</p><p>  ● 常数</p><p>  ● 聚合函数</p><p>  ● GROUP BY子句中指定的列名（即聚合键）</p><p> WHERE子句与HAVING子句</p><p>  WHERE 子句 = 指定行所对应的条件</p><p>  HAVING 子句 = 指定组所对应的条件</p><h3 id="对查询结果进行排序"><a href="#对查询结果进行排序" class="headerlink" title="对查询结果进行排序"></a>对查询结果进行排序</h3><h3 id="-5"><a href="#-5" class="headerlink" title=" "></a> </h3><p>ORDER BY子句</p><p> 通过在 SELECT 语句末尾添加 ORDER BY 子句来明确指定排列顺序。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">--语法：</span><br><span class="line">SELECT &lt;列名1, &lt;列名2, &lt;列名3, ……  </span><br><span class="line">FROM &lt;表名 </span><br><span class="line">ORDER BY &lt;排序基准列1, &lt;排序基准列2, ……</span><br><span class="line">--ORDER BY子句中书写的列名称为排序键。</span><br></pre></td></tr></table></figure><p>  子句的书写顺序  </p><ol><li><p>SELECT 子句 → 2. FROM 子句 → 3. WHERE 子句 → 4. GROUP BY 子句 → 5. HAVING 子句 → 6. ORDER BY 子句</p><p>注：不论何种情况，ORDER BY 子句都需要写在 SELECT 语句的末尾。</p></li></ol><h3 id="指定升序或降序"><a href="#指定升序或降序" class="headerlink" title="指定升序或降序"></a>指定升序或降序</h3><p> 在OPDER BY子句的列名后面使用 DESC（降序）ASC（默认升序） 关键字。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">--按照销售单价由高到低（降序）进行排列 </span><br><span class="line">SELECT product_id, product_name, sale_price, purchase_price  </span><br><span class="line">FROM Product </span><br><span class="line">ORDER BY sale_price DESC;</span><br></pre></td></tr></table></figure><p>  注：由于 ASC 和 DESC 这两个关键字是以列为单位指定的，因此可以 同时指定一个列为升序，指定其他列为降序。</p><h3 id="指定多个排序键"><a href="#指定多个排序键" class="headerlink" title="指定多个排序键"></a>指定多个排序键</h3><p> 如果想要对该顺序的商品进行更细致的排序的话，就需要再添加一个 排序键。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">--按照销售单价和商品编号的升序进行排序 </span><br><span class="line">SELECT product_id, product_name, sale_price, purchase_price  </span><br><span class="line">FROM Product </span><br><span class="line">ORDER BY sale_price, product_id;</span><br></pre></td></tr></table></figure><p>  规则是优先使用左侧的键，如果该列存在相同值的话，再接着参考右侧的键。当然，也可以同时使用 3个以上的排序键。</p><h3 id="NULL的顺序"><a href="#NULL的顺序" class="headerlink" title="NULL的顺序"></a>NULL的顺序</h3><p> 使用含有 NULL 的列作为排序键时， NULL 会在结果的开头或末尾汇总显示,因为NULL值可以被认为是最小值。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">--按照进货单价的升序进行排列 </span><br><span class="line">SELECT product_id, product_name, sale_price, purchase_price  </span><br><span class="line">FROM Product </span><br><span class="line">ORDER BY purchase_price;</span><br></pre></td></tr></table></figure><h3 id="在排序键中使用显示用的别名"><a href="#在排序键中使用显示用的别名" class="headerlink" title="在排序键中使用显示用的别名"></a>在排序键中使用显示用的别名</h3><p> 在 GROUP BY子句中不能使用 SELECT子句中定义的别名，但是在 ORDER BY子句中却是允许使用名的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">--ORDER BY子句中可以使用列的别名 </span><br><span class="line">SELECT product_id AS id, product_name, sale_price AS sp, purchase _price  </span><br><span class="line">ROM Product </span><br><span class="line">ORDER BY sp, id;</span><br></pre></td></tr></table></figure><p> 使用 HAVING 子句时 SELECT 语句的顺序</p><p> FROM→WHERE→GROUP BY→HAVING→SELECT→ORDER BY</p><h3 id="ORDER-BY子句中可以使用的列"><a href="#ORDER-BY子句中可以使用的列" class="headerlink" title="ORDER BY子句中可以使用的列"></a>ORDER BY子句中可以使用的列</h3><p> ORDER BY 子句中也可以使用存在于表中、但并不包含在 SELECT 子句之中的列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">--例：SELECT子句中未包含的列也可以在ORDER BY子句中使用 </span><br><span class="line">SELECT product_name, sale_price, purchase_price  </span><br><span class="line">FROM Product </span><br><span class="line">ORDER BY product_id;</span><br></pre></td></tr></table></figure><p> ORDER BY子句中可以使用列的编号 （不推荐）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-- 通过列名指定 </span><br><span class="line">SELECT product_id, product_name, sale_price, purchase_price  </span><br><span class="line">FROM Product </span><br><span class="line">ORDER BY sale_price DESC, product_id;</span><br><span class="line">-- 通过列编号指定 </span><br><span class="line">SELECT product_id, product_name, sale_price, purchase_price  </span><br><span class="line">FROM Product </span><br><span class="line">ORDER BY 3 DESC, 1;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mySQL基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java JDBC详解</title>
      <link href="/2020/04/14/%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0%E3%80%90java%20JDBC%E3%80%91/"/>
      <url>/2020/04/14/%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0%E3%80%90java%20JDBC%E3%80%91/</url>
      
        <content type="html"><![CDATA[<h2 id="JDBC简介"><a href="#JDBC简介" class="headerlink" title="JDBC简介"></a>JDBC简介</h2><p>  JDBC：JDBC在应用程序与数据库之间起到了一个桥梁作用，当应用程序使用JDBC访问特定的数据库时，只需要通过不同的数据库驱动与其对应的数据库进行连接，连接后即可对该数据库进行相应的操作。</p><h3 id="工作原理："><a href="#工作原理：" class="headerlink" title="工作原理："></a>工作原理：</h3><p> <img src="https://img-blog.csdnimg.cn/20200413172913177.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><h3 id="工作过程："><a href="#工作过程：" class="headerlink" title="工作过程："></a>工作过程：</h3><p> <img src="https://img-blog.csdnimg.cn/20200413174639533.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><h2 id="JDBC驱动与连接"><a href="#JDBC驱动与连接" class="headerlink" title="JDBC驱动与连接"></a>JDBC驱动与连接</h2><h3 id="JDBC驱动"><a href="#JDBC驱动" class="headerlink" title="JDBC驱动"></a>JDBC驱动</h3><p> 由JDBC驱动直接访问数据库</p><p> 优点：纯java，快，跨平台</p><p> 缺点：访问不同的数据库需要下载专用的JDBC驱动<img src="https://img-blog.csdnimg.cn/20200413175837707.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><h3 id="连接JDBC驱动"><a href="#连接JDBC驱动" class="headerlink" title="连接JDBC驱动"></a>连接JDBC驱动</h3><h3 id="1-下载特定数据库的JDBCjar包"><a href="#1-下载特定数据库的JDBCjar包" class="headerlink" title="1.下载特定数据库的JDBCjar包"></a>1.下载特定数据库的JDBCjar包</h3><p> 到使用的数据库的官网上下载，本文会提供mysql-connector-java-5.1.39-bin.jar jar包</p><h3 id="2-加载并注册数据库驱动"><a href="#2-加载并注册数据库驱动" class="headerlink" title="2.加载并注册数据库驱动"></a>2.加载并注册数据库驱动</h3><p> 方法一：写代码（只用于一次程序，不推荐）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//Class.forName(&quot;Driver全名&quot;);</span><br><span class="line">Class.forName(&quot;com.mysql.jdbc.Driver&quot;);//以mysql数据库为例</span><br></pre></td></tr></table></figure><p> 方法二：将jar包复制到java运行环境jre文件中（适用于JDBC4.0以后）</p><p> （1）找到java文件,将jar包放到jdk下,jre下,lib下,ext中。</p><p> （2）找到java文件,将jar包放到jre下,lib下,ext中。</p><p> 注意：如果使用第三方软件编程(如：eclipse)则一定要复制jar包到公共jre中</p><p> <img src="https://img-blog.csdnimg.cn/20200413180949921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200413181425232.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200413181432946.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><h3 id="3-连接驱动"><a href="#3-连接驱动" class="headerlink" title="3.连接驱动"></a>3.连接驱动</h3><p> （1）getConnection方法详解</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DriverManager.getConnection(String url,String user,String password);</span><br><span class="line">/*url:定位符，找到本机数据库</span><br><span class="line">*jdbc:数据库服务名：//主机名：端口号/创建的数据库名*/</span><br><span class="line">//user:连接数据库时登录的用户名</span><br><span class="line">//password:连接数据库时的登录密码</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//例：</span><br><span class="line">    //1、加载并注册数据库驱动。</span><br><span class="line">Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br><span class="line">    //2、通过DriverManager获取数据库连接。</span><br><span class="line">Connection conn=DriverManager.getConnection(&quot;jdbc:mysql://localhost:3306/jdbc&quot;, &quot;root&quot;, &quot;12345&quot;);</span><br></pre></td></tr></table></figure><h3 id="JDBC常见API"><a href="#JDBC常见API" class="headerlink" title="JDBC常见API"></a>JDBC常见API</h3><p> 1.Driver:Driver接口是所有JDBC驱动程序必须实现的接口，用于加载驱动。一次程序的运行中，只需要加载一次。</p><p> 2.DriverManager:使用该类注册驱动</p><p> 3.Connection:连接数据库的对象</p><p> 4.Statement:执行静态的SQL语句，并返回一个结果对象（繁琐，不安全）</p><p> 5.ResultSet:结果集对象（封装了查询结果的数据）</p><p> 6.PreparedStatement:Statement的子接口，用于执行预编译的SQL语句。（也是通过Connection进行获取）</p><h2 id="JDBC数据查询"><a href="#JDBC数据查询" class="headerlink" title="JDBC数据查询"></a>JDBC数据查询</h2><h3 id="一般查询"><a href="#一般查询" class="headerlink" title="一般查询"></a>一般查询</h3><h3 id="1-接口详解"><a href="#1-接口详解" class="headerlink" title="1.接口详解"></a>1.接口详解</h3><p>  一般查询需要JDBC API中的Statement接口与ResultSet接口</p><p> <code>Statement接口：</code></p><p> （1）由Connection产生；</p><p> （2）Statement对象用于将SQL语句发送到数据库中；</p><p> （3）在JDBC API 中通常有3种Statement对象，它们都可以作为在给定连接上执行SQL语句的容器。</p><p>| 表头 | 表头 |<br>| —- | —- |3种Statement对象<br>| Statement | 用于无参数的查询 |<br>|<br> PreparedStatement</p><p> (预编译SQL语句)</p><p> | 用于带参数的查询，当SQL语句多次运行，使用该对象可提高运行效率。 |<br>| CallableStatement | 用于调用存储过程 |</p><p> （4）Statement与PreparedStatement对象的创建</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//使用Connection对象的createStatement方法，创建Statement对象（conn为Connection对象）</span><br><span class="line">Statement stmt=conn.createStatement();</span><br><span class="line">//使用Connection对象的prepareStatement方法，创建PreparedStatement对象</span><br><span class="line">PreparedStatement pstmt =conn.prepareStatement(&quot;要执行的SQL语句&quot;);</span><br></pre></td></tr></table></figure><p> (5)Statement对象的方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//适用于执行select语句</span><br><span class="line">public ResultSet executeQuery()throws SQLException;</span><br><span class="line">//适用于执行insert，update,delete等数据修改和维护语句</span><br><span class="line">public 行数 executeUpdate(String sql)throws SQLException;</span><br></pre></td></tr></table></figure><p> <code>ResultSet接口：</code></p><p> (1)ResultSet对象用于包含符合SQL语句中条件的所有记录，它的组织结构类似于一张临时表。</p><p> (2)ResultSet接口自带游标，只有使用next()方法才可使游标转到ResultSet对象中的第一行。</p><p> （3）getXxx()方法，用于返回当前行中指定列索引columnNumber或列名字columnName的数据。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/*语法：</span><br><span class="line">XXX getXXX (int columnNuber);</span><br><span class="line">XXX getXXX (String columnName);*/</span><br><span class="line">//例：</span><br><span class="line">int id =resultSet.getInt(&quot;id&quot;);</span><br><span class="line">String name=resultSet.getString(&quot;name&quot;);</span><br></pre></td></tr></table></figure><p> (4)close()用于关闭ResultSet对象</p><h3 id="2-一般查询示例程序"><a href="#2-一般查询示例程序" class="headerlink" title="2.一般查询示例程序"></a>2.一般查询示例程序</h3><p> （1）一般查询执行步骤</p><p> <img src="https://img-blog.csdnimg.cn/20200414180232532.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> (2)一般查询执行程序（以mysql为例）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">try &#123;</span><br><span class="line">//注册驱动（已将JDBC Driver jar包放入ext文件中可不写）</span><br><span class="line">Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br><span class="line">//获取数据库连接对象</span><br><span class="line">//如果对象是主机，并端口号是默认值：3306，url可简写：&quot;jdbc:mysql:///jdbc&quot;</span><br><span class="line">Connection conn=DriverManager.getConnection(&quot;jdbc:mysql://localhost:3306/jdbc&quot;, &quot;root&quot;, &quot;12345&quot;);</span><br><span class="line">//获取SQL语句的执行对象</span><br><span class="line">                        //此处使用Statement接口的子接口PreparedStatement更安全</span><br><span class="line">PreparedStatement pstmt=conn.prepareStatement(&quot;select*from users&quot;);</span><br><span class="line">//执行SQL语句，调用executeQuery查询方法</span><br><span class="line">ResultSet resultSet=pstmt.executeQuery();</span><br><span class="line">//处理结果集</span><br><span class="line">while(resultSet.next())&#123;//next方法返回值为boolean类型</span><br><span class="line">int id =resultSet.getInt(&quot;id&quot;);//getXxx方法:可以根据列号与列名获取</span><br><span class="line">String name=resultSet.getString(&quot;name&quot;);</span><br><span class="line">String password=resultSet.getString(3);</span><br><span class="line">String email=resultSet.getString(4);</span><br><span class="line"></span><br><span class="line">System.out.println(id+&quot; &quot;+name+&quot; &quot;+password+&quot; &quot;+email);</span><br><span class="line">&#125;</span><br><span class="line">//关闭流释放资源</span><br><span class="line">conn.close();</span><br><span class="line">pstmt.close();</span><br><span class="line">resultSet.close();</span><br><span class="line">&#125; catch (Exception e) &#123;</span><br><span class="line"></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="JDBC数据维护"><a href="#JDBC数据维护" class="headerlink" title="JDBC数据维护"></a>JDBC数据维护</h2><p> 会使用到的Statement的方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//适用于执行insert，update,delete等数据修改和维护语句</span><br><span class="line">public 行数 executeUpdate(String sql)throws SQLException;</span><br></pre></td></tr></table></figure><h3 id="数据维护一般流程"><a href="#数据维护一般流程" class="headerlink" title="数据维护一般流程"></a>数据维护一般流程</h3><p> <img src="https://img-blog.csdnimg.cn/20200414225041145.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><h3 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">例1：</span><br><span class="line">public static void main(String[] args) throws Exception &#123;</span><br><span class="line">//注册驱动</span><br><span class="line">    //Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br><span class="line">//获取数据库连接</span><br><span class="line">Connection conn=DriverManager.getConnection(&quot;jdbc:mysql://localhost:3306/jdbc&quot;, &quot;root&quot;, &quot;12345&quot;);</span><br><span class="line">//获取SQL语句的执行者</span><br><span class="line">PreparedStatement pstmt=conn.prepareStatement(&quot;UPDATE users SET NAME=&#x27;tc&#x27; WHERE id=?&quot;);</span><br><span class="line">//给占位符进行填充数据</span><br><span class="line">pstmt.setObject(1, &quot;1&quot;);//</span><br><span class="line">//执行SQL语句</span><br><span class="line">int count=pstmt.executeUpdate();//返回值是int数组</span><br><span class="line">//处理结果集</span><br><span class="line">if(count0)&#123;</span><br><span class="line">System.out.println(count+&quot;行受到影响&quot;);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">System.out.println(&quot;更改失败&quot;);</span><br><span class="line">&#125;</span><br><span class="line">//释放资源</span><br><span class="line">conn.close();</span><br><span class="line">pstmt.close();</span><br><span class="line">&#125;</span><br><span class="line">例2：</span><br><span class="line">String sql=&quot;update users set email=&#x27;ef@.com&#x27; where name=&#x27;ert&#x27;&quot;;</span><br></pre></td></tr></table></figure><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><h3 id="1-插入单条记录"><a href="#1-插入单条记录" class="headerlink" title="1.插入单条记录"></a>1.插入单条记录</h3><p> 请回顾Statement接口详解</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">例1：</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">try&#123;</span><br><span class="line">//注册驱动</span><br><span class="line">//Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br><span class="line">//获取数据库连接</span><br><span class="line">Connection conn=DriverManager.getConnection(&quot;jdbc:mysql://localhost:3306/jdbc&quot;, &quot;root&quot;, &quot;12345&quot;);</span><br><span class="line">//准备insert SQL语句</span><br><span class="line">String sql=&quot;INSERT INTO users(name,password,email,birthday) VALUES(?,?,?,?)&quot;;</span><br><span class="line">//设置参数，注意所使用的参数的数据类型</span><br><span class="line">PreparedStatement pstmt=conn.prepareStatement(sql);</span><br><span class="line">pstmt.setString(1, &quot;cm&quot;);pstmt.setString(2, &quot;1234556&quot;);</span><br><span class="line">pstmt.setString(3, &quot;228567@qq.com&quot;);</span><br><span class="line">SimpleDateFormat sdf = new SimpleDateFormat( &quot;yyyy-MM-dd&quot; );//设置日期格式</span><br><span class="line">java.util.Date date = sdf.parse( &quot;2002-5-6&quot; );//设置日期参数</span><br><span class="line">long lg = date.getTime(); // 日期 转 时间戳</span><br><span class="line">pstmt.setDate(4, new java.sql.Date( lg ));</span><br><span class="line">//执行SQL语句</span><br><span class="line">int count=pstmt.executeUpdate();</span><br><span class="line">//判断执行结果，返回值大于1则成功插入一条数据</span><br><span class="line">if(count0)&#123;</span><br><span class="line">System.out.println(&quot;记录成功&quot;);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">System.out.println(&quot;记录失败&quot;);</span><br><span class="line">&#125;</span><br><span class="line">conn.close();</span><br><span class="line">pstmt.close();</span><br><span class="line">&#125;catch(Exception e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">例2：</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">try&#123;</span><br><span class="line">//注册驱动</span><br><span class="line">//Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br><span class="line">//获取数据库连接</span><br><span class="line">Connection conn=DriverManager.getConnection(&quot;jdbc:mysql://localhost:3306/jdbc&quot;, &quot;root&quot;, &quot;12345&quot;);</span><br><span class="line">//准备insert SQL语句</span><br><span class="line">String sql=&quot;insert into users(name,password,email,birthday) values(&#x27;wm&#x27;,&#x27;123456&#x27;,&#x27;wer@.com&#x27;,&#x27;1984-05-17&#x27;);&quot;;</span><br><span class="line">PreparedStatement pstmt=conn.prepareStatement(sql);</span><br><span class="line">SimpleDateFormat sdf = new SimpleDateFormat( &quot;yyyy-MM-dd&quot; );//设置日期格式</span><br><span class="line">java.util.Date date = sdf.parse( &quot;2002-5-6&quot; );//设置日期参数</span><br><span class="line">long lg = date.getTime(); // 日期 转 时间戳</span><br><span class="line">pstmt.setDate(4, new java.sql.Date( lg ));</span><br><span class="line">//执行SQL语句</span><br><span class="line">int count=pstmt.executeUpdate();</span><br><span class="line">//判断执行结果，返回值大于1则成功插入一条数据</span><br><span class="line">if(count0)&#123;</span><br><span class="line">System.out.println(&quot;记录成功&quot;);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">System.out.println(&quot;记录失败&quot;);</span><br><span class="line">&#125;</span><br><span class="line">            //关闭接口</span><br><span class="line">conn.close();</span><br><span class="line">pstmt.close();</span><br><span class="line">&#125;catch(Exception e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-批量插入数据"><a href="#2-批量插入数据" class="headerlink" title="2.批量插入数据"></a>2.批量插入数据</h3><p>  采用批量提交的方式，使用addBatch(String sql)方法添加批量操作SQL语句，然后用executeBath()方法对所提交的多个SQL语句进行批量操作。</p><p>  注：批量操作只适用于DML（增删改操作）</p><p> Satement对象的executeBath()方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public int[] executeBatch() throws SQLException;//该语句不能执行具有返回结果集的SQL语句</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">//例：</span><br><span class="line">public static void main(String[] args) throws Exception &#123;</span><br><span class="line">//加载驱动</span><br><span class="line">//Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br><span class="line">//获取数据库连接</span><br><span class="line">Connection conn=DriverManager.getConnection(&quot;jdbc:mysql://localhost:3306/jdbc&quot;, &quot;root&quot;, &quot;12345&quot;);</span><br><span class="line">//准备3个插入SQL语句</span><br><span class="line">String sql=&quot;INSERT INTO users(name,password,email)VALUES(?,?,?)&quot;;</span><br><span class="line">//创建PreparedStatement对象</span><br><span class="line">PreparedStatement pstmt=conn.prepareStatement(sql);</span><br><span class="line">//设置参数</span><br><span class="line">pstmt.setString(1, &quot;jdh&quot;);</span><br><span class="line">pstmt.setString(2, &quot;3452&quot;);</span><br><span class="line">pstmt.setString(3, &quot;32438@.com&quot;);</span><br><span class="line">//添加一次预定义参数</span><br><span class="line">pstmt.addBatch();</span><br><span class="line">//设置参数</span><br><span class="line">pstmt.setString(1, &quot;jdsh&quot;);</span><br><span class="line">pstmt.setString(2, &quot;34322&quot;);</span><br><span class="line">pstmt.setString(3, &quot;132438@.com&quot;);</span><br><span class="line">//再添加一次预定义参数</span><br><span class="line">pstmt.addBatch();</span><br><span class="line">//批量执行预定义SQL</span><br><span class="line">int []count=pstmt.executeBatch();</span><br><span class="line">//判断执行结果，返回值大于1则成功插入一条数据</span><br><span class="line">if(count[0]0)&#123;</span><br><span class="line">System.out.println(&quot;记录成功&quot;);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">System.out.println(&quot;记录失败&quot;);</span><br><span class="line">&#125;</span><br><span class="line">                //关闭流    </span><br><span class="line">conn.close();</span><br><span class="line">pstmt.close();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">例1：</span><br><span class="line">public static void main(String[] args) throws Exception &#123;</span><br><span class="line">//注册驱动</span><br><span class="line">//Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</span><br><span class="line">//获取数据库连接</span><br><span class="line">Connection conn=DriverManager.getConnection(&quot;jdbc:mysql://localhost:3306/jdbc&quot;, &quot;root&quot;, &quot;12345&quot;);</span><br><span class="line">//准备DELETE SQL语句</span><br><span class="line">String sql=&quot;DELETE FROM users WHERE id=?&quot;;</span><br><span class="line">//使用Connection接口的prepareStatement方法创建PreparedStatement对象</span><br><span class="line">//将SQL语句发送到数据库中</span><br><span class="line">PreparedStatement ps=conn.prepareStatement(sql);</span><br><span class="line">//设置参数</span><br><span class="line">ps.setString(1,&quot;1&quot;);</span><br><span class="line">////执行SQL语句</span><br><span class="line">int ret=ps.executeUpdate();</span><br><span class="line">////判断执行结果</span><br><span class="line">if(ret0)&#123;</span><br><span class="line">System.out.println(&quot;记录删除成功！！&quot;);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">System.out.println(&quot;记录删除失败！！&quot;);</span><br><span class="line">&#125;</span><br><span class="line">//关闭Connection和PreparedStatement对象</span><br><span class="line">conn.close();</span><br><span class="line">ps.close();</span><br><span class="line">&#125;</span><br><span class="line">例2：</span><br><span class="line">String sql=&quot;delete from users where name=&#x27;tsa&#x27;&quot;;</span><br></pre></td></tr></table></figure><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><h3 id="JDBC中设置Date类型参数"><a href="#JDBC中设置Date类型参数" class="headerlink" title="JDBC中设置Date类型参数"></a>JDBC中设置Date类型参数</h3><h3 id="1-手动设置时间"><a href="#1-手动设置时间" class="headerlink" title="1.手动设置时间"></a>1.手动设置时间</h3><p> PreparedStatement 的 setDate 方法使用的是 java.sql.Date 类型的日期参数。</p><p> 设置这种参数的方法，例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">SimpleDateFormat sdf = new SimpleDateFormat( &quot;yyyy-MM-dd HH:mm:ss&quot; );//设置时间格式</span><br><span class="line"></span><br><span class="line">java.util.Date date = sdf.parse( &quot;2015-5-6 10:30:00&quot; );//设置时间</span><br><span class="line"></span><br><span class="line">long lg = date.getTime();    // 日期 转 时间戳</span><br><span class="line"></span><br><span class="line">PreparedStatement pst = conn.prepareStatement(sql);   // 创建 PreparedStatement 对象</span><br><span class="line"></span><br><span class="line">ps.setDate( 3, new java.sql.Date( lg ) );</span><br></pre></td></tr></table></figure><h3 id="2-自动获取本地时间"><a href="#2-自动获取本地时间" class="headerlink" title="2.自动获取本地时间"></a>2.自动获取本地时间</h3><p> 如果要在java代码中向数据库插入数据，可使用TimeStamp对象：创建java.util.Date对象，转换成TimeStamp对象（java.sql.Date对象不能保存时间，utils的可以)插入数据库(TimeStamp继承自java.sql.Date,数据库中自动转换成Date）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">（1）ps.setTimestamp(1, new java.sql.Timestamp(System.currentTimeMillis()));</span><br><span class="line"></span><br><span class="line">（2）java.sql.Date date = new java.sql.Date(System.currentTimeMillis());//获取当前时间</span><br><span class="line"></span><br><span class="line">java.util.Date date = new java.util.Date();    // 获取一个Date对象</span><br><span class="line"></span><br><span class="line">Timestamp timeStamp = new Timestamp(date.getTime()); </span><br><span class="line"></span><br><span class="line">   //   将日期时间转换为数据库中的timestamp类型</span><br><span class="line"></span><br><span class="line">pstmt.setTimestamp(2, timeStamp);</span><br></pre></td></tr></table></figure><hr><p> <em>注：本文参考：杨夏老师的《java核心技术》课程、王敏老师的《java高级开发》课程、_Java 2 实用教程（耿祥义）</em>、网络上的资料。_</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop完全分布式模式安装部署</title>
      <link href="/2020/04/07/Hadoop%E5%AE%8C%E5%85%A8%E5%88%86%E5%B8%83%E5%BC%8F%E6%A8%A1%E5%BC%8F%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/"/>
      <url>/2020/04/07/Hadoop%E5%AE%8C%E5%85%A8%E5%88%86%E5%B8%83%E5%BC%8F%E6%A8%A1%E5%BC%8F%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<blockquote><p> 在Linux上搭建Hadoop系列：1.Hadoop环境搭建流程图2.搭建Hadoop单机模式3.搭建Hadoop伪分布式模式4.搭建Hadoop完全分布式模式</p><p> 注：此教程皆是以范例讲述的，当然你可以按照教程搭建一个与教程一样的Hadoop环境，如果你想搭建一个与本教程有一些差异的Hadoop环境，这时请注意配置文件的参数可能不一样以及文件路径不一样。</p><p>csdn地址：<a href="https://blog.csdn.net/m0_46209092/article/details/105352872">https://blog.csdn.net/m0_46209092/article/details/105352872</a></p></blockquote><h2 id="1-Hadoop集群规划与部署"><a href="#1-Hadoop集群规划与部署" class="headerlink" title="1.Hadoop集群规划与部署"></a>1.Hadoop集群规划与部署</h2><p>  一个完全分布式模式Hadoop集群至少由三台机器构成，此处搭建一个三台机器构成的小集群。</p><p>一主二从结构<br>| 节点角色 | 虚拟机名 | 机器IP | 主机名 | 运行进程 |<br>| —- | —- | —- | —- | —- |<br>| 主节点 | master | 192.168.232.200 | node |<br> NameNode</p><p> ResourceManager</p><p> SecondaryNameNode</p><p> |<br>| 从节点 | slave1 | 192.168.232.201 | node1 | </p><p> DataNode</p><p> NodeManager</p><p> |<br>| 从节点 | slave2 | 192.168.232.202 | node2 | </p><p> DataNode</p><p> NodeManager</p><p> |</p><h3 id="1-准备3台虚拟机"><a href="#1-准备3台虚拟机" class="headerlink" title="(1)准备3台虚拟机"></a>(1)准备3台虚拟机</h3><p>  3台虚拟机可以是已部署单机模式Hadoop,已部署伪分布模式Hadoop,当然也可以是从零开始的基础环境。</p><p> 克隆出三台虚拟机</p><p> <em>注：为方便管理可以建一个文件夹（full-Distributed），将三台虚拟机放入其中。</em></p><h3 id="2-分别映射好三台虚拟机的IP与主机名"><a href="#2-分别映射好三台虚拟机的IP与主机名" class="headerlink" title="(2)分别映射好三台虚拟机的IP与主机名"></a>(2)分别映射好三台虚拟机的IP与主机名</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//修改IP避免冲突</span><br><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-ens33  //编辑网络配置</span><br><span class="line">systemctl restart network //重启网络服务</span><br></pre></td></tr></table></figure><p> <em>此处为方便记忆，建议master节点IP尾数用200，slave1用201，slave2用202.</em><img src="https://img-blog.csdnimg.cn/20200406224651196.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//修改主机名</span><br><span class="line">hostname //查看主机名</span><br><span class="line">hostnamectl set-hostname node //将主机名改为node</span><br><span class="line">hostnamectl set-hostname node1 //将主机名改为node1</span><br><span class="line">hostnamectl set-hostname node2 //将主机名改为node2</span><br></pre></td></tr></table></figure><p> <em>master用node,slave1用node1,slave2用node2.</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//映射IP与主机名</span><br><span class="line">vi /etc/hosts</span><br></pre></td></tr></table></figure><p> <img src="https://img-blog.csdnimg.cn/20200406225127280.png" alt=""></p><h3 id="3-设置三台机器时钟同步"><a href="#3-设置三台机器时钟同步" class="headerlink" title="(3)设置三台机器时钟同步"></a>(3)设置三台机器时钟同步</h3><p>  完全分布式模式由多台主机组成，如果主机间时间差异较大，运行Hadoop的时候会出现问题，因此需要对每个节点配置时钟同步。</p><p> <em>采用NTP服务通过获取网络时间使集群内不同主机的时间保持一致</em></p><p> <em>此处选取阿里云的时间服务器aliyun.com</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//安装NTP服务</span><br><span class="line">yum install ntp</span><br><span class="line">//手动同步时间</span><br><span class="line">ntpdate -u ntpaliyun.com</span><br><span class="line">//查看时间</span><br><span class="line">date</span><br></pre></td></tr></table></figure><h3 id="4-设置三台机器两两之间SSH密码登录"><a href="#4-设置三台机器两两之间SSH密码登录" class="headerlink" title="(4)设置三台机器两两之间SSH密码登录"></a>(4)设置三台机器两两之间SSH密码登录</h3><p>  在完全分布式模式下，集群内任意一台主机可免密登录集群内所有主机，实现两两免密登录。</p><p> <em>若是以伪分布模式为基础的机器则需要先删除node,node1,node2主机上原有的.ssh目录</em></p><p> <em>然后分别在node,node1,node2主机上生成公钥/私钥密钥对，再将公钥发送给集群内的所有主机。</em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//在各节点上删除原有.ssh目录，然后重新生成密钥对</span><br><span class="line">rm -rf /root/.ssh //删除原有.ssh目录</span><br><span class="line">ssh-keygen -t rsa  //生成密钥对</span><br><span class="line">cd ~/.ssh  //进入.ssh目录</span><br><span class="line">ll  //查看密钥对</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//在各节点的.ssh目录下将公钥复制到node节点</span><br><span class="line">cd ~  //进入根目录</span><br><span class="line">ssh-copy-id node  //复制公钥到node节点</span><br><span class="line">ssh-copy-id node1  //复制公钥到node1节点</span><br><span class="line">ssh-copy-id node2  //复制公钥到node2节点</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//查看node节点上的authorized_key文件</span><br><span class="line">cd .ssh  //进入.ssh目录</span><br><span class="line">more authorized_keys</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//将node节点上的authorized_keys文件远程拷贝到node1,node2</span><br><span class="line">scp authorized_keys node1:~/.ssh/authorized_keys //执行过程中输入yes与密码</span><br><span class="line">scp authorized_keys node2:~/.ssh/authorized_keys //执行过程中输入yes与密码</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//验证免密登录，注意查看提示符中主机名称的变化</span><br><span class="line">ssh node2 //免密登录node2节点</span><br><span class="line">exit //退出远程登录</span><br><span class="line">ssh node1 //免密登录node1节点</span><br><span class="line">exit //退出远程登录</span><br></pre></td></tr></table></figure><h3 id="5-修改主节点配置文件并远程拷贝到从节点"><a href="#5-修改主节点配置文件并远程拷贝到从节点" class="headerlink" title="(5)修改主节点配置文件并远程拷贝到从节点"></a>(5)修改主节点配置文件并远程拷贝到从节点</h3><p> 概要：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">在主节点上修改配置文件（以下皆以伪分布式Hadoop为基础的虚拟机作为示范）</span><br><span class="line">核心配置文件</span><br><span class="line">core-site.xml  修改</span><br><span class="line"></span><br><span class="line">HDFS配置文件</span><br><span class="line">hadoop-env.sh  不变</span><br><span class="line">hdfs-site.xml  修改</span><br><span class="line"></span><br><span class="line">MapReduce配置文件</span><br><span class="line">mapred-env.sh  修改</span><br><span class="line">mapred-site.xml 不变</span><br><span class="line"></span><br><span class="line">Yarn配置文件</span><br><span class="line">yarn-env.sh 修改</span><br><span class="line">yarn-site.xml 修改</span><br><span class="line"></span><br><span class="line">slaves 修改</span><br></pre></td></tr></table></figure><h3 id="1-在主节点上修改配置文件"><a href="#1-在主节点上修改配置文件" class="headerlink" title="1.在主节点上修改配置文件"></a>1.在主节点上修改配置文件</h3><p> 核心配置文件</p><p> core-site.xml 修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">cd /export/server/hadoop-2/etc/hadoop</span><br><span class="line">vi core-site.xml</span><br><span class="line">//在&lt;configuration&lt;/configuration中插入&lt;property&lt;/property中的代码。注意主机名与文件路径是否是自己的</span><br><span class="line"></span><br><span class="line">&lt;configuration </span><br><span class="line">&lt;property</span><br><span class="line">        &lt;namefs.defaultFS&lt;/name</span><br><span class="line">        &lt;valuehdfs://node:9000&lt;/value</span><br><span class="line">       &lt;descriptionHDFS的URI，设定namenode的主机名及端口&lt;/description</span><br><span class="line">&lt;/property</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;property</span><br><span class="line">        &lt;namehadoop.tmp.dir&lt;/name</span><br><span class="line">        &lt;value/export/server/tmp&lt;/value</span><br><span class="line">       &lt;description节点上本地的hadoop临时文件夹，之前一定要先建立好&lt;/description</span><br><span class="line">&lt;/property</span><br><span class="line">&lt;/configuration</span><br></pre></td></tr></table></figure><p> HDFS配置文件</p><p> hadoop-env.sh 不变 //在伪分布式已修改过</p><p> hdfs-site.xml 修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">vi hdfs-site.xml</span><br><span class="line">//在&lt;configuration&lt;/configuration中插入&lt;property&lt;/property中的代码。注意主机名与文件路径是否是自己的</span><br><span class="line">&lt;configuration</span><br><span class="line">&lt;property</span><br><span class="line">        &lt;namedfs.namenode.name.dir&lt;/name</span><br><span class="line">        &lt;valuefile:/export/server/hdfs/name&lt;/value</span><br><span class="line">       &lt;descriptionnamenode上存储hdfs名字空间元数据 &lt;/description</span><br><span class="line">&lt;/property</span><br><span class="line"></span><br><span class="line">&lt;property</span><br><span class="line">        &lt;namedfs.datanode.data.dir&lt;/name</span><br><span class="line">        &lt;valuefile:/export/server/hdfs/data&lt;/value</span><br><span class="line">        &lt;descriptiondatanode上数据块的物理存储位置&lt;/description</span><br><span class="line">&lt;/property</span><br><span class="line"></span><br><span class="line">&lt;property</span><br><span class="line">        &lt;namedfs.replication&lt;/name</span><br><span class="line">        &lt;value2&lt;/value</span><br><span class="line">        &lt;description副本个数，默认是3,应小于datanode机器数量&lt;/description</span><br><span class="line">&lt;/property</span><br><span class="line"></span><br><span class="line">&lt;/configuration</span><br></pre></td></tr></table></figure><p> MapReduce配置文件</p><p> mapred-env.sh 修改</p><p> mapred-site.xml 不变</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">which java //查看java安装路径</span><br><span class="line">vi mapred-env.sh</span><br><span class="line">插入export JAVA_HOME=/bin以前的java安装路径</span><br></pre></td></tr></table></figure><p> <img src="https://img-blog.csdnimg.cn/2020040915372633.png" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200409153809304.png" alt=""></p><p> Yarn配置文件</p><p> yarn-env.sh 修改</p><p> yarn-site.xml 修改</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">which java //获取java安装路径</span><br><span class="line">vi yarn-env.sh</span><br><span class="line">插入export JAVA_HOME=/bin以前的java安装路径</span><br><span class="line">vi yarn-site.xml</span><br><span class="line">//在&lt;configuration&lt;/configuration中插入&lt;property&lt;/property中的代码。注意主机名是否是自己的</span><br><span class="line">&lt;configuration</span><br><span class="line">&lt;property</span><br><span class="line">        &lt;nameyarn.resourcemanager.hostname&lt;/name</span><br><span class="line">        &lt;valuenode&lt;/value</span><br><span class="line">        &lt;description指定resourcemanager所在的hostname，</span><br><span class="line">                               即指定yarn的老大即ResourceManger的地址</span><br><span class="line">       &lt;/description</span><br><span class="line">&lt;/property</span><br><span class="line"></span><br><span class="line">&lt;property</span><br><span class="line">        &lt;nameyarn.nodemanager.aux-services&lt;/name</span><br><span class="line">        &lt;valuemapreduce_shuffle&lt;/value</span><br><span class="line">       &lt;descriptionNodeManager上运行的附属服务。</span><br><span class="line">                             指定NodeManager获取数据的方式是shuffle</span><br><span class="line">                             需配置成mapreduce_shuffle，才可运行MapReduce程序</span><br><span class="line">       &lt;/description</span><br><span class="line">&lt;/property</span><br><span class="line">&lt;/configuration</span><br></pre></td></tr></table></figure><p> slaves 修改</p><p>  slaves文件给出了Hadoop集群的slave节点列表。启动Hadoop时，系统总是根据当前slaves文件中slave节点名称列表启动集群，不在列表中的Slave节点便不会被视为计算节点。</p><p><code>vi slaves插入各节点名</code></p><p> <img src="https://img-blog.csdnimg.cn/20200409155651130.png" alt=""></p><h3 id="2-将主节点的配置文件分发到两个从节点"><a href="#2-将主节点的配置文件分发到两个从节点" class="headerlink" title="2.将主节点的配置文件分发到两个从节点"></a>2.将主节点的配置文件分发到两个从节点</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">分发到node1从节点</span><br><span class="line">scp -r /export/server/hadoop-2/etc/hadoop node1:/export/server/hadoop-2/etc/</span><br><span class="line">分发到node2从节点</span><br><span class="line">scp -r /export/server/hadoop-2/etc/hadoop node2:/export/server/hadoop-2/etc/</span><br></pre></td></tr></table></figure><h2 id="2-格式化HDFS并启动Hadoop"><a href="#2-格式化HDFS并启动Hadoop" class="headerlink" title="2.格式化HDFS并启动Hadoop"></a>2.格式化HDFS并启动Hadoop</h2><h3 id="（1）在主节点上格式化HDFS"><a href="#（1）在主节点上格式化HDFS" class="headerlink" title="（1）在主节点上格式化HDFS"></a>（1）在主节点上格式化HDFS</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs namenode -format</span><br></pre></td></tr></table></figure><h3 id="（2）在主节点上启动Hadoop"><a href="#（2）在主节点上启动Hadoop" class="headerlink" title="（2）在主节点上启动Hadoop"></a>（2）在主节点上启动Hadoop</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">start-all.sh //启动所有进程</span><br><span class="line">//或</span><br><span class="line">start-dfs.sh</span><br><span class="line">start-yarn.sh</span><br></pre></td></tr></table></figure><h3 id="（3）在各节点上用JPS查看进程"><a href="#（3）在各节点上用JPS查看进程" class="headerlink" title="（3）在各节点上用JPS查看进程"></a>（3）在各节点上用JPS查看进程</h3><p> <img src="https://img-blog.csdnimg.cn/20200409161849926.png" alt=""><img src="https://img-blog.csdnimg.cn/20200409163115941.png" alt=""></p><p> <img src="https://img-blog.csdnimg.cn/20200409161823694.png" alt=""></p><h3 id="4-web界面上查看"><a href="#4-web界面上查看" class="headerlink" title="(4)web界面上查看"></a>(4)web界面上查看</h3><p> 在浏览器输入主机的IP地址：50070</p><p> <img src="https://img-blog.csdnimg.cn/20200409163406186.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""><img src="https://img-blog.csdnimg.cn/20200409164618843.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><h2 id="3-在完全分布式模式下运行Hadoop自带示例程序"><a href="#3-在完全分布式模式下运行Hadoop自带示例程序" class="headerlink" title="3.在完全分布式模式下运行Hadoop自带示例程序"></a>3.在完全分布式模式下运行Hadoop自带示例程序</h2><h3 id="1-在完全分布式模式下使用wordcount示例程序完成单词统计"><a href="#1-在完全分布式模式下使用wordcount示例程序完成单词统计" class="headerlink" title="1.在完全分布式模式下使用wordcount示例程序完成单词统计"></a>1.在完全分布式模式下使用wordcount示例程序完成单词统计</h3><h3 id="（1）准备数据"><a href="#（1）准备数据" class="headerlink" title="（1）准备数据"></a>（1）准备数据</h3><p> <img src="https://img-blog.csdnimg.cn/20200409165117244.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><h3 id="（2）运行wordcount程序"><a href="#（2）运行wordcount程序" class="headerlink" title="（2）运行wordcount程序"></a>（2）运行wordcount程序</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /export/server/hadoop-2/share/hadoop/mapreduce/</span><br><span class="line">hadoop jar hadoop-mapreduce-examples-jar wordcount/input/wcoutput</span><br></pre></td></tr></table></figure><h3 id="3-查看运行结果"><a href="#3-查看运行结果" class="headerlink" title="(3)查看运行结果"></a>(3)查看运行结果</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hadoop fs -ls /wcoutput</span><br><span class="line">hadoop fs -cat wcoutput/part*</span><br></pre></td></tr></table></figure><h3 id="2-在完全分布式模式下使用wordmean示例程序计算文件中单词的平均长度"><a href="#2-在完全分布式模式下使用wordmean示例程序计算文件中单词的平均长度" class="headerlink" title="2.在完全分布式模式下使用wordmean示例程序计算文件中单词的平均长度"></a>2.在完全分布式模式下使用wordmean示例程序计算文件中单词的平均长度</h3><h3 id="（1）准备数据：HDFS上的-input"><a href="#（1）准备数据：HDFS上的-input" class="headerlink" title="（1）准备数据：HDFS上的/input"></a>（1）准备数据：HDFS上的/input</h3><h3 id="2-运行wordmean程序"><a href="#2-运行wordmean程序" class="headerlink" title="(2)运行wordmean程序"></a>(2)运行wordmean程序</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop jar hadoop-mapreduce-examples-jar wordmean/input/wmoutput</span><br></pre></td></tr></table></figure><h3 id="3-查看结果"><a href="#3-查看结果" class="headerlink" title="(3)查看结果"></a>(3)查看结果</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hadoop fs -ls /wmoutput</span><br><span class="line">hadoop fs -cat /wmouput/part*</span><br></pre></td></tr></table></figure><p>| 表头 | 表头 |<br>| —- | —- |搭建完全分布式模式Hadoop<br>| 准备3台虚拟机 | 克隆 |<br>| 在3台机器上分别设置IP和主机名并映射关系 |<br> vi /etc/sysconfig/network-scripts/ifcfg-ens33 //更改IP</p><p> hostnamectl set-hostname node //更改主机名</p><p> vi /etc/hosts //映射关系</p><p> |<br>| 设置3台机器时钟同步 | </p><p> yum install ntp //安装ntp服务</p><p> ntpdate -u ntp1.aliyun.com //手动同步时间</p><p> |<br>| 配置3台机器两两之间SSH免密登录 | </p><p> ssh-keygen -t rsa //获取密钥</p><p> ssh-copy-id node //复制公钥到node节点</p><p> |<br>| 修改主节点配置文件并远程拷贝到从节点 | </p><p> vi 各配置文件</p><p> scp -r /export/server/hadoop-2.7.2/etc/hadoop</p><p> node1:/export/server/hadoop-2.7.2/etc/</p><p> |<br>| 格式化HDFS并启动Hadoop | </p><p> hdfs namenode -format //格式化HDFS</p><p> start-all.sh //启动Hadoop所有进程</p><p> jps //查看进程</p><p> |<br>| 完全分布式模式运行Hadoop自带示例程序 | hadoop jar hadoop-mapreduce-examples-2.7.2.jar wordcount/input/wcoutput |</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hadoop生态 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>详解java GUI</title>
      <link href="/2020/04/07/%E5%86%8D%E8%A7%81%EF%BC%81%E3%80%90JAVA%20GUI%E3%80%91/"/>
      <url>/2020/04/07/%E5%86%8D%E8%A7%81%EF%BC%81%E3%80%90JAVA%20GUI%E3%80%91/</url>
      
        <content type="html"><![CDATA[<blockquote><p>csdn地址：<a href="https://blog.csdn.net/m0_46209092/article/details/105719978">https://blog.csdn.net/m0_46209092/article/details/105719978</a></p></blockquote><h2 id="1-GUI概述"><a href="#1-GUI概述" class="headerlink" title="1.GUI概述"></a>1.GUI概述</h2><p>  图形用户界面（Graphical User Interface，简称 GUI，又 称图形用户接口）是指采用图形方式显示的计算机操作用户界面。</p><p> java作为一种面向对象的程序设计语言，它将图形界面设计相关的元素与成分都抽象为类和接口。现主要有java.awt包和javax.swing包</p><p> <img src="https://img-blog.csdnimg.cn/20200425120137779.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><h3 id="AWT（Abstract-Window-Toolkit）—抽象窗口工具"><a href="#AWT（Abstract-Window-Toolkit）—抽象窗口工具" class="headerlink" title="AWT（Abstract Window Toolkit）—抽象窗口工具"></a>AWT（Abstract Window Toolkit）—抽象窗口工具</h3><p>  Java中用来生成图形用户界面的类库是 java.awt包，它是Java基本包中最大的一个， 定义了所有GUI组件类，以及其它用于构造图形界面的类。</p><p>  AWT类库中的各种操作被定义成在一个并不存在的抽象窗口中进行，以实现跨平台特性，但其具体实现效果会有所不同（与本地对等组件相关联）。</p><p> <img src="https://img-blog.csdnimg.cn/20200425120241931.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><h3 id="Swing——轻量级组件"><a href="#Swing——轻量级组件" class="headerlink" title="Swing——轻量级组件"></a>Swing——轻量级组件</h3><p>  swing是为了解决awt存在的问题而新开发的包，它以awt为基础的。</p><p>  Swing包含250多个类（有些是组件， 有些是支持类即继承自awt子类的类，组件的名字都以 J 开 头）；</p><p>  Swing GUI组件=java.awt包的各种GUI组件+新功能；</p><p>  用轻量组件（没有本地对等组件）代替了AWT的重量组件（与本地对等组件相关联）。</p><p> <img src="https://img-blog.csdnimg.cn/20200425130028211.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><h3 id="Swing采用的MVC设计范式："><a href="#Swing采用的MVC设计范式：" class="headerlink" title="Swing采用的MVC设计范式："></a>Swing采用的MVC设计范式：</h3><p> 模型（Model）——用于存储定义该组件的数据（如：大小，颜色，布局….）；</p><p> 视图（View）——用模型中的数据生成该组件的可视化表示（即显示出该组件）；</p><p> 控制器（Controller）——响应用户对该组件的交互操作。</p><h3 id="AWT和Swing之间的区别"><a href="#AWT和Swing之间的区别" class="headerlink" title="AWT和Swing之间的区别"></a>AWT和Swing之间的区别</h3><p> 1.AWT 是基于本地方法的C/C++程序，其运行速度比较快；Swing是基于AWT的Java程序，其运行速度比较慢。</p><p> 2.AWT的控件在不同的平台可能表现不同，而Swing在所有平台表现一致。</p><p> 3.AWT用的是重量组件（与本地对等组件相关联）;Swing使用的是轻量组件（没有本地对等组件）。</p><p> 4.AWT是抽象窗口组件工具包，是 java 最早的用于编写图形设计应用程序的开发包；swing是为了解决awt存在的问题而新开发的包，它以awt为基础的。</p><h3 id="图形用户界面元素"><a href="#图形用户界面元素" class="headerlink" title="图形用户界面元素"></a>图形用户界面元素</h3><p> 组件</p><p> 容器</p><p> 用户自定义图形界面成分：（1) 绘制图形（2) 显示文字（3) 控制颜色（4) 显示图象（5) 实现动画效果</p><h2 id="2-AWT与Swing组件简介"><a href="#2-AWT与Swing组件简介" class="headerlink" title="2.AWT与Swing组件简介"></a>2.AWT与Swing组件简介</h2><h3 id="AWT和Swing容器"><a href="#AWT和Swing容器" class="headerlink" title="AWT和Swing容器"></a>AWT和Swing容器</h3><p> 容器组件的主要作用是包容其他组件,并按照一定的方式组织排列他们。同一个容器中的所有组件 通常总是同时被显示或同时被隐藏。</p><p> 所有容器组件都是Container类的子类。在Container类中定义了容器所需 要用到的属性及方法。</p><p> <code>常用的方法有：</code>setLayout( LayoutManager mgr) add (Component omp)</p><p> <code>JAVA中的常用容器组件：</code>面板 （JPanel）框架 （JFrame）</p><h3 id="（1）面板（Panel、JPanel）："><a href="#（1）面板（Panel、JPanel）：" class="headerlink" title="（1）面板（Panel、JPanel）："></a>（1）面板（Panel、JPanel）：</h3><p> Panel属于无边框容器，无边框容器包括Panel和 Applet，其中Panel是Container的子类，Applet 是Panel的子类，它提供空间将其它的组件附在其上。。</p><p> 使用Panel （JPanel）的好处就是可将相关的组件整合组织起来，让用户接口更为简洁清楚。</p><p> 一 个 Frame （ JFrame ） 里 面 可 放 入 好 几 个 Panel（JPanel） 。可以在一个Panel（JPanel）上放入其它Panel（JPanel） 。<img src="https://img-blog.csdnimg.cn/20200425135401429.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p> <code>创建面板：</code></p><p> Panel（） //用默认的布局管理器（FlowLayout）</p><p> Panel（LayoutManager layout）//用指定的布局 管理器（Layout）创建面板</p><h3 id="（2）框架（Frame、JFrame）"><a href="#（2）框架（Frame、JFrame）" class="headerlink" title="（2）框架（Frame、JFrame）"></a>（2）框架（Frame、JFrame）</h3><p> Frame是独立于浏览器的可独立运行的主窗口，通常 用于开发桌面应用程序。 Frame拥有边界和标题栏设 置，大小、内容可以调整。 Frame是容器，里面需要 加入组件，也可以加入菜单，可以在上面绘图。</p><p> <code>Frame的创建</code></p><p> Frame（）——创建一个没有窗口标题的窗口框架</p><p> Frame（String）——创建一个指定窗口标题的窗口框架</p><p> 注：框架是容器，就像面板一样，用户可以用add()方法将其他组件加到该框架容器中。该容器的缺省布局是BorderLayout。</p><p> <code>Frame的主要方法</code></p><p><img src="https://img-blog.csdnimg.cn/20200425151751139.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p>(来自网络)</p><p> <code>与Frame的相关的方法</code></p><p> （1）Swing中的 setDefaultCloseOperation()方法</p><p> 功能：设置用户在窗体上发起 “close” 时默认执行的操作。</p><p> 该方法的参数值：</p><p> EXIT_ON_CLOSE（在 JFrame 中定义）：使用 System exit 方法 退出应用程序（仅在应用程序中使用） DO_NOTHING_ON_CLOSE（在 WindowConstants 中定义）</p><p> HIDE_ON_CLOSE（在 WindowConstants 中定义）</p><p> DISPOSE_ON_CLOSE（在 WindowConstants 中定义）</p><p> （2）Swing中的 getContentPane()方法</p><p> 由于在过去的J2SE版本中，组件(Component)不能直接添加到最高级(top level)的Swing容器，这些容器包括：JFrame, JApplet等。 因此需要调用JFrame的getContentPane()方法获得内容面板，然后该内容面板调用add（）方法添加组件。但在J2SE5.0中，我们可以直接添加组件到最高级 的Swing容器，也可以直接在容器内设置布局管理和删除组件。</p><h3 id="标签-Label、JLabel）"><a href="#标签-Label、JLabel）" class="headerlink" title="标签(Label、JLabel）"></a>标签(Label、JLabel）</h3><p>  专门用于显示输出，它的功能为显示一行只读文本；常用于在屏幕上显示一些提示性，说明性的文字。</p><p> <code>Label的构造方法及主要成员方法</code></p><p> Label（）：用来创建一个没有显示内容的标签</p><p> Label（String str）：创建一个带初始字符串的标签</p><p> Label（String str，int alignment）：创建一个带初始字符串及指定对齐方式的标签</p><p> void setAlignment(int alignment) ：设置标签对齐方式。参数int代表的三种对齐方式 0= Label.LEFT 1= Label.CENTER 2= Label .RIGHT</p><p> <code>JLabel的构造方法及类方法</code></p><p><img src="https://img-blog.csdnimg.cn/20200425154027224.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p>(来自网络)</p><p> void setAlignment(int alignment) 方法与Label的一致</p><p> JLabel的新增功能：可以提供带图标的标签，图标和文字的位置是可以控制的。</p><h3 id="文本框（TextField、JTextField、JPasswordField）"><a href="#文本框（TextField、JTextField、JPasswordField）" class="headerlink" title="文本框（TextField、JTextField、JPasswordField）"></a>文本框（TextField、JTextField、JPasswordField）</h3><p> 单行文本框，用来接收用户从键盘上的输入，也可用来显示输出单行文本信息。</p><p> <code>TextField的构造方法及成员方法（常用）</code></p><p><img src="https://img-blog.csdnimg.cn/20200425160000233.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p>(来自网络)</p><p> <code>JTextField的构造方法及成员方法（常用）</code></p><p> 与TextField的构造方法及成员方法一致只是构造方法名前以J开头</p><p> <code>JPasswordField的构造方法及成员方法（常用）</code></p><p> JPasswordField类是继承JTextField类而来，是一个专门用来输入密码的单行文本框。即对用户输入的字符采用密文的形式进行显示，如<em>**</em>。</p><p><img src="https://img-blog.csdnimg.cn/2020042516142531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p>(来自网络)</p><h3 id="文本域（TextArea、JTextArea）"><a href="#文本域（TextArea、JTextArea）" class="headerlink" title="文本域（TextArea、JTextArea）"></a>文本域（TextArea、JTextArea）</h3><p> 文本域允许用户编辑具有多行的文本， 可以用于输出信息，也可以用于接收信息。</p><p> 注：当JTextArea的内容布满时不会产生滚 动条，而是自动加大文本区的大小。</p><p> <code>TextArea的构造方法及成员方法（常用）</code></p><p><img src="https://img-blog.csdnimg.cn/20200425161834851.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p>(来自网络)</p><p> <code>JTextArea的构造方法及成员方法（常用）</code></p><p><img src="https://img-blog.csdnimg.cn/20200425162056321.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p>(来自网络)</p><h3 id="按钮（Button、JButton）"><a href="#按钮（Button、JButton）" class="headerlink" title="按钮（Button、JButton）"></a>按钮（Button、JButton）</h3><p> 某类创建一个按钮。当 按下该按钮时，应用程序能执行某项动作。产生ActionEvent事件 (通过按下 该按钮触发)</p><p> <code>Button的构造方法及成员方法（常用）</code></p><div class="table-container"><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>构造方法</td><td>Button()</td><td>创建一个没有标题的按钮</td></tr><tr><td></td><td>Button(String label)</td><td>创建一个有显示标题的按钮</td></tr><tr><td>成员方法</td><td>void addNotify()</td><td>创建一个按钮对象的同位体（可以改变外观但不改变功能）</td></tr><tr><td></td><td>getActionComand()</td><td>返回激发动作事件按钮的标题</td></tr><tr><td></td><td>String getLabel()</td><td>返回按钮的标题</td></tr><tr><td></td><td>void setLabel(String label)</td><td>设置按钮上的标题</td></tr></tbody></table></div><p> <code>JButton的构造方法及成员方法（常用）</code></p><p><img src="https://img-blog.csdnimg.cn/2020042516543066.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p>(来自网络)</p><p> JButton的新增功能：可以提供带图标的按钮。</p><h3 id="复选框（Checkbox、JCheckBox）"><a href="#复选框（Checkbox、JCheckBox）" class="headerlink" title="复选框（Checkbox、JCheckBox）"></a>复选框（Checkbox、JCheckBox）</h3><p> 可以通过鼠标单击复选框的 操作来设置其状态为选中 或非选中，可以让用户作出多项选择。会产生ItemEvent事件（复 选框状态发生改变时触发）</p><p> <code>Checkbox的构造方法及成员方法（常用）</code></p><p><img src="https://img-blog.csdnimg.cn/2020042517050036.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p>(来自网络)</p><p> 注：复选框组件有状态属性，为true/false，默认情况下为false</p><p> <code>JCheckBox的构造方法及成员方法（常用）</code></p><p><img src="https://img-blog.csdnimg.cn/20200425170627746.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p>(来自网络)</p><p> JCheckBox的新增功能：可以提供带图标的复选框。</p><h3 id="单选框-CheckboxGroup、-JRadioButton、ButtonGroup"><a href="#单选框-CheckboxGroup、-JRadioButton、ButtonGroup" class="headerlink" title="单选框(CheckboxGroup、 JRadioButton、ButtonGroup)"></a>单选框(CheckboxGroup、 JRadioButton、ButtonGroup)</h3><p> 在AWT中通过复选框组CheckboxGroup来实现单 选框的功能，而在Swing中 则通过JRadioButton来实现。产生ItemEvent事件 (选择项改变时触发)</p><p> <code>CheckboxGroup及Checkbox实现单选功能</code></p><p> 构造方法：public CheckboxGroup()常用成员方法：public Checkbox getSelectedCheckbox() 从此复选框组中获取当前选择</p><p> 特点：CheckboxGroup是Object的直接子类；CheckboxGroup的对象不产生事件。</p><p> 结合CheckboxGroup与Checkbox来实现单选功能：</p><p> 1、CheckboxGroup（）方法构造一个CheckboxGroup对象； 2、Checkbox（String， CheckboxGroup ，boolean）方法创建Checkbox对象，同一 组的Checkbox的CheckboxGroup参数值相同 。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//该示例生成了一个新的复选框组，其中有三个复选框：</span><br><span class="line"> CheckboxGroup cbg = new CheckboxGroup();</span><br><span class="line">add(new Checkbox(&quot;one&quot;, cbg, true)); </span><br><span class="line">add(new Checkbox(&quot;two&quot;, cbg, false)); </span><br><span class="line">add(new Checkbox(&quot;three&quot;, cbg, false));</span><br></pre></td></tr></table></figure><p> <code>JRadioButton的构造方法及成员方法（常用）</code></p><p><img src="https://img-blog.csdnimg.cn/2020042517340892.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p>(来自网络)</p><p> <code>ButtonGroup的构造方法及成员方法（常用）</code></p><p><img src="https://img-blog.csdnimg.cn/20200425173455689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p>(来自网络)</p><h3 id="下拉列表（Choice、JComboBox）"><a href="#下拉列表（Choice、JComboBox）" class="headerlink" title="下拉列表（Choice、JComboBox）"></a>下拉列表（Choice、JComboBox）</h3><p> 实现一个下拉式列表， 在显示方式上，使用弹出 式菜单动态地显示选项， 并且只会将被选择的选项显 示出来 ；支持单选。会产生ActionEvent事件() 和ItemEvent事件()</p><p> <code>Choice的构造方法及成员方法（常用）</code></p><p> Choice（） //创建一个新的选择菜单。</p><p><img src="https://img-blog.csdnimg.cn/20200426131550194.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p>(来自网络)</p><p> <code>JComboBox的构造方法及成员方法（主要）</code></p><p><img src="https://img-blog.csdnimg.cn/20200426131754713.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p>(来自网络)</p><p> JComboBox的新增功能 ：JComboBox的每项都可以是任意类的对象。</p><h3 id="列表组件（List、JList）"><a href="#列表组件（List、JList）" class="headerlink" title="列表组件（List、JList）"></a>列表组件（List、JList）</h3><p> 提供了一个可滚动的选 项列表；可设置此 list，使 其允许用户进行单项或多项选择。会产生ActionEvent事件（双击某选项时） 和ItemEvent事件（双击某选项时）</p><p> <code>List的构造方法及成员方法（常用）</code></p><div class="table-container"><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>List()</td><td>创建列表</td></tr><tr><td>List(int)</td><td>以指定的行数创建列表</td></tr><tr><td>List（int,boolean）</td><td>指定行数和是否允许多项选择</td></tr><tr><td>String getSelectedItem(int )</td><td>返回选中的字符串</td></tr><tr><td>int countItems( )</td><td>返回下拉列表条目数</td></tr><tr><td>int getSelectedIndex（）</td><td>返回当前选项的索引</td></tr><tr><td>String getItem(int )</td><td>返回指定索引处的字符串</td></tr><tr><td>void removeAll( )</td><td>删除所有选项</td></tr><tr><td>void remove(int)</td><td>删除指定位置的选项</td></tr><tr><td>void addItem(String ,int)</td><td>在指定位置加入一个选项</td></tr><tr><td>void addItem (String)</td><td>向列表末尾加入一个选项</td></tr><tr><td>void select(String)</td><td>选择指定字符串的选项</td></tr><tr><td></td></tr></tbody></table></div><p> <code>JList的构造方法及成员方法（常用）</code></p><p><img src="https://img-blog.csdnimg.cn/20200427092249490.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><p>(来自网络)</p><p> JList的新增功能:List的项目只能是文本，JList的项目可以由任意类型对象构成。</p><h2 id="3-布局管理器"><a href="#3-布局管理器" class="headerlink" title="3.布局管理器"></a>3.布局管理器</h2><p> 总结了下各种布局管理器，具体用法后面有示例程序，高清图片链接。</p><h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://img-blog.csdnimg.cn/20200427175439508.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></h2><h2 id="4-事件处理"><a href="#4-事件处理" class="headerlink" title="4.事件处理"></a>4.事件处理</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><h3 id="（1）事件处理三要素"><a href="#（1）事件处理三要素" class="headerlink" title="（1）事件处理三要素"></a>（1）事件处理三要素</h3><p> <code>事件源</code>：图形用户界面的每个可能产生事件的组件。（事件源可以注册监听者对象，并向其发送事件对象）</p><p> <code>事件类型</code>：Java事件类被集中在java.awt.event 包中，并所有的事件类都继承了AWTEvent类的一个方法getSource()， 该方法返回所发生事件的对象，即事件源。</p><p> <code>事件监听者</code></p><h3 id="（2）AWTEvent类体系结构图"><a href="#（2）AWTEvent类体系结构图" class="headerlink" title="（2）AWTEvent类体系结构图"></a><code>（2）AWTEvent类体系结构图</code></h3><p> <code>![AWTEvent类体系结构](https://img-blog.csdnimg.cn/20200428022551408.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70)</code></p><h3 id="（3）事件监听接口层次结构"><a href="#（3）事件监听接口层次结构" class="headerlink" title="（3）事件监听接口层次结构"></a>（3）事件监听接口层次结构<img src="https://img-blog.csdnimg.cn/20200428022017888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></h3><h3 id="（4）事件处理机制"><a href="#（4）事件处理机制" class="headerlink" title="（4）事件处理机制"></a>（4）事件处理机制</h3><p> <img src="https://img-blog.csdnimg.cn/20200428175804825.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><h3 id="动作事件"><a href="#动作事件" class="headerlink" title="动作事件"></a>动作事件</h3><p> 后面补~</p><h2 id="5-对话框"><a href="#5-对话框" class="headerlink" title="5.对话框"></a>5.对话框</h2><p> 后面补~</p><h2 id="6-菜单"><a href="#6-菜单" class="headerlink" title="6.菜单"></a>6.菜单</h2><p> 后面补~</p><h2 id="7-经典示例程序"><a href="#7-经典示例程序" class="headerlink" title="7.经典示例程序"></a>7.经典示例程序</h2><h3 id="1-FlowLayout示例："><a href="#1-FlowLayout示例：" class="headerlink" title="1.FlowLayout示例："></a>1.FlowLayout示例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">import java.awt.*;</span><br><span class="line">public class Frame_FlowLayout &#123;</span><br><span class="line">public static void main(String[] args) &#123;//流式布局：当一行组件满了后，组件会换行继续添加</span><br><span class="line">//创建一个名为FlowLayout的窗体</span><br><span class="line">Frame f =new Frame(&quot;FlowLayout&quot;);</span><br><span class="line">//设置窗体中的布局管理器FlowLayout,所有组件左对齐，水平间距为20，垂直间距为30</span><br><span class="line">f.setLayout(new FlowLayout(FlowLayout.LEFT,20,30));</span><br><span class="line">//设置窗体大小</span><br><span class="line">f.setSize(220,300);</span><br><span class="line">//设置窗体显示的位置</span><br><span class="line">f.setLocation(300,200);</span><br><span class="line">//把按钮添加到f窗口中</span><br><span class="line">f.add(new Button(&quot;第1个按钮&quot;));</span><br><span class="line">f.add(new Button(&quot;第2个按钮&quot;));</span><br><span class="line">f.add(new Button(&quot;第3个按钮&quot;));</span><br><span class="line">f.add(new Button(&quot;第4个按钮&quot;));</span><br><span class="line">f.add(new Button(&quot;第5个按钮&quot;));</span><br><span class="line">f.add(new Button(&quot;第6个按钮&quot;));</span><br><span class="line">//设置窗体可见</span><br><span class="line">f.setVisible(true);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-BorderLayout示例："><a href="#2-BorderLayout示例：" class="headerlink" title="2.BorderLayout示例："></a>2.BorderLayout示例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">import java.awt.*;</span><br><span class="line"></span><br><span class="line">import javax.swing.JFrame;</span><br><span class="line"></span><br><span class="line">public class Frame_BorderLayout &#123;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">Frame f =new Frame(&quot;BoderLayout&quot;);//创建一个名为BoderLayout的窗体</span><br><span class="line">f.setLayout(new BorderLayout());//设置窗体中的布局管理器BoderLayout</span><br><span class="line">f.setSize(300,300);//设置窗体的大小</span><br><span class="line">f.setLocation(300, 200);//设置窗体显示的位置</span><br><span class="line">f.setVisible(true);//设置窗体可见</span><br><span class="line">//下面代码创建5个按钮，分别用于填充BorderLayout的5个区域</span><br><span class="line">Button but1 = new Button(&quot;东部&quot;);</span><br><span class="line">Button but2 = new Button(&quot;西部&quot;);</span><br><span class="line">Button but3 = new Button(&quot;南部&quot;);</span><br><span class="line">Button but4 = new Button(&quot;北部&quot;);</span><br><span class="line">Button but5 = new Button(&quot;中部&quot;);</span><br><span class="line">//将创建好的按钮添加到窗体中，并设置按钮所在的区域</span><br><span class="line">f.add(but1,BorderLayout.EAST);</span><br><span class="line">f.add(but2,BorderLayout.WEST);</span><br><span class="line">f.add(but3,BorderLayout.SOUTH);</span><br><span class="line">f.add(but4,BorderLayout.NORTH);</span><br><span class="line">f.add(but5,BorderLayout.CENTER);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-GridLayout示例："><a href="#3-GridLayout示例：" class="headerlink" title="3.GridLayout示例："></a>3.GridLayout示例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import java.awt.*;</span><br><span class="line"></span><br><span class="line">public class Frame_GridLayout &#123;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">//创建一个名为GridLayout的窗体</span><br><span class="line">Frame f=new Frame(&quot;GridLayout&quot;);</span><br><span class="line">f.setLayout(new GridLayout(3,3));//设置该窗体为3*3网格</span><br><span class="line">f.setSize(300,300);//设置窗体大小</span><br><span class="line">f.setLocation(900,300);</span><br><span class="line">//循环添加9个按钮到GridLayout中</span><br><span class="line">for(int i=1;i&lt;=9;i++)&#123;</span><br><span class="line">Button btn=new Button(&quot;btn&quot;+i);</span><br><span class="line">f.add(btn);//向窗体中添加按钮</span><br><span class="line">&#125;</span><br><span class="line">f.setVisible(true);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-GridBagLayout示例："><a href="#4-GridBagLayout示例：" class="headerlink" title="4.GridBagLayout示例："></a>4.GridBagLayout示例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">import java.awt.*;</span><br><span class="line">//网格包布局管理器</span><br><span class="line">class Layout extends Frame&#123;</span><br><span class="line">public Layout(String title)&#123;</span><br><span class="line">GridBagLayout layout=new GridBagLayout();</span><br><span class="line">GridBagConstraints c=new GridBagConstraints();//约束对象</span><br><span class="line">this.setLayout(layout);//设置布局管理器</span><br><span class="line">c.fill=GridBagConstraints.BOTH;//设置组件横向纵向可以拉伸</span><br><span class="line">c.weightx=1;//设置横向权重为1</span><br><span class="line">c.weighty=1;//设置纵向权重为1</span><br><span class="line">//增加组件</span><br><span class="line">this.addComponent(&quot;btn1&quot;,layout,c);</span><br><span class="line">this.addComponent(&quot;btn2&quot;,layout,c);</span><br><span class="line">this.addComponent(&quot;btn3&quot;,layout,c);</span><br><span class="line">c.gridwidth=GridBagConstraints.REMAINDER;//添加的组件是本行最后一个组件</span><br><span class="line">this.addComponent(&quot;btn4&quot;,layout,c);</span><br><span class="line"></span><br><span class="line">c.weightx=0;//设置横向权重为0</span><br><span class="line">c.weighty=0;//设置纵向权重为0</span><br><span class="line">this.addComponent(&quot;btn5&quot;, layout, c);</span><br><span class="line"></span><br><span class="line">c.gridwidth=1;//设置组件第一个网络（默认值）</span><br><span class="line">this.addComponent(&quot;btn6&quot;, layout, c);</span><br><span class="line"></span><br><span class="line">c.gridwidth=GridBagConstraints.REMAINDER;//添加的组件是本行最后一个组件</span><br><span class="line">this.addComponent(&quot;btn7&quot;, layout, c);</span><br><span class="line"></span><br><span class="line">c.gridheight=2;//设置组件跨俩个网格</span><br><span class="line">c.gridwidth=1;//设置组件跨一个网格（默认值）</span><br><span class="line">c.weightx=1;//设置横向权重为2</span><br><span class="line">c.weighty=1;//设置纵向权重为2</span><br><span class="line">this.addComponent(&quot;btn8&quot;, layout, c);</span><br><span class="line"></span><br><span class="line">c.gridwidth=GridBagConstraints.REMAINDER;//添加的组件是本行最后一个组件</span><br><span class="line">c.gridheight=1;//设置组件跨一个网格（默认值）</span><br><span class="line">this.addComponent(&quot;btn9&quot;, layout, c);</span><br><span class="line">this.addComponent(&quot;btn10&quot;, layout, c);</span><br><span class="line"></span><br><span class="line">this.setTitle(title);</span><br><span class="line">this.pack();//设置自动窗体大小</span><br><span class="line">this.setVisible(true);</span><br><span class="line">&#125;</span><br><span class="line">//</span><br><span class="line">public void addComponent(String name,GridBagLayout layout,GridBagConstraints c)&#123;</span><br><span class="line">Button bt =new Button(name);//创建一个名为name的按钮</span><br><span class="line">layout.setConstraints(bt, c);//设置约束对象和按钮的关联</span><br><span class="line">this.add(bt);//添加按钮</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">public class Frame_GridBagLayout &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">new Layout(&quot;GridBagLayout&quot;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-CardLayout示例："><a href="#5-CardLayout示例：" class="headerlink" title="5.CardLayout示例："></a>5.CardLayout示例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">import java.awt.*;</span><br><span class="line">import java.awt.event.ActionEvent;</span><br><span class="line">import java.awt.event.ActionListener;</span><br><span class="line">import java.awt.event.WindowAdapter;</span><br><span class="line">import java.awt.event.WindowEvent;</span><br><span class="line"></span><br><span class="line">public class Frame_CardLayout extends Frame implements ActionListener&#123;</span><br><span class="line">CardLayout cardLayout =new CardLayout();//定义卡片布局管理器</span><br><span class="line">Panel cardPanel = new Panel();//定义面板放置卡片</span><br><span class="line">Panel controlPanel =new Panel();//定义面板放置按钮</span><br><span class="line">Button preButton;//声明切换到上一张卡片的按钮</span><br><span class="line">Button nextButton;//声明切换到下一张卡片的按钮</span><br><span class="line"></span><br><span class="line">public Frame_CardLayout()&#123;</span><br><span class="line">this.setSize(300,200);//设置窗体大小</span><br><span class="line">cardPanel.setLayout(cardLayout);//设置放置卡片的面板布局为卡片布局管理器</span><br><span class="line">//在cardPanel中添加3个文本标签</span><br><span class="line">cardPanel.add(new Label(&quot;第一个界面&quot;,Label.CENTER));</span><br><span class="line">cardPanel.add(new Label(&quot;第二个界面&quot;,Label.CENTER));</span><br><span class="line">cardPanel.add(new Label(&quot;第三个界面&quot;,Label.CENTER));</span><br><span class="line"></span><br><span class="line">//创建两个按钮</span><br><span class="line">nextButton = new Button(&quot;下一张卡片&quot;);</span><br><span class="line">preButton = new Button(&quot;下一张卡片&quot;);</span><br><span class="line">//将按钮添加到controlPanel面板中，panel默认为流式布局</span><br><span class="line">controlPanel.add(preButton);</span><br><span class="line">controlPanel.add(nextButton);</span><br><span class="line">//把面板添加到窗体中，窗体为默认边界布局</span><br><span class="line">this.add(cardPanel,BorderLayout.CENTER);</span><br><span class="line">this.add(controlPanel,BorderLayout.SOUTH);</span><br><span class="line"></span><br><span class="line">//为按钮添加事件监听器</span><br><span class="line">nextButton.addActionListener(this);</span><br><span class="line">preButton.addActionListener(this);</span><br><span class="line">//为窗口添加关闭事件监听器</span><br><span class="line">this.addWindowListener(new WindowAdapter()&#123;</span><br><span class="line">public void windowClosing(WindowEvent e)&#123;</span><br><span class="line">Frame_CardLayout.this.dispose();</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">this.setVisible(true);//设置窗体显示</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//实现按钮监听触发，并对触发事件作为相应的处理</span><br><span class="line">public void actionPerformed(ActionEvent e)&#123;</span><br><span class="line">//如果用户点击nextButton执行操作</span><br><span class="line">if(e.getSource()==nextButton)&#123;</span><br><span class="line">//切换cardPanel面板当前的卡片向后切换一张</span><br><span class="line">cardLayout.next(cardPanel);</span><br><span class="line">&#125;</span><br><span class="line">if(e.getSource()==preButton)&#123;</span><br><span class="line">//切换cardPanel面板当前的卡片向前切换一张</span><br><span class="line">cardLayout.previous(cardPanel);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">Frame_CardLayout layout = new Frame_CardLayout();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-空布局管理器："><a href="#6-空布局管理器：" class="headerlink" title="6.空布局管理器："></a>6.空布局管理器：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">import java.awt.Button;</span><br><span class="line">import java.awt.Frame;</span><br><span class="line"></span><br><span class="line">public class Not_Layout &#123;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">Frame f =new Frame(&quot;不使用布局管理器&quot;);</span><br><span class="line">f.setLayout(null);//取消布局管理器</span><br><span class="line">f.setSize(300,150);</span><br><span class="line">Button btn1 =new Button(&quot;press&quot;);</span><br><span class="line">Button btn2 =new Button(&quot;pop&quot;);</span><br><span class="line">//设置按钮显示的位置与大小</span><br><span class="line">btnsetBounds(50,50,100,30);</span><br><span class="line">btnsetBounds(140,90,100,30);</span><br><span class="line">//添加按钮到窗口</span><br><span class="line">f.add(btn1);</span><br><span class="line">f.add(btn2);</span><br><span class="line">//显示窗口</span><br><span class="line">f.setVisible(true);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-事件处理机制："><a href="#7-事件处理机制：" class="headerlink" title="7.事件处理机制："></a>7.事件处理机制：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">import java.awt.Frame;</span><br><span class="line">import java.awt.Window;</span><br><span class="line">import java.awt.event.WindowEvent;</span><br><span class="line">import java.awt.event.WindowListener;</span><br><span class="line"></span><br><span class="line">public class Frame_Listener1 &#123;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">Frame f =new Frame(&quot;我的窗口&quot;);</span><br><span class="line">f.setSize(400,300);//设置窗口大小</span><br><span class="line">f.setLocation(300,200);//设置窗口显示位置</span><br><span class="line">f.setVisible(true);//设置窗口显示</span><br><span class="line">//为窗口组件注册监听器</span><br><span class="line">f.addWindowListener(new MyWindowListener());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">//创建MyWindowListenter类实现WindowListener接口</span><br><span class="line">class MyWindowListener implements WindowListener&#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void windowActivated(WindowEvent arg0) &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void windowClosed(WindowEvent arg0) &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void windowClosing(WindowEvent e) &#123;</span><br><span class="line">// 监听器监听事件对象做出处理</span><br><span class="line">Window window = e.getWindow();</span><br><span class="line">window.setVisible(false);</span><br><span class="line">//释放窗口</span><br><span class="line">window.dispose();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void windowDeactivated(WindowEvent arg0) &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void windowDeiconified(WindowEvent arg0) &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void windowIconified(WindowEvent arg0) &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void windowOpened(WindowEvent arg0) &#123;</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-事件适配器示例："><a href="#8-事件适配器示例：" class="headerlink" title="8.事件适配器示例："></a>8.事件适配器示例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">import java.awt.*;</span><br><span class="line">import java.awt.event.WindowAdapter;</span><br><span class="line">import java.awt.event.WindowEvent;</span><br><span class="line">public class Frame_Listener2 &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">//创建窗体</span><br><span class="line">Frame f = new Frame(&quot;我的窗体&quot;);</span><br><span class="line">f.setSize(400,300);//设置窗口大小</span><br><span class="line">f.setLocation(300,200);//设置窗口显示位置</span><br><span class="line">f.setVisible(true);//设置窗口显示</span><br><span class="line">//为窗口组件注册监听器</span><br><span class="line">f.addWindowListener(new MyWindowListener());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">//继承windowAdapter类，重写windowCosing()方法</span><br><span class="line">class MyWindowLinstener extends WindowAdapter&#123;</span><br><span class="line">public void windowClosing(WindowEvent e)&#123;</span><br><span class="line">Window window=(Window)e.getComponent();</span><br><span class="line">window.dispose();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-匿名内部类实现事件处理示例："><a href="#9-匿名内部类实现事件处理示例：" class="headerlink" title="9.匿名内部类实现事件处理示例："></a>9.匿名内部类实现事件处理示例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">import java.awt.Button;</span><br><span class="line">import java.awt.Frame;</span><br><span class="line">import java.awt.event.MouseAdapter;</span><br><span class="line">import java.awt.event.MouseEvent;</span><br><span class="line"></span><br><span class="line">public class 匿名内部类实现事件处理 &#123;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">Frame f = new Frame(&quot;我的窗体&quot;);</span><br><span class="line">f.setSize(400,300);</span><br><span class="line">f.setLocation(300, 200);</span><br><span class="line">f.setVisible(true);</span><br><span class="line">Button btn = new Button(&quot;EXIT&quot;);</span><br><span class="line">f.add(btn);</span><br><span class="line"></span><br><span class="line">//用内部类的方式为按钮注册监听器</span><br><span class="line">btn.addMouseListener(new MouseAdapter()&#123;</span><br><span class="line">@Override</span><br><span class="line">public void mouseClicked(MouseEvent e) &#123;</span><br><span class="line">System.exit(0);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10-键盘事件示例："><a href="#10-键盘事件示例：" class="headerlink" title="10.键盘事件示例："></a>10.键盘事件示例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">import java.awt.FlowLayout;</span><br><span class="line">import java.awt.Frame;</span><br><span class="line">import java.awt.TextField;</span><br><span class="line">import java.awt.event.KeyAdapter;</span><br><span class="line">import java.awt.event.KeyEvent;</span><br><span class="line"></span><br><span class="line">public class keyEvent &#123;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">Frame f = new Frame(&quot;KeyEvent&quot;);</span><br><span class="line">f.setLayout(new FlowLayout());</span><br><span class="line">f.setSize(900,900);</span><br><span class="line">f.setLocation(300, 200);</span><br><span class="line">f.setVisible(true);</span><br><span class="line"></span><br><span class="line">TextField tf = new TextField(30);//创建文本对象</span><br><span class="line">f.add(tf);</span><br><span class="line">tf.addKeyListener(new KeyAdapter()&#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void keyPressed(KeyEvent e) &#123;</span><br><span class="line"></span><br><span class="line">int keyCode=e.getKeyCode();//返回所按对应的整数值</span><br><span class="line">String s =KeyEvent.getKeyText(keyCode);//返回按键的字符串概述</span><br><span class="line">System.out.println(&quot;输入的内容为：&quot;+s+&quot;,&quot;);</span><br><span class="line">System.out.println(&quot;对应的值:&quot;+keyCode);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="11-窗体事件示例："><a href="#11-窗体事件示例：" class="headerlink" title="11.窗体事件示例："></a>11.窗体事件示例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">import java.awt.Frame;</span><br><span class="line">import java.awt.event.WindowEvent;</span><br><span class="line">import java.awt.event.WindowListener;</span><br><span class="line"></span><br><span class="line">public class ListennerEvent1 &#123;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">Frame f = new Frame(&quot;WindowEvent&quot;);</span><br><span class="line">f.setSize(400,300);</span><br><span class="line">f.setLocation(300,200);</span><br><span class="line">f.setVisible(true);</span><br><span class="line"></span><br><span class="line">f.addWindowListener(new WindowListener()&#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void windowActivated(WindowEvent arg0) &#123;</span><br><span class="line">System.out.println(&quot;windowActivated---窗体激活事件&quot;);</span><br><span class="line">&#125;</span><br><span class="line">@Override</span><br><span class="line">public void windowClosed(WindowEvent arg0) &#123;</span><br><span class="line">System.out.println(&quot;windowClosed---窗体关闭事件&quot;);</span><br><span class="line">&#125;</span><br><span class="line">@Override</span><br><span class="line">public void windowClosing(WindowEvent arg0) &#123;</span><br><span class="line">System.out.println(&quot;windowClosing---窗体正在关闭事件&quot;);</span><br><span class="line">&#125;</span><br><span class="line">@Override</span><br><span class="line">public void windowDeactivated(WindowEvent arg0) &#123;</span><br><span class="line">System.out.println(&quot;windowDeactivated---窗体停用事件&quot;);</span><br><span class="line">&#125;</span><br><span class="line">@Override</span><br><span class="line">public void windowDeiconified(WindowEvent arg0) &#123;</span><br><span class="line">System.out.println(&quot;windowDeiconified---窗体取消图标化事件&quot;);</span><br><span class="line">&#125;</span><br><span class="line">@Override</span><br><span class="line">public void windowIconified(WindowEvent arg0) &#123;</span><br><span class="line">System.out.println(&quot;windowIconified---窗体图标化事件&quot;);</span><br><span class="line">&#125;</span><br><span class="line">@Override</span><br><span class="line">public void windowOpened(WindowEvent e) &#123;</span><br><span class="line">System.out.print(&quot;windowOpened---窗体打开事件&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="12-鼠标事件示例："><a href="#12-鼠标事件示例：" class="headerlink" title="12.鼠标事件示例："></a>12.鼠标事件示例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">import java.awt.Button;</span><br><span class="line">import java.awt.FlowLayout;</span><br><span class="line">import java.awt.Frame;</span><br><span class="line">import java.awt.event.MouseEvent;</span><br><span class="line">import java.awt.event.MouseListener;</span><br><span class="line"></span><br><span class="line">public class MouseEvent1 &#123;</span><br><span class="line"></span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">Frame f = new Frame(&quot;MouseEvent&quot;);</span><br><span class="line">//为窗口设置布局</span><br><span class="line">f.setLayout(new FlowLayout());</span><br><span class="line">f.setSize(300,200);</span><br><span class="line">f.setLocation(300,200);</span><br><span class="line">f.setVisible(true);</span><br><span class="line"></span><br><span class="line">Button but = new Button(&quot;but&quot;);</span><br><span class="line">f.add(but);</span><br><span class="line">but.addMouseListener(new MouseListener()&#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void mouseClicked(MouseEvent arg0) &#123;</span><br><span class="line">System.out.println(&quot;mouseClicked--鼠标完成点击事件&quot;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void mouseEntered(MouseEvent arg0) &#123;</span><br><span class="line">System.out.println(&quot;mouseEntered--鼠标进入按钮区域事件&quot;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void mouseExited(MouseEvent arg0) &#123;</span><br><span class="line">System.out.println(&quot;mouseExited--鼠标移出按钮区域事件&quot;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void mousePressed(MouseEvent arg0) &#123;</span><br><span class="line">System.out.println(&quot;mouseClicked--鼠标按下事件&quot;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void mouseReleased(MouseEvent arg0) &#123;</span><br><span class="line">System.out.println(&quot;mouseReleased--鼠标放开事件&quot;);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="13-Jtable组件示例："><a href="#13-Jtable组件示例：" class="headerlink" title="13.Jtable组件示例："></a>13.Jtable组件示例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">import javax.swing.JFrame;</span><br><span class="line">import javax.swing.JScrollPane;</span><br><span class="line">import javax.swing.JTable;</span><br><span class="line"></span><br><span class="line">public class Jtable1 extends JFrame&#123;</span><br><span class="line">public Jtable1()&#123;</span><br><span class="line">init();//使用JTable对象创建表格</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//使用JTable对象创建表格</span><br><span class="line">public void init()&#123;</span><br><span class="line">//定义一维数组作为列标题</span><br><span class="line">Object[] columnNames=&#123;&quot;姓名&quot;,&quot;年龄&quot;,&quot;性别&quot;&#125;;</span><br><span class="line">//定义二维数组作为表格行对象数据</span><br><span class="line">Object[][]rowData=&#123;</span><br><span class="line">new Object[]&#123;&quot;李清照&quot;,&quot;29&quot;,&quot;女&quot;&#125;,</span><br><span class="line">new Object[]&#123;&quot;苏格拉底&quot;,&quot;56&quot;,&quot;男&quot;&#125;,</span><br><span class="line">new Object[]&#123;&quot;胡适&quot;,&quot;26&quot;,&quot;男&quot;&#125;,</span><br><span class="line">new Object[]&#123;&quot;虎头&quot;,&quot;3&quot;,&quot;男&quot;&#125;,</span><br><span class="line">&#125;;</span><br><span class="line">//创建一个表格</span><br><span class="line">JTable table = new JTable(rowData,columnNames);</span><br><span class="line">//添加表格组件到窗体中</span><br><span class="line">JScrollPane pane = new JScrollPane();</span><br><span class="line">pane.setViewportView(table);</span><br><span class="line">this.add(pane);</span><br><span class="line">//this.add(new JScrollPane(table));</span><br><span class="line">//设置自适应JFrame窗体大小</span><br><span class="line">this.pack();</span><br><span class="line">this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">this.setVisible(true);</span><br><span class="line">&#125;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">new Jtable1();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="14-JCheckBox示例："><a href="#14-JCheckBox示例：" class="headerlink" title="14.JCheckBox示例："></a>14.JCheckBox示例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">import java.awt.BorderLayout;</span><br><span class="line">import java.awt.Font;</span><br><span class="line">import java.awt.event.ActionEvent;</span><br><span class="line">import java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line">import javax.swing.JCheckBox;</span><br><span class="line">import javax.swing.JFrame;</span><br><span class="line">import javax.swing.JLabel;</span><br><span class="line">import javax.swing.JPanel;</span><br><span class="line"></span><br><span class="line">public class JCheckBox1 extends JFrame&#123;</span><br><span class="line">public JCheckBox1()&#123;</span><br><span class="line">//创建一个标签，标签文本居中对齐</span><br><span class="line">JLabel label = new JLabel(&quot;TT欢迎你！&quot;,JLabel.CENTER);</span><br><span class="line">label.setFont(new Font(&quot;宋体&quot;,Font.PLAIN,20));//设置标签文本的字体</span><br><span class="line">this.add(label);//把标签添加到窗体中显示</span><br><span class="line"></span><br><span class="line">//下面的</span><br><span class="line">JCheckBox italic = new JCheckBox(&quot;italic&quot;);//倾斜</span><br><span class="line">JCheckBox bold = new JCheckBox(&quot;BOLD&quot;);//加粗</span><br><span class="line">JPanel panel = new JPanel();//创建一个面板</span><br><span class="line">//添加复选框按钮到面板中</span><br><span class="line">panel.add(italic);</span><br><span class="line">panel.add(bold);</span><br><span class="line">this.add(panel,BorderLayout.SOUTH);//</span><br><span class="line"></span><br><span class="line">//为复选框定义ActionListener监听器</span><br><span class="line">ActionListener listener = new ActionListener()&#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void actionPerformed(ActionEvent arg0) &#123;</span><br><span class="line">int mode = Font.PLAIN;//字体默认样式</span><br><span class="line">if(italic.isSelected())&#123;</span><br><span class="line">//选中了倾斜复选框</span><br><span class="line">mode+=Font.ITALIC;</span><br><span class="line">&#125;</span><br><span class="line">if(bold.isSelected())&#123;</span><br><span class="line">//选中了加粗复选框</span><br><span class="line">mode+=Font.BOLD;</span><br><span class="line">&#125;</span><br><span class="line">//设置标签文字的样式</span><br><span class="line">label.setFont(new Font(&quot;宋体&quot;,mode,20));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line">//为两个复选框添加监听器</span><br><span class="line">italic.addActionListener(listener);</span><br><span class="line">bold.addActionListener(listener);</span><br><span class="line">this.setSize(300,300);</span><br><span class="line">this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">this.setVisible(true);</span><br><span class="line">&#125;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">new JCheckBox1();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="15-JComboBox示例："><a href="#15-JComboBox示例：" class="headerlink" title="15.JComboBox示例："></a>15.JComboBox示例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">import java.awt.event.ActionEvent;</span><br><span class="line">import java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line">import javax.swing.JComboBox;</span><br><span class="line">import javax.swing.JFrame;</span><br><span class="line">import javax.swing.JPanel;</span><br><span class="line">import javax.swing.JTextField;</span><br><span class="line"></span><br><span class="line">public class JComboBox1 extends JFrame&#123;</span><br><span class="line">public JComboBox1()&#123;</span><br><span class="line">//创建JPanel面板</span><br><span class="line">JPanel panel = new JPanel();</span><br><span class="line">//创建一个下拉列表</span><br><span class="line">JComboBox&lt;StringcomboBox = new JComboBox&lt;String();</span><br><span class="line">//为下拉列表添加选项</span><br><span class="line">comboBox.addItem(&quot;请选择城市&quot;);</span><br><span class="line">comboBox.addItem(&quot;北京&quot;);</span><br><span class="line">comboBox.addItem(&quot;天津&quot;);</span><br><span class="line">comboBox.addItem(&quot;南京&quot;);</span><br><span class="line">comboBox.addItem(&quot;上海&quot;);</span><br><span class="line">comboBox.addItem(&quot;重庆&quot;);</span><br><span class="line">//创建一个文本框</span><br><span class="line">JTextField field = new JTextField(20);</span><br><span class="line">//添加组件到面板中</span><br><span class="line">panel.add(comboBox);</span><br><span class="line">panel.add(field);</span><br><span class="line">//把面板添加到窗体上</span><br><span class="line">this.add(panel);</span><br><span class="line"></span><br><span class="line">this.setSize(350,100);</span><br><span class="line">this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">this.setVisible(true);</span><br><span class="line"></span><br><span class="line">//为下拉列表添加事件监听器</span><br><span class="line">comboBox.addActionListener(new ActionListener()&#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void actionPerformed(ActionEvent e) &#123;</span><br><span class="line">String item =(String)comboBox.getSelectedItem();</span><br><span class="line">if(&quot;请选择城市&quot;.equals(item))&#123;</span><br><span class="line">field.setText(&quot;&quot;);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">field.setText(&quot;您选择的城市是：&quot;+item);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">new JComboBox1();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="16-JDialog示例："><a href="#16-JDialog示例：" class="headerlink" title="16.JDialog示例："></a>16.JDialog示例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">import java.awt.FlowLayout;</span><br><span class="line">import java.awt.Label;</span><br><span class="line">import java.awt.event.ActionEvent;</span><br><span class="line">import java.awt.event.ActionListener;</span><br><span class="line">import javax.swing.JButton;</span><br><span class="line">import javax.swing.JDialog;</span><br><span class="line">import javax.swing.JFrame;</span><br><span class="line">public class JDialog1 &#123;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">//1创建两个按钮</span><br><span class="line">JButton btn1 = new JButton(&quot;模式对话框&quot;);</span><br><span class="line">JButton btn2 = new JButton(&quot;非模式对话框&quot;);</span><br><span class="line">JFrame f =new JFrame(&quot;DialogDemo&quot;);</span><br><span class="line">f.setSize(300,300);</span><br><span class="line">f.setLocation(300,200);</span><br><span class="line">f.setLayout(new FlowLayout());</span><br><span class="line">f.add(btn2);</span><br><span class="line">f.add(btn1);</span><br><span class="line">//设置点击关闭按钮的模式关闭窗口操作</span><br><span class="line">f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">f.setVisible(true);</span><br><span class="line">//创建JDialog</span><br><span class="line">final JDialog dialog = new JDialog(f,&quot;Dialog&quot;);</span><br><span class="line">dialog.setSize(300,300);</span><br><span class="line">dialog.setLocation(350,350);</span><br><span class="line">dialog.setLayout(new FlowLayout());</span><br><span class="line">JButton btn3 = new JButton(&quot;确定&quot;);//在对话框中创建一个按钮</span><br><span class="line">dialog.add(btn3);</span><br><span class="line">Label label = new Label(&quot;标签&quot;);//在对话框中创建一个标签</span><br><span class="line">dialog.add(label);</span><br><span class="line">//为“模式对话框”按钮添加点击事件</span><br><span class="line">btnaddActionListener(new ActionListener()&#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void actionPerformed(ActionEvent e) &#123;</span><br><span class="line">//设置对话框的状态为模式对话框</span><br><span class="line">dialog.setModal(true);</span><br><span class="line">//修改标签的内容</span><br><span class="line">label.setText(&quot;模式对话框，点击确定按钮关闭&quot;);</span><br><span class="line">//显示对话框</span><br><span class="line">dialog.setVisible(true);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">//为“非模式对话框”按钮添加点击事件</span><br><span class="line">btnaddActionListener(new ActionListener()&#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void actionPerformed(ActionEvent e) &#123;</span><br><span class="line">//设置对话框的状态为模式对话框</span><br><span class="line">dialog.setModal(false);</span><br><span class="line">//修改标签的内容</span><br><span class="line">label.setText(&quot;非模式对话框，点击确定按钮关闭&quot;);</span><br><span class="line">//显示对话框</span><br><span class="line">dialog.setVisible(true);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">//为对话框中按钮添加点击事件</span><br><span class="line">btnaddActionListener(new ActionListener()&#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void actionPerformed(ActionEvent e) &#123;</span><br><span class="line">dialog.dispose();//关闭</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="17-JMenuBar示例："><a href="#17-JMenuBar示例：" class="headerlink" title="17.JMenuBar示例："></a>17.JMenuBar示例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">import java.awt.event.ActionEvent;</span><br><span class="line">import java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line">import javax.swing.JDialog;</span><br><span class="line">import javax.swing.JFrame;</span><br><span class="line">import javax.swing.JMenu;</span><br><span class="line">import javax.swing.JMenuBar;</span><br><span class="line">import javax.swing.JMenuItem;</span><br><span class="line"></span><br><span class="line">public class JMenuBar1 extends JFrame&#123;</span><br><span class="line">public JMenuBar1()&#123;</span><br><span class="line">JMenuBar menuBar = new JMenuBar();//创建菜单栏</span><br><span class="line">JMenu menu = new JMenu(&quot;操作&quot;);//创建菜单</span><br><span class="line">JMenuItem item1 = new JMenuItem(&quot;弹出窗口&quot;);//创建两个菜单项</span><br><span class="line">JMenuItem item2 = new JMenuItem(&quot;关闭&quot;);</span><br><span class="line">//组建下拉式菜单</span><br><span class="line">menu.add(item1);</span><br><span class="line">menu.addSeparator();//添加分隔符</span><br><span class="line">menu.add(item2);</span><br><span class="line">menuBar.add(menu);//菜单添加到菜单栏</span><br><span class="line">this.setJMenuBar(menuBar);//菜单栏添加到窗体</span><br><span class="line"></span><br><span class="line">this.setSize(500,500);</span><br><span class="line">this.setVisible(true);</span><br><span class="line"></span><br><span class="line">//为菜单项添加事件监听器</span><br><span class="line">itemaddActionListener(new ActionListener()&#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void actionPerformed(ActionEvent arg0) &#123;</span><br><span class="line">JDialog dialog = new JDialog(JMenuBarthis,true);</span><br><span class="line">dialog.setTitle(&quot;弹出对话框&quot;);</span><br><span class="line">dialog.setSize(200,200);</span><br><span class="line">dialog.setVisible(true);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">itemaddActionListener(new ActionListener()&#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void actionPerformed(ActionEvent arg0) &#123;</span><br><span class="line">System.exit(0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">new JMenuBar1();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="18-JPopupMenu示例："><a href="#18-JPopupMenu示例：" class="headerlink" title="18.JPopupMenu示例："></a>18.JPopupMenu示例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">import java.awt.event.*;</span><br><span class="line">import javax.swing.*;</span><br><span class="line">//右键弹出式菜单</span><br><span class="line">public class JPopupMenu1 extends JFrame&#123;</span><br><span class="line">public JPopupMenu1()&#123;</span><br><span class="line">//创建一个JPopupMenu菜单</span><br><span class="line">JPopupMenu popupMenu = new JPopupMenu();</span><br><span class="line">//创建三个菜单项</span><br><span class="line">JMenuItem refreshItem = new JMenuItem(&quot;refresh&quot;);//刷新</span><br><span class="line">JMenuItem createItem = new JMenuItem(&quot;create&quot;);//新建</span><br><span class="line">JMenuItem exitItem = new JMenuItem(&quot;exit&quot;);//退出</span><br><span class="line">//把菜单项添加到菜单中</span><br><span class="line">popupMenu.add(refreshItem);</span><br><span class="line">popupMenu.add(createItem);</span><br><span class="line">popupMenu.addSeparator();//添加菜单项的分隔符</span><br><span class="line">popupMenu.add(exitItem);</span><br><span class="line"></span><br><span class="line">//为JFrame添加鼠标clicked的事件监听器</span><br><span class="line">this.addMouseListener(new MouseAdapter()&#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void mouseClicked(MouseEvent e) &#123;</span><br><span class="line">//如果点击的是鼠标的右键，显示弹出式菜单</span><br><span class="line">if(e.getButton()==e.BUTTON3)&#123;</span><br><span class="line">popupMenu.show(e.getComponent(),e.getX(),e.getY());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">//为菜单项添加事件监听器</span><br><span class="line">exitItem.addActionListener(new ActionListener()&#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void actionPerformed(ActionEvent arg0) &#123;</span><br><span class="line">System.exit(0);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">this.setSize(500,500);</span><br><span class="line">this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">this.setVisible(true);</span><br><span class="line">&#125;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">new JPopupMenu1();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="19-JRadioButton示例："><a href="#19-JRadioButton示例：" class="headerlink" title="19.JRadioButton示例："></a>19.JRadioButton示例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">import java.awt.BorderLayout;</span><br><span class="line">import java.awt.Color;</span><br><span class="line">import java.awt.event.ActionEvent;</span><br><span class="line">import java.awt.event.ActionListener;</span><br><span class="line">import javax.swing.ButtonGroup;</span><br><span class="line">import javax.swing.JFrame;</span><br><span class="line">import javax.swing.JPanel;</span><br><span class="line">import javax.swing.JRadioButton;</span><br><span class="line">public class JRadioButton1 extends JFrame&#123;</span><br><span class="line">public JRadioButton1()&#123;</span><br><span class="line">JPanel pallet = new JPanel();//创建一个调色板</span><br><span class="line">this.add(pallet,BorderLayout.CENTER);//将调色板添加到窗体的中间位置</span><br><span class="line"></span><br><span class="line">ButtonGroup group = new ButtonGroup();//单选按钮组对象</span><br><span class="line">final JRadioButton btn1 = new JRadioButton(&quot;灰&quot;);</span><br><span class="line">final JRadioButton btn2 = new JRadioButton(&quot;粉&quot;);</span><br><span class="line">final JRadioButton btn3 = new JRadioButton(&quot;黄&quot;);</span><br><span class="line">//添加按钮到按钮组中</span><br><span class="line">group.add(btn1);</span><br><span class="line">group.add(btn2);</span><br><span class="line">group.add(btn3);</span><br><span class="line">JPanel panel = new JPanel();//创建一个面板</span><br><span class="line">panel.add(btn1);//添加三个单选框按钮到面板</span><br><span class="line">panel.add(btn2);</span><br><span class="line">panel.add(btn3);</span><br><span class="line">//添加面板到窗体的下方</span><br><span class="line">this.add(panel,BorderLayout.SOUTH);</span><br><span class="line"></span><br><span class="line">//创建单选框的ActionListener监听器</span><br><span class="line">ActionListener Listener = new ActionListener()&#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void actionPerformed(ActionEvent arg0) &#123;</span><br><span class="line">Color color = null;</span><br><span class="line">if(btnisSelected())&#123;</span><br><span class="line">color=Color.GRAY;</span><br><span class="line">&#125;else if(btnisSelected())&#123;</span><br><span class="line">color=Color.PINK;</span><br><span class="line">&#125;else if(btnisSelected())&#123;</span><br><span class="line">color=Color.YELLOW;</span><br><span class="line">&#125;</span><br><span class="line">//为调色板设置背景颜色</span><br><span class="line">pallet.setBackground(color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line">//为单选框添加监听器</span><br><span class="line">btnaddActionListener(Listener);</span><br><span class="line">btnaddActionListener(Listener);</span><br><span class="line">btnaddActionListener(Listener);</span><br><span class="line"></span><br><span class="line">this.setSize(300,300);</span><br><span class="line">this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">this.setVisible(true);</span><br><span class="line">&#125;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">new JRadioButton1();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="20-中间容器示例："><a href="#20-中间容器示例：" class="headerlink" title="20.中间容器示例："></a>20.中间容器示例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">import javax.swing.JButton;</span><br><span class="line">import javax.swing.JFrame;</span><br><span class="line">import javax.swing.JPanel;</span><br><span class="line">import javax.swing.JScrollPane;</span><br><span class="line">import javax.swing.ScrollPaneConstants;</span><br><span class="line"></span><br><span class="line">//中间容器添加按钮</span><br><span class="line">public class 中间容器1 extends JFrame&#123;</span><br><span class="line">public 中间容器1()&#123;</span><br><span class="line">this.setTitle(&quot;PanelDemo&quot;);</span><br><span class="line"></span><br><span class="line">//定义一个JPanel面板</span><br><span class="line">JPanel panel = new JPanel();</span><br><span class="line">//在panel面板中添加四个按钮</span><br><span class="line">panel.add(new JButton(&quot;按钮1&quot;));</span><br><span class="line">panel.add(new JButton(&quot;按钮2&quot;));</span><br><span class="line">panel.add(new JButton(&quot;按钮3&quot;));</span><br><span class="line">panel.add(new JButton(&quot;按钮4&quot;));</span><br><span class="line"></span><br><span class="line">//创建一个滚动面板</span><br><span class="line">JScrollPane scrollPane = new JScrollPane();</span><br><span class="line">//设置水平滚动条一直显示</span><br><span class="line">scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);</span><br><span class="line">//设置垂直滚动条需要时显示</span><br><span class="line">scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);</span><br><span class="line"></span><br><span class="line">//设置panel面板在滚动面板中显示</span><br><span class="line">scrollPane.setViewportView(panel);</span><br><span class="line">//将面板scrollPane添加到窗体中</span><br><span class="line">this.add(scrollPane);</span><br><span class="line"></span><br><span class="line">//在panel面板中添加到窗体中</span><br><span class="line">//this.add(panel);</span><br><span class="line">this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">this.setSize(400,250);</span><br><span class="line">this.setVisible(true);</span><br><span class="line">&#125;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">new 中间容器1();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="21-文本组件示例："><a href="#21-文本组件示例：" class="headerlink" title="21.文本组件示例："></a>21.文本组件示例：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">import java.awt.BorderLayout;</span><br><span class="line">import java.awt.Label;</span><br><span class="line">import java.awt.TextField;</span><br><span class="line">import java.awt.event.ActionEvent;</span><br><span class="line">import java.awt.event.ActionListener;</span><br><span class="line">import java.awt.event.KeyAdapter;</span><br><span class="line">import java.awt.event.KeyEvent;</span><br><span class="line">import java.awt.event.KeyListener;</span><br><span class="line"></span><br><span class="line">import javax.swing.JButton;</span><br><span class="line">//文本组件JTextField和JTextArea组件的使用</span><br><span class="line">import javax.swing.JFrame;</span><br><span class="line">import javax.swing.JPanel;</span><br><span class="line">import javax.swing.JScrollPane;</span><br><span class="line">import javax.swing.JTextArea;</span><br><span class="line">import javax.swing.JTextField;</span><br><span class="line">public class 文本组件1 extends JFrame&#123;</span><br><span class="line">public 文本组件1()&#123;</span><br><span class="line">this.setLayout(new BorderLayout());//设置窗口的布局</span><br><span class="line">this.setTitle(&quot;聊天窗口&quot;);//设置窗口标题</span><br><span class="line">this.setSize(400,300);//设置窗口大小</span><br><span class="line">this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">this.setDefaultLookAndFeelDecorated(true);</span><br><span class="line"></span><br><span class="line">JTextArea chatContent = new JTextArea(12,34);//创建一个文本域</span><br><span class="line">//创建一个滚动面板并把文本域添加到其中</span><br><span class="line">JScrollPane showPanel = new JScrollPane(chatContent);</span><br><span class="line">chatContent.setEditable(false);//设置文本域不可编辑</span><br><span class="line">//添加滚动面板到窗体上</span><br><span class="line">this.add(showPanel,BorderLayout.CENTER);</span><br><span class="line">//下面部分</span><br><span class="line">Label label = new Label(&quot;聊天信息&quot;);//创建一个标签</span><br><span class="line">JTextField inputField = new JTextField(20);//创建一个文本框</span><br><span class="line">JButton sendBt = new JButton(&quot;发送&quot;);//创建一个按钮</span><br><span class="line">JPanel inputPanel = new JPanel();//创建一个面板，用来存放下面的组件</span><br><span class="line">inputPanel.add(label); //添加组件到下面的面板中</span><br><span class="line">inputPanel.add(inputField);</span><br><span class="line">inputPanel.add(sendBt);</span><br><span class="line"></span><br><span class="line">//添加下面的面板到窗口中</span><br><span class="line">this.add(inputPanel,BorderLayout.SOUTH);</span><br><span class="line"></span><br><span class="line">//为按钮添加事件</span><br><span class="line">sendBt.addActionListener(new ActionListener()&#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void actionPerformed(ActionEvent e) &#123;</span><br><span class="line">String content=inputField.getText();//获取输入的文本框内容</span><br><span class="line">if(content!=null&amp;&amp;!content.trim().equals(&quot;&quot;))&#123;//内容不是空且//如果不为空，将输入的文本信息追加到</span><br><span class="line">chatContent.append(&quot;本人：&quot;+content+&quot;\\n&quot;);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">//如果为空，提示聊天信息不能为空</span><br><span class="line">chatContent.append(&quot;聊天内容不能为空&quot;+&quot;\\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line">inputField.setText(&quot;&quot;);//将输入框设置为空</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line">inputField.addKeyListener(new KeyAdapter()&#123;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public void keyPressed(KeyEvent e) &#123;</span><br><span class="line">if(e.getKeyCode()==e.VK_ENTER)&#123;//如果获取到的是回车键</span><br><span class="line">String content=inputField.getText();//获取输入的文本框内容</span><br><span class="line">if(content!=null&amp;&amp;!content.trim().equals(&quot;&quot;))&#123;//内容不是空且 </span><br><span class="line">                     //如果不为空，将输入的文本信息追加到</span><br><span class="line">chatContent.append(&quot;本人：&quot;+content+&quot;\\n&quot;);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">//如果为空，提示聊天信息不能为空</span><br><span class="line">chatContent.append(&quot;聊天内容不能为空&quot;+&quot;\\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line">inputField.setText(&quot;&quot;);//将输入框设置为空</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">this.setVisible(true);</span><br><span class="line">&#125;</span><br><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">new 文本组件1();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-优化程序与小项目"><a href="#8-优化程序与小项目" class="headerlink" title="8.优化程序与小项目"></a>8.优化程序与小项目</h2><p> 持续更新中…………..</p><hr><p> 注：</p><p> 本文参照过杨夏老师的《Java核心技术》课程、王敏老师的《JAVA高级开发》课程、《java基础案例教程》、江苏海洋大学java面向对象程序设计MOOC、《java核心技术》，对内容有任何问题的同学欢迎留言。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql常用代码段</title>
      <link href="/2020/03/24/%E6%A0%B9%E6%8D%AE%E4%B8%8D%E5%90%8C%E4%B8%AA%E6%97%B6%E9%97%B4%E5%8C%BA%E9%97%B4%E6%89%B9%E9%87%8F%E5%AF%B9%E5%85%B6%E4%BB%96%E5%AD%97%E6%AE%B5%E8%B5%8B%E5%80%BC/"/>
      <url>/2020/03/24/%E6%A0%B9%E6%8D%AE%E4%B8%8D%E5%90%8C%E4%B8%AA%E6%97%B6%E9%97%B4%E5%8C%BA%E9%97%B4%E6%89%B9%E9%87%8F%E5%AF%B9%E5%85%B6%E4%BB%96%E5%AD%97%E6%AE%B5%E8%B5%8B%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<h2 id="根据不同个时间区间批量对其他字段赋值"><a href="#根据不同个时间区间批量对其他字段赋值" class="headerlink" title="根据不同个时间区间批量对其他字段赋值"></a>根据不同个时间区间批量对其他字段赋值</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> 表</span><br><span class="line"><span class="keyword">SET</span> 要赋值的字段 <span class="operator">=</span> <span class="keyword">CASE</span> 时间字段 </span><br><span class="line"><span class="keyword">WHEN</span> 时间字段<span class="operator">&gt;=</span><span class="string">&#x27;2013-11&#x27;</span> <span class="keyword">and</span> 时间字段<span class="operator">&lt;=</span><span class="string">&#x27;2013-12&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;t1&#x27;</span> </span><br><span class="line"><span class="keyword">WHEN</span> 时间字段<span class="operator">&gt;=</span><span class="string">&#x27;2013-03&#x27;</span> <span class="keyword">and</span> 时间字段<span class="operator">&lt;=</span><span class="string">&#x27;2013-10&#x27;</span>  <span class="keyword">THEN</span> <span class="string">&#x27;t2&#x27;</span> </span><br><span class="line"><span class="keyword">END</span> ;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mySQL基础之多表操作</title>
      <link href="/2020/03/23/mySQL%E5%88%9D%E5%AD%A6%E8%80%85%E4%B8%80%E5%AE%9A%E8%A6%81%E6%8E%8C%E6%8F%A1%E7%9A%84%E6%95%B0%E6%8D%AE%E6%93%8D%E7%BA%B5/"/>
      <url>/2020/03/23/mySQL%E5%88%9D%E5%AD%A6%E8%80%85%E4%B8%80%E5%AE%9A%E8%A6%81%E6%8E%8C%E6%8F%A1%E7%9A%84%E6%95%B0%E6%8D%AE%E6%93%8D%E7%BA%B5/</url>
      
        <content type="html"><![CDATA[<blockquote><p><em>本文献给与作者一样不断地在追求梦想的小伙伴！</em></p></blockquote><p>@[TOC]</p><blockquote><p>INSERT插入数据 UPDATE更新数据 DELETE删除数据 SELECT查看数据<br>增删改查=CRUD=CREATE READ UPDATE DELETE</p><h1 id="1-INSERT-语句为表中所有字段添加数据"><a href="#1-INSERT-语句为表中所有字段添加数据" class="headerlink" title="1.INSERT 语句为表中所有字段添加数据"></a>1.INSERT 语句为表中所有字段添加数据</h1><h5 id="1-可以指定所有字段名添加数据"><a href="#1-可以指定所有字段名添加数据" class="headerlink" title="(1)可以指定所有字段名添加数据"></a>(1)可以指定所有字段名添加数据</h5><h5 id="2-可以不指定字段名添加数据"><a href="#2-可以不指定字段名添加数据" class="headerlink" title="(2)可以不指定字段名添加数据"></a>(2)可以不指定字段名添加数据</h5><h5 id="3-可以指定部分字段添加数据"><a href="#3-可以指定部分字段添加数据" class="headerlink" title="(3)可以指定部分字段添加数据"></a>(3)可以指定部分字段添加数据</h5></blockquote><h3 id="1-指定所有字段名添加数据"><a href="#1-指定所有字段名添加数据" class="headerlink" title="(1)指定所有字段名添加数据"></a>(1)指定所有字段名添加数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表名（字段名<span class="number">1</span>，字段名<span class="number">2</span>，...)</span><br><span class="line"><span class="keyword">VALUES</span>(值<span class="number">1</span>，值<span class="number">2</span>，....);</span><br></pre></td></tr></table></figure><blockquote><p>注意：<br>此处表名后必须列出表中所有字段的名称；<br>每次添加时字段名的顺序可以不一致;<br>“值 1，值 2，……”表示每个字段的值，每个值的顺序、类型必须与对应的字段相匹配。 </p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span>创建lesson001库，并在其中创建student表</span><br><span class="line"><span class="keyword">CREATE</span> DATABASE lesson001;</span><br><span class="line">USE lesson001;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student(</span><br><span class="line">id <span class="type">INT</span>(<span class="number">4</span>),</span><br><span class="line">name <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">grade <span class="type">FLOAT</span></span><br><span class="line">);</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>使用 <span class="keyword">INSERT</span> 语句向 student 表中插入一条数据</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student(id,name,grade)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">1</span>,<span class="string">&#x27;zhangsan&#x27;</span>,<span class="number">77.3</span>);</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>使用 <span class="keyword">INSERT</span> 语句向 student 表中插入多条数据</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student(name,id,grade)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">&#x27;lisi&#x27;</span>,<span class="number">2</span>,<span class="number">98</span>),(<span class="string">&#x27;cen&#x27;</span>,<span class="number">3</span>,<span class="number">99</span>),(<span class="string">&#x27;xintin&#x27;</span>,<span class="number">4</span>,<span class="number">98.9</span>);</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>使用 <span class="keyword">SELECT</span> 语句查看 student 表中的数据</span><br><span class="line"><span class="keyword">SELECT</span><span class="operator">*</span><span class="keyword">FROM</span> student;</span><br></pre></td></tr></table></figure><h3 id="2-不指定字段名添加数据"><a href="#2-不指定字段名添加数据" class="headerlink" title="(2)不指定字段名添加数据"></a>(2)不指定字段名添加数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表名 <span class="keyword">VALUES</span>(值 <span class="number">1</span>，值 <span class="number">2</span>，……); </span><br></pre></td></tr></table></figure><blockquote><p>注意：<br>由于 INSERT 语句中没有指定字段名，添加的值的顺序必须和字段在表中定义的顺序相同<br>其余注意事项参照第一种</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">5</span>,<span class="string">&#x27;mingming&#x27;</span>,<span class="number">87</span>);</span><br></pre></td></tr></table></figure><h3 id="（3）指定部分字段添加数据"><a href="#（3）指定部分字段添加数据" class="headerlink" title="（3）指定部分字段添加数据"></a>（3）指定部分字段添加数据</h3><blockquote><p>注意：<br>语法有两种一种与第一种类似，只是不需列出所有字段名<br>其余注意事项参照第一种</p><p><code>sql 语法二： INSERT INTO 表名 SET 字段名 1=值 1[，字段名 2=值 2，……]</code></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span>方法一：</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student(id,name)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="number">6</span>,<span class="string">&#x27;qingqing&#x27;</span>);</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>方法二：向指定部分字段添加数据</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> student</span><br><span class="line"><span class="keyword">SET</span> id<span class="operator">=</span><span class="number">6</span>,name<span class="operator">=</span><span class="string">&#x27;qingqing&#x27;</span>; <span class="operator">/</span><span class="operator">/</span>未被添加数据的字段保持为定义时的默认值</span><br></pre></td></tr></table></figure><h1 id="2-使用-UPDATE-语句更新表中数据"><a href="#2-使用-UPDATE-语句更新表中数据" class="headerlink" title="2.使用 UPDATE 语句更新表中数据"></a>2.使用 UPDATE 语句更新表中数据</h1><blockquote><p>语法：<br>UPDATE 表名  SET 字段名 1 = 值 1[，字段名 2 = 值 2，……]  [WHERE 条件表达式]</p><h3 id="（1）UPDATE更新部分数据"><a href="#（1）UPDATE更新部分数据" class="headerlink" title="（1）UPDATE更新部分数据"></a>（1）UPDATE更新部分数据</h3><p>使用WHERE子句来指定更新记录的条件</p><p><code>sql&gt; SELECT*FROM student WHERE id=1;</code><br><img src="https://img-blog.csdnimg.cn/20200323220657122.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="示例图"><br><code>sql&gt; UPDATE sdudentSET name=&#39;nini&#39;,grade=90WHERE id=1;</code><br>注意：<br>如果表中有多条记录满足 WHERE 子句中的条件表达式，则满足条件的记录都会发生更新。<code>sql&gt; UPDATE student SET grade=99WHERE id&lt;10;</code></p></blockquote><h3 id="2-UPDATE更新全部数据"><a href="#2-UPDATE更新全部数据" class="headerlink" title="(2)UPDATE更新全部数据"></a>(2)UPDATE更新全部数据</h3><p>未使用WHERE子句来指定更新记录的条件,即会更新某字段的所有数据。<br>如图：<img src="https://img-blog.csdnimg.cn/20200323222212795.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="示例图"></p><h1 id="3-使用-DELETE-语句来删除表中的记录"><a href="#3-使用-DELETE-语句来删除表中的记录" class="headerlink" title="3.使用 DELETE 语句来删除表中的记录"></a>3.使用 DELETE 语句来删除表中的记录</h1><h3 id="（1）、-DELETE-删除部分数据"><a href="#（1）、-DELETE-删除部分数据" class="headerlink" title="（1）、 DELETE 删除部分数据"></a>（1）、 DELETE 删除部分数据</h3><p>WHERE子句判断条件与UPDATE时用法相似</p><blockquote><p>语法：<br><code>DELETE FROM 表名 [WHERE 条件表达式]</code><br>示例：<br><code>DELETE FROM studentWHERE id&lt;5;</code></p><h3 id="（2）-DELETE-删除全部数据"><a href="#（2）-DELETE-删除全部数据" class="headerlink" title="（2）. DELETE 删除全部数据"></a>（2）. DELETE 删除全部数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> student; </span><br></pre></td></tr></table></figure><p>与UPDATE更新全部数据类似</p></blockquote><h1 id="4-使用TRUNCATE删除表中所有的记录"><a href="#4-使用TRUNCATE删除表中所有的记录" class="headerlink" title="4.使用TRUNCATE删除表中所有的记录"></a>4.使用TRUNCATE删除表中所有的记录</h1><p>语法：<br>TRUNCATE TABLE 表名; </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span>创建表并以id为主键</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tab_truncate(</span><br><span class="line">id <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT, <span class="operator">/</span><span class="operator">/</span>id 字段值设置了 AUTO_INCREMENT，id 字段的默认初始值是 <span class="number">1</span>，在每次添加记录时系统会为该字段 自动添加值，即该字段值会自动加 <span class="number">1</span>。</span><br><span class="line">name <span class="type">VARCHAR</span>(<span class="number">10</span>),</span><br><span class="line">sex <span class="type">CHAR</span>(<span class="number">5</span>)</span><br><span class="line">);</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>添加数据</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_truncate(name,sex)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">&#x27;nini&#x27;</span>,<span class="string">&#x27;男&#x27;</span>),(<span class="string">&#x27;titi&#x27;</span>,<span class="string">&#x27;女&#x27;</span>),(<span class="string">&#x27;mimi&#x27;</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span><span class="operator">*</span><span class="keyword">FROM</span> tab_truncate;<span class="operator">/</span><span class="operator">/</span>查看数据</span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> tab_truncate;<span class="operator">/</span><span class="operator">/</span>使用<span class="keyword">TRUNCATE</span>删除表中所有的记录</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tab_truncate; <span class="operator">/</span><span class="operator">/</span>查看数据</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>添加数据，发现id又是从<span class="number">1</span>开始递增</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_truncate(name,sex)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">&#x27;nini&#x27;</span>,<span class="string">&#x27;男&#x27;</span>),(<span class="string">&#x27;titi&#x27;</span>,<span class="string">&#x27;女&#x27;</span>),(<span class="string">&#x27;mimi&#x27;</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tab_truncate;</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> tab_truncate; </span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>添加数据</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> tab_truncate(name,sex)</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">&#x27;nini&#x27;</span>,<span class="string">&#x27;男&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> tab_truncate;<span class="operator">/</span><span class="operator">/</span>发现id是从删除前最大值<span class="operator">+</span><span class="number">1</span>开始递增</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20200323232713198.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="示例图"><img src="https://img-blog.csdnimg.cn/20200323232737516.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="示例图"></p><blockquote><p>总结TRUNCATE与DELETE的区别：<br>1.使用 TRUNCATE 语句删除表中的数据后，再次向表中添加记录时，自动增加字段的默认初始值重 新由 1 开始，而使用 DELETE 语句删除表中所有记录后，再次向表中添加记录时，自动增加字段的值为删除时该字段的最大值加 1。<br>2.使用 DELETE 语句时，每删除一条记录都会在日志中记录，而使用 TRUNCATE 语句时，不会在 日志中记录删除的内容，因此 TRUNCATE 语句的执行效率比 DELETE 语句高。<br>3.、DELETE 语句后面可以跟 WHERE 子句，通过指定 WHERE 子句中的条件表达式只删除满足条件的部分记录也可以不跟WHERE 子句，而 TRUNCATE 语句只能用于删除表中的所有记录 。<br>4.DELETE 语句是 DML 语句，TRUNCATE 语句通常被认为是 DDL 语句。 </p><p>DELETE与TRUNCATE的比喻：<br>将DELETE与TRUNCATE执行性质看作‘伐树’，DELETE是用斧头将树的枝叶砍掉最后砍倒树干而TRUNCA则是用挖掘机将树连根拔起，砍倒的树仍然可以从树根上生长出幼苗，而后者却只能重新生长出幼苗。</p><p><a href="https://blog.csdn.net/m0_46209092/article/details/105002455">想复习《mySQL数据库与表的基本操作》的小伙伴可以阅读这篇哦!</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mySQL基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hadoop单机模式环境搭建</title>
      <link href="/2020/03/23/%E5%88%9D%E5%AD%A6%E8%80%85%E5%80%BC%E5%BE%97%E6%8B%A5%E6%9C%89Hadoop%E5%8D%95%E6%9C%BA%E6%A8%A1%E5%BC%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2020/03/23/%E5%88%9D%E5%AD%A6%E8%80%85%E5%80%BC%E5%BE%97%E6%8B%A5%E6%9C%89Hadoop%E5%8D%95%E6%9C%BA%E6%A8%A1%E5%BC%8F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="单机模式Hadoop环境搭建"><a href="#单机模式Hadoop环境搭建" class="headerlink" title="单机模式Hadoop环境搭建"></a>单机模式Hadoop环境搭建</h1><h2 id="Hadoop环境搭建流程图"><a href="#Hadoop环境搭建流程图" class="headerlink" title="Hadoop环境搭建流程图"></a><a href="https://www.processon.com/view/link/5e817614e4b0984efb7e3a8c">Hadoop环境搭建流程图</a></h2><h2 id="具体过程"><a href="#具体过程" class="headerlink" title="具体过程"></a>具体过程</h2><p>@[TOC]<br><img src="https://img-blog.csdnimg.cn/20200319211030381.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="过程"></p><h2 id="1-搭建准备工作"><a href="#1-搭建准备工作" class="headerlink" title="1.搭建准备工作"></a>1.搭建准备工作</h2><h3 id="1-关闭防火墙"><a href="#1-关闭防火墙" class="headerlink" title="(1)关闭防火墙"></a>(1)关闭防火墙</h3><p><img src="https://img-blog.csdnimg.cn/20200319184933680.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="sell命令"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld //停止firewalld防火墙</span><br><span class="line">systemctl disable firewalld //关闭防火墙开机自启</span><br><span class="line">systemctl status firewalld //查看firewalld防火墙状态，看是否已关闭</span><br></pre></td></tr></table></figure><h3 id="（2）关闭selinux防火墙"><a href="#（2）关闭selinux防火墙" class="headerlink" title="（2）关闭selinux防火墙"></a>（2）关闭selinux防火墙</h3><p><img src="https://img-blog.csdnimg.cn/20200319185949134.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="sell命令"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/selinux</span><br><span class="line">SELINUX=disabled //将enforcing修改成disabled</span><br></pre></td></tr></table></figure><h3 id="（3）设置主机名"><a href="#（3）设置主机名" class="headerlink" title="（3）设置主机名"></a>（3）设置主机名</h3><p><img src="https://img-blog.csdnimg.cn/2020031919050425.png" alt="sell命令"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl <span class="built_in">set-hostname</span> ky002</span><br><span class="line">hostname //显示主机名</span><br></pre></td></tr></table></figure><h3 id="（4）映射主机名与ip地址"><a href="#（4）映射主机名与ip地址" class="headerlink" title="（4）映射主机名与ip地址"></a>（4）映射主机名与ip地址</h3><p><img src="https://img-blog.csdnimg.cn/20200319191312912.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="sell命令"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ip add //查看ip地址</span><br><span class="line">vi /etc/hosts //映射主机名与ip地址</span><br><span class="line">//在最后一行加入ip地址及主机名</span><br></pre></td></tr></table></figure><h2 id="2-安装JDK"><a href="#2-安装JDK" class="headerlink" title="2.安装JDK"></a>2.安装JDK</h2><h3 id="（1）下载jdk"><a href="#（1）下载jdk" class="headerlink" title="（1）下载jdk"></a>（1）下载jdk</h3><pre><code>在Oracle官网下载JDKlinux1.8以上的版本</code></pre><h3 id="（2）上传JDK至服务器"><a href="#（2）上传JDK至服务器" class="headerlink" title="（2）上传JDK至服务器"></a>（2）上传JDK至服务器</h3><h5 id="a-下载WinSCP软件"><a href="#a-下载WinSCP软件" class="headerlink" title="a.下载WinSCP软件"></a>a.下载WinSCP软件</h5><h5 id="b-建立linux与windows之间文件互传"><a href="#b-建立linux与windows之间文件互传" class="headerlink" title="b.建立linux与windows之间文件互传"></a>b.建立linux与windows之间文件互传</h5><p><img src="https://img-blog.csdnimg.cn/20200319192556166.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="linux连接windows的文件"></p><h5 id="c-上传JDK至Linux"><a href="#c-上传JDK至Linux" class="headerlink" title="c.上传JDK至Linux"></a>c.上传JDK至Linux</h5><pre><code>直接拖拽文件至Linux</code></pre><h3 id="（3）解压JDK并重命名"><a href="#（3）解压JDK并重命名" class="headerlink" title="（3）解压JDK并重命名"></a>（3）解压JDK并重命名</h3><p><img src="https://img-blog.csdnimg.cn/20200319194201411.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="sell命令"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir <span class="literal">-p</span> /export/server //创建一个专用目录</span><br><span class="line"><span class="built_in">cd</span> /export/server</span><br><span class="line">tar <span class="literal">-zxvf</span> /root/jdk<span class="literal">-8u131-liux-x64</span>.tar.gz //解压jdk安装包 Tab键可以补全版本号</span><br><span class="line"><span class="built_in">mv</span> jdk1.<span class="number">8.0</span>_131/ jdk1.<span class="number">8</span> //重命名jdk</span><br></pre></td></tr></table></figure><h3 id="（4）配置JAVA环境变量"><a href="#（4）配置JAVA环境变量" class="headerlink" title="（4）配置JAVA环境变量"></a>（4）配置JAVA环境变量</h3><p><img src="https://img-blog.csdnimg.cn/20200319194910104.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="sell命令"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pwd</span> //显示java安装路径</span><br><span class="line">vi /etc/profile //使用vi编辑器编辑配置文件 按i进入编辑</span><br><span class="line">JAVA_HOME=/export/server/jdk1.<span class="number">8</span> //JAVA_HOME=jdk路径</span><br><span class="line">export PATH=<span class="variable">$PATH:</span><span class="variable">$JAVA_HOME</span>/bin //统一这么写</span><br><span class="line">//按Esc退出编辑 shift+wq保存并退出</span><br><span class="line">source /etc/profile //使设置的环境变量生效</span><br></pre></td></tr></table></figure><h3 id="（5）检查JDK是否安装成功"><a href="#（5）检查JDK是否安装成功" class="headerlink" title="（5）检查JDK是否安装成功"></a>（5）检查JDK是否安装成功</h3><p><img src="https://img-blog.csdnimg.cn/20200319200019569.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="shell命令"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java <span class="literal">-version</span> //若成功则会出现jdk版本号信息</span><br></pre></td></tr></table></figure><h2 id="3-安装Hadoop"><a href="#3-安装Hadoop" class="headerlink" title="3.安装Hadoop"></a>3.安装Hadoop</h2><h3 id="1-上传Hadoop安装包至Linux"><a href="#1-上传Hadoop安装包至Linux" class="headerlink" title="(1)上传Hadoop安装包至Linux"></a>(1)上传Hadoop安装包至Linux</h3><pre><code>    过程与上传jdk类似    a.进入官网下载安装包：[hadoop官网](http://hadoop.apache.org/)    b.使用WinSCP软件上传</code></pre><h3 id="（2）解压Hadoop安装包"><a href="#（2）解压Hadoop安装包" class="headerlink" title="（2）解压Hadoop安装包"></a>（2）解压Hadoop安装包</h3><p><img src="https://img-blog.csdnimg.cn/20200319201141893.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="sell命令"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /export/server //进入专用目录</span><br><span class="line">tar <span class="literal">-zxvf</span> /root/hadoop<span class="literal">-2</span>.<span class="number">7.2</span>.tar.gz</span><br></pre></td></tr></table></figure><h3 id="3-配置Hadoop环境变量"><a href="#3-配置Hadoop环境变量" class="headerlink" title="(3)配置Hadoop环境变量"></a>(3)配置Hadoop环境变量</h3><p><img src="https://img-blog.csdnimg.cn/20200319201455404.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="sell命令"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> hadoop<span class="literal">-2</span>.<span class="number">7.2</span>/</span><br><span class="line"><span class="built_in">pwd</span> //显示hadoop安装路径</span><br><span class="line">vi /etc/profile //按i进入编辑</span><br><span class="line">JAVA_HOME=/export/server/jdk1.<span class="number">8</span> //已有不用写</span><br><span class="line">HADOOP_HOME=/export/server/hadoop<span class="literal">-2</span>.<span class="number">7.2</span> //HADOOP_HOME=hadoop安装路径</span><br><span class="line">PATH=<span class="variable">$PATH:</span><span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$HADOOP_HOME</span>/bin:<span class="variable">$HADOOP_HOME</span>/sbin</span><br><span class="line">export JAVA_HOME HADOOP_HOME PATH</span><br><span class="line">//按Esc退出编辑 shift+wq保存并退出</span><br><span class="line">source /etc/profile //使设置的环境变量生效</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="（4）检查Hadoop是否安装成功"><a href="#（4）检查Hadoop是否安装成功" class="headerlink" title="（4）检查Hadoop是否安装成功"></a>（4）检查Hadoop是否安装成功</h3><p><img src="https://img-blog.csdnimg.cn/20200319203212458.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="sell命令"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop version //若成功则会出现hadoop版本号信息</span><br></pre></td></tr></table></figure><h2 id="4-单机模式运行Hadoop"><a href="#4-单机模式运行Hadoop" class="headerlink" title="4.单机模式运行Hadoop"></a>4.单机模式运行Hadoop</h2><pre><code> Hadoop自带了一些MapReduce示例程序，这些程序代码都在hadoop-example.jar包内，jar包的安装目录在Hadoop下</code></pre><p><img src="https://img-blog.csdnimg.cn/20200319204057797.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="sell命令"></p><h4 id="（1）计算圆周率"><a href="#（1）计算圆周率" class="headerlink" title="（1）计算圆周率"></a>（1）计算圆周率</h4><p><img src="https://img-blog.csdnimg.cn/20200319204507904.png" alt="sell命令"><br>          pi:程序名称<br>          第一个参数：运行多少次map任务<br>          第二个参数：每个map任务投掷多少次<br>          二个参数之积即总投掷数（pi代码就是以投掷来计算值）</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop jar hadoop<span class="literal">-mapreduce-examples-2</span>.<span class="number">7.2</span>.jar pi <span class="number">5</span> <span class="number">5</span> //Tab键可以补全版本号</span><br></pre></td></tr></table></figure><h4 id="2-完成单词统计"><a href="#2-完成单词统计" class="headerlink" title="(2)完成单词统计"></a>(2)完成单词统计</h4><p><img src="https://img-blog.csdnimg.cn/20200319205819157.png" alt="sell命令"><br>数据准备<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /export/server/hadoop<span class="literal">-2</span>.<span class="number">7.2</span> //进入Hadoop安装目录</span><br><span class="line">mkdir wcinput //创建wcinput</span><br><span class="line"><span class="built_in">cd</span> wcinput </span><br><span class="line">vi word.txt  //将单词数据存放到word.txt文件中</span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20200319210447376.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="sell命令"><br>执行程序<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /export/server/hadoop<span class="literal">-2</span>.<span class="number">7.2</span>/</span><br><span class="line">hadoop jar share/hadoop/mapreduce/hadoop<span class="literal">-mapreduce-examples-2</span>.<span class="number">7.2</span>.jar wordcount wcinput wcoutput</span><br></pre></td></tr></table></figure><br> 查看结果<br><img src="https://img-blog.csdnimg.cn/20200319210907375.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="sell命令"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hadoop生态 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mySQL基础之数据库与表的基本操作</title>
      <link href="/2020/03/23/mySQL%E5%88%9D%E5%AD%A6%E8%80%85%E9%9C%80%E8%A6%81%E6%8E%8C%E6%8F%A1%E7%9A%84%E3%80%90%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8E%E8%A1%A8%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E3%80%91/"/>
      <url>/2020/03/23/mySQL%E5%88%9D%E5%AD%A6%E8%80%85%E9%9C%80%E8%A6%81%E6%8E%8C%E6%8F%A1%E7%9A%84%E3%80%90%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8E%E8%A1%A8%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E3%80%91/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本内容会持续更新的哦！<br>注：”字段”=”列”，”记录’’=”行”</p><p>@[TOC]</p><h1 id="一：数据库的基本操作"><a href="#一：数据库的基本操作" class="headerlink" title="一：数据库的基本操作"></a>一：数据库的基本操作</h1><p><img src="https://img-blog.csdnimg.cn/20200325085806129.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="语法图"></p><h1 id="二-数据表的基本操作"><a href="#二-数据表的基本操作" class="headerlink" title="二.数据表的基本操作"></a>二.数据表的基本操作</h1><h3 id="1-创建与查看数据表"><a href="#1-创建与查看数据表" class="headerlink" title="1.创建与查看数据表"></a>1.创建与查看数据表<img src="https://img-blog.csdnimg.cn/20200323204601371.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="语法图"></h3><p><img src="https://img-blog.csdnimg.cn/20200323204720311.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="语法图"></p><h3 id="2-修改数据表"><a href="#2-修改数据表" class="headerlink" title="2.修改数据表"></a>2.修改数据表</h3><p>在 MySQL 中， 修改数据表的操作都是使用 ALTER TABLE 语句。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">全部语法：</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 旧表名 RENAME <span class="keyword">TO</span> 新表名; <span class="operator">/</span><span class="operator">/</span><span class="number">1.</span>修改表名 </span><br><span class="line">rename <span class="keyword">table</span> 旧表名 <span class="keyword">to</span> 新表名; <span class="operator">/</span><span class="operator">/</span><span class="number">1.</span>修改表名</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 change 旧字段名 新字段名 新数据类型; <span class="operator">/</span><span class="operator">/</span><span class="number">2.</span>修改列名</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 MODIFY 字段名  新数据类型; <span class="operator">/</span><span class="operator">/</span><span class="number">3.</span>修改字段的数据类型 </span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ADD</span> 字段名 数据类型  [约束条件][<span class="keyword">FIRST</span><span class="operator">|</span>AFTER 已存在字段名] ; <span class="operator">/</span><span class="operator">/</span><span class="number">4.</span>增加列</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">DROP</span> 字段名; <span class="operator">/</span><span class="operator">/</span><span class="number">5.</span>删除列</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 MODIFY 字段名<span class="number">1</span> 数据类型 <span class="keyword">FIRST</span><span class="operator">|</span>[AFTER 字段名<span class="number">2</span>]; <span class="operator">/</span><span class="operator">/</span><span class="number">6.</span>修改字段的排列位置 </span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> 表名; <span class="operator">/</span><span class="operator">/</span><span class="number">7.</span>删除没有关联关系的数据表 </span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8; <span class="operator">/</span><span class="operator">/</span><span class="number">8.</span>修改表的字符集编码</span><br><span class="line"></span><br></pre></td></tr></table></figure><br>示例：</p><h3 id="1、-修改表名"><a href="#1、-修改表名" class="headerlink" title="1、 修改表名"></a>1、 修改表名</h3><p>两种方式：<img src="https://img-blog.csdnimg.cn/20200324162213270.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="示例图"></p><h3 id="2、-修改字段名"><a href="#2、-修改字段名" class="headerlink" title="2、 修改字段名"></a>2、 修改字段名</h3><p>注意：新数据类型不能为空，即使新字段与旧字段的数据类 型相同，也必须将新数据类型设置为与原来一样的数据类型。<img src="https://img-blog.csdnimg.cn/20200324162039576.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="示例图"></p><h3 id="3-修改字段的数据类型"><a href="#3-修改字段的数据类型" class="headerlink" title="3.修改字段的数据类型 "></a>3.修改字段的数据类型 <img src="https://img-blog.csdnimg.cn/20200324161857774.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="示例图"></h3><h3 id="4、-添加字段"><a href="#4、-添加字段" class="headerlink" title="4、 添加字段"></a>4、 添加字段</h3><p>有两个可选参数:”FIRST”和”AFTER”<br>“FIRST”即：用于将新添加的字段设置 为表的第一个字段<br>“AFTER”即：用于将新添加的字段添加到指定的“已存在字段名”的后 面。 <img src="https://img-blog.csdnimg.cn/20200324163357515.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="示例图"></p><h3 id="5、删除字段"><a href="#5、删除字段" class="headerlink" title="5、删除字段 "></a>5、删除字段 <img src="https://img-blog.csdnimg.cn/20200324170115524.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="示例图"></h3><h3 id="6、修改字段的排列位置"><a href="#6、修改字段的排列位置" class="headerlink" title="6、修改字段的排列位置 "></a>6、修改字段的排列位置 <img src="https://img-blog.csdnimg.cn/20200324171632304.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="示例图"></h3><h3 id="7-删除数据表"><a href="#7-删除数据表" class="headerlink" title="7.删除数据表 "></a>7.删除数据表 <img src="https://img-blog.csdnimg.cn/20200324172509748.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="示例图"></h3><h1 id="三-表的约束"><a href="#三-表的约束" class="headerlink" title="三.表的约束"></a>三.表的约束</h1><p>为了防止数据表中插入错误的数据，在 MySQL 中，定义了一些维护数据库完整性的规则，即表的约束。<img src="https://img-blog.csdnimg.cn/20200324173501582.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt=""></p><h3 id="1-主键约束"><a href="#1-主键约束" class="headerlink" title="1.主键约束"></a>1.主键约束</h3><p>注意：要保证主键字段里的值非空且唯一</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>添加单字段主键</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">id <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">name <span class="type">VARCHAR</span>(<span class="number">20</span>));</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>添加多字段主键</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">id <span class="type">INT</span>(<span class="number">10</span>),</span><br><span class="line">name <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY(id,name)</span><br><span class="line">);</span><br><span class="line"> <span class="operator">/</span><span class="operator">/</span>另一种方法添加主键</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> example01  <span class="keyword">ADD</span> <span class="keyword">primary</span> key(id) ; </span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>去除主键</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> example01  <span class="keyword">DROP</span> <span class="keyword">primary</span> key;  </span><br></pre></td></tr></table></figure><h3 id="2-非空约束"><a href="#2-非空约束" class="headerlink" title="2.非空约束"></a>2.非空约束</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">id <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">name <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-唯一约束"><a href="#3-唯一约束" class="headerlink" title="3.唯一约束"></a>3.唯一约束</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>为字段增加唯一约束方法<span class="number">1</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">id <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">UNIQUE</span>,</span><br><span class="line">name <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line">);</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>为字段增加唯一约束方法<span class="number">2</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> example05  <span class="keyword">ADD</span> <span class="keyword">UNIQUE</span> (stu_id);  </span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>去除唯一约束</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> example05  <span class="keyword">drop</span> index stu_id;  </span><br></pre></td></tr></table></figure><h3 id="4-默认约束"><a href="#4-默认约束" class="headerlink" title="4.默认约束"></a>4.默认约束</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">id <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">name <span class="type">VARCHAR</span>(<span class="number">20</span>) ,</span><br><span class="line">position <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;实习生&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="四-设置表的字段值自动增加"><a href="#四-设置表的字段值自动增加" class="headerlink" title="四.设置表的字段值自动增加"></a>四.设置表的字段值自动增加</h1><p>每次添加记录字段值都会从原来的值上加1,且该字段必须为主键<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">语法：</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名(</span><br><span class="line">id <span class="type">INT</span>(<span class="number">10</span>) <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line">name <span class="type">VARCHAR</span>(<span class="number">20</span>) </span><br><span class="line">);</span><br></pre></td></tr></table></figure><br><img src="https://img-blog.csdnimg.cn/20200324175359193.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="示例图"></p><h1 id="五-索引"><a href="#五-索引" class="headerlink" title="五.索引"></a>五.索引</h1><h3 id="1-索引的概念"><a href="#1-索引的概念" class="headerlink" title="(1)索引的概念"></a>(1)索引的概念</h3><blockquote><p>数据库的索引好比新华字典的音序表，它是对数据库表中一列或多列的值进行排序后的一种结构，其作用就是提高表中数据的查询速度。<br>索引分类：普通索引 唯一性索引 全文索引 单列索引 多列索引 空间索引</p><h3 id="2-创建索引"><a href="#2-创建索引" class="headerlink" title="(2)创建索引"></a>(2)创建索引</h3><h4 id="一、创建表的时候创建索引"><a href="#一、创建表的时候创建索引" class="headerlink" title="一、创建表的时候创建索引"></a>一、创建表的时候创建索引</h4><p><code>语法：CREATE TABLE 表名（字段名 数据类型[完整性约束条件],    字段名 数据类型[完整性约束条件],       ．．．．． 字段名 数据类型    ［UNIQUE|FULLTEXT|SPATIAL］ INDEX|KEY      [索引名] (字段名 1 [(长度)]) [ASC|DESC])       );</code></p><h5 id="1、创建普通索引"><a href="#1、创建普通索引" class="headerlink" title="1、创建普通索引"></a>1、创建普通索引</h5><p> 普通索引是可以由 <strong>KEY</strong> 或 <strong>INDEX</strong> 定义的索引，它是 MySQL 中的基本索引类型，可以创建在任何数据类型中，其值是否唯一和非空由字段本身的约束条件所决定。<img src="https://img-blog.csdnimg.cn/20200324222111992.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="示例图"></p><h5 id="2、创建唯一性索引"><a href="#2、创建唯一性索引" class="headerlink" title="2、创建唯一性索引"></a>2、创建唯一性索引</h5><p> 唯一性索引是由 <strong>UNIQUE</strong> 定义的索引，该索引所在字段的值必须是唯一的。<br> ASC 和 DESC：可选参数，<strong>ASC</strong> 表示升序排列，<strong>DESC</strong> 表示降序排列 <img src="https://img-blog.csdnimg.cn/20200324223014883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="示例图"></p><h5 id="3、创建全文索引"><a href="#3、创建全文索引" class="headerlink" title="3、创建全文索引"></a>3、创建全文索引</h5><p> 全文索引是由 <strong>FULLTEXT</strong> 定义的索引，它<strong>只能创建在</strong> CHAR、VARCHAR 或 TEXT 类型的字段上， 而且，现在只有 <strong>MyISAM 存储引擎</strong>支持全文索引。<img src="https://img-blog.csdnimg.cn/20200324224057799.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="示例图"></p><h5 id="4、创建单列索引"><a href="#4、创建单列索引" class="headerlink" title="4、创建单列索引"></a>4、创建单列索引</h5><p> 即：在表中单个字段上创建索引，以上示例皆为单列索引 </p><h5 id="5、创建多列索引"><a href="#5、创建多列索引" class="headerlink" title="5、创建多列索引"></a>5、创建多列索引</h5><p> 多列索引指的是在表中多个字段上创建索引，只有在查询条件中使用了这些字段中的<strong>第一个字段</strong>时， 该索引才会被使用。<img src="https://img-blog.csdnimg.cn/20200324225159519.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="示例图"></p><h5 id="6、创建空间索引"><a href="#6、创建空间索引" class="headerlink" title="6、创建空间索引"></a>6、创建空间索引</h5><p> 空间索引是由 <strong>SPATIAL</strong> 定义的索引，它只能创建在空间数据类型的字段上。<br> MySQL中的<strong>空间数据类型</strong>有 4 种 ： GEOMETRY、POINT、LINESTRING 和 POLYGON。<br>注意： 创建空间索引的 字段，必须将其声明为 <strong>NOT NULL</strong>，并且空间索引只能在存储引擎为 <strong>MyISAM</strong> 的表中创建。 <img src="https://img-blog.csdnimg.cn/20200324230530248.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="示例图"></p><h4 id="二、使用-CREATE-INDEX-语句在已经存在的表上创建索引"><a href="#二、使用-CREATE-INDEX-语句在已经存在的表上创建索引" class="headerlink" title="二、使用 CREATE INDEX 语句在已经存在的表上创建索引"></a>二、使用 CREATE INDEX 语句在已经存在的表上创建索引</h4><p>语法：<br> CREATE [UNIQUE|FULLTEXT|SPATIAL] INDEX 索引名  ON 表名 (字段名 [(长度)] [ASC|DESC]); </p></blockquote><p><img src="https://img-blog.csdnimg.cn/20200324233956725.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="示例图1"><img src="https://img-blog.csdnimg.cn/20200324234411925.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="示例图2"></p><h4 id="三、使用-ALTER-TABLE-语句在已经存在表上创建索引"><a href="#三、使用-ALTER-TABLE-语句在已经存在表上创建索引" class="headerlink" title="三、使用 ALTER TABLE 语句在已经存在表上创建索引"></a>三、使用 ALTER TABLE 语句在已经存在表上创建索引</h4><blockquote><p>语法：<br>ALTER TABLE 表名 ADD [UNIQUE|FULLTEXT|SPATIAL]  INDEX                      索引名 (字段名 [(长度)] [ASC|DESC])<br><img src="https://img-blog.csdnimg.cn/20200325000527689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="示例图"><img src="https://img-blog.csdnimg.cn/20200325000632770.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="示例图"></p><h3 id="3-删除索引"><a href="#3-删除索引" class="headerlink" title="(3)删除索引"></a>(3)删除索引</h3><h5 id="1、使用-ALTER-TABLE-删除索引"><a href="#1、使用-ALTER-TABLE-删除索引" class="headerlink" title="1、使用 ALTER TABLE 删除索引"></a>1、使用 ALTER TABLE 删除索引</h5><p>语法：<br>ALTER TABLE 表名 DROP INDEX 索引名<img src="https://img-blog.csdnimg.cn/20200325001736248.png" alt="示例图"></p><h5 id="2、使用-DROP-INDEX-删除索引"><a href="#2、使用-DROP-INDEX-删除索引" class="headerlink" title="2、使用 DROP INDEX 删除索引"></a>2、使用 DROP INDEX 删除索引</h5><p>语法：<br>DROP INDEX 索引名 ON 表名; <img src="https://img-blog.csdnimg.cn/20200325001835421.png" alt="示例图"></p></blockquote><p><em>听说看完这篇的同学，都会往下继续学习的哦！</em><br><a href="https://blog.csdn.net/m0_46209092/article/details/105057713">下一篇《mySQL数据操纵》</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mySQL基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java数据采集jsoup</title>
      <link href="/2020/03/23/%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86jsoup/"/>
      <url>/2020/03/23/%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86jsoup/</url>
      
        <content type="html"><![CDATA[<h1 id="数据采集jsoup"><a href="#数据采集jsoup" class="headerlink" title="数据采集jsoup"></a>数据采集jsoup</h1><p>-jsoup介绍：</p><pre><code>1. jsoup 是一款Java 的HTML解析器，可直接解析某个URL地址、HTML文本内容。2. jsoup 的主要功能如下：        - 从一个 URL或字符串中解析 HTML；        - 使用 DOM或 CSS 选择器来查找、取出数据；        - 可操作 HTML 元素、属性、文本；3. jsoup 是基于 MIT协议发布的，可放心使用于商业项目。</code></pre><ul><li><p>jsoup环境配置：</p><ul><li><p>idea jsoup环境配置：</p><ol><li><p>导jar包：</p><ul><li><p>下载jar包:<a href="https://jsoup.org/download">官网</a><img src="https://img-blog.csdnimg.cn/7c62a409c44543988104c909df4de277.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Li756We,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p></li><li><p>导入jar包：<br><img src="https://img-blog.csdnimg.cn/3f56ae4590774737867f9f6fedcf60a2.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Li756We,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p></li></ul></li></ol></li></ul></li></ul><pre><code>    2. 创建Maven项目使用dependency        - 在pom.xml文件中&lt;dependencies&gt; section中插入以下代码：            <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;!-- jsoup HTML parser library @ https:<span class="comment">//jsoup.org/ --&gt;</span></span><br><span class="line">  &lt;groupId&gt;org.jsoup&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;jsoup&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;<span class="number">1.13</span><span class="number">.1</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure></code></pre><ul><li>Jsoup的重要类：<img src="https://img-blog.csdnimg.cn/c12d5978f7c442f9b01a961d34c49ac7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Li756We,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></li></ul><ul><li><p>Jsoup解析网页</p><ol><li><p>连接给定URL载入html文件</p><ul><li>方法1：使用Jsoup.connect(String url )方法从URL加载HTML。</li><li>方法说明：与给定url建立新的连接，用于获取和解析HTML页面。</li><li><p>案例分析：</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Document</span> <span class="variable">doc</span> <span class="operator">=</span> Jsoup.connect(<span class="string">&quot;http://www.hnkjxy.net.cn/&quot;</span>).get();</span><br><span class="line">            System.out.println(doc.text());<span class="comment">//输出网页</span></span><br><span class="line">            System.out.println(doc.title());<span class="comment">//输出标题</span></span><br></pre></td></tr></table></figure>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Document</span> <span class="variable">doc</span> <span class="operator">=</span> Jsoup.connect(<span class="string">&quot;https://www.educoder.net/&quot;</span>)</span><br><span class="line">.data(<span class="string">&quot;query&quot;</span>,<span class="string">&quot;java&quot;</span>)<span class="comment">//请求参数</span></span><br><span class="line">.userAgent(<span class="string">&quot;I&#x27;m jsoup&quot;</span>)<span class="comment">//设置User-Agent</span></span><br><span class="line">.cookie(<span class="string">&quot;auth&quot;</span>,<span class="string">&quot;token&quot;</span>)<span class="comment">//设置cookie</span></span><br><span class="line">.timeout(<span class="number">3000</span>)<span class="comment">//设置连接超时时间</span></span><br><span class="line">.post()<span class="comment">//使用POST方法访问URL</span></span><br><span class="line">.get()<span class="comment">//使用GET方法访问URL</span></span><br></pre></td></tr></table></figure><ul><li>方法2：获取URL解析成HTML，大多数情况下我们使用connect(String)代替。</li><li>方法说明：<img src="https://img-blog.csdnimg.cn/3f0ad9cac6b04abaa56310ddf97aa9aa.png#pic_center" alt="timeoutMilis是设置连接超时，单位为毫秒。"></li></ul></li></ul></li><li><p>本地文件内容解析成html文档</p><ul><li>使用Jsoup.parse()方法从文件加载到HTML</li><li><p>方法介绍：<img src="https://img-blog.csdnimg.cn/3d342fb377b84fddbb0df28c322d33fa.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Li756We,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>注 ：in：文件位置、charsetName：编码格式、baseUri基于的URL地址，以解决相对链接问题。</p></li><li><p>案例分析：</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.爬取网页并保存</span></span><br><span class="line">            <span class="type">Document</span> <span class="variable">doc</span> <span class="operator">=</span> Jsoup.connect(<span class="string">&quot;http://www.hnkjxy.net.cn/&quot;</span>).get();</span><br><span class="line">            <span class="type">FileWriter</span> <span class="variable">fw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileWriter</span>(<span class="string">&quot;官网.html&quot;</span>);</span><br><span class="line">            fw.write(doc.toString());</span><br><span class="line">            fw.close();</span><br><span class="line">            <span class="comment">//2.解析本地文件并保存输出</span></span><br><span class="line">            <span class="type">Document</span> <span class="variable">doc2</span> <span class="operator">=</span> Jsoup.parse(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;D:\\bigDataDevelop\\index.html&quot;</span>),<span class="string">&quot;utf-8&quot;</span>,<span class="string">&quot;http://www.hnkjxy.net.cn/&quot;</span>);</span><br><span class="line">            System.out.println(doc2.text());</span><br><span class="line">            System.out.println(doc2.title());</span><br></pre></td></tr></table></figure></li></ul></li><li><p>给定字符串解析成html文档</p><ul><li>使用Jsoup.parse()方法从字符串加载HTML。</li><li><p>方法介绍：<img src="https://img-blog.csdnimg.cn/7b96dd90beec4591835c82b868d01aeb.png#pic_center" alt="在这里插入图片描述"><br>这方法能够将输入的HTML解析为一个新的文档 (Document），参数 baseUri 是用来将相对 URL 转成绝对URL，并指定从哪个网站获取文档。</p></li><li><p>案例分析：</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Document</span> <span class="variable">doc</span> <span class="operator">=</span> Jsoup.parse(<span class="string">&quot;&lt;html&gt;&lt;head&gt;&lt;title&gt;First parse&lt;/title&gt;&quot;</span></span><br><span class="line">                    + <span class="string">&quot;&lt;/head&gt;body&gt;&lt;p&gt;Parsed HTML into a doc.&lt;/p&gt;&lt;/body&gt;&quot;</span></span><br><span class="line">                    + <span class="string">&quot;&lt;/html&gt;\r\n&quot;</span>);</span><br><span class="line">            System.out.println(doc.toString());</span><br><span class="line">            System.out.println(doc.title());</span><br></pre></td></tr></table></figure></li></ul></li><li><p>小结：jsoup 是一款Java 的HTML解析器。可以从URL、本地文件和字符串中解析HTML。<img src="https://img-blog.csdnimg.cn/2a29942be6e64386b83c1bc0d5e6c68b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Li756We,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p></li></ol></li><li><p>DOM方法查找元素</p><ul><li><p>查找元素</p><ol><li>基本方法介绍：<img src="https://img-blog.csdnimg.cn/9e719feb386e4d1482e50795ef282fba.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Li756We,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></li><li><p>案例分析：</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//        有本地文件example.com.html，解析文件，查找html元素。</span></span><br><span class="line"><span class="comment">//        提取id=one的元素？</span></span><br><span class="line"><span class="comment">//        提取class=lianjie的元素？</span></span><br><span class="line"><span class="comment">//        提取标签为a的元素？</span></span><br><span class="line"><span class="comment">//        提取标签为div的元素？</span></span><br><span class="line"><span class="comment">//        提取属性为href的元素</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Document</span> <span class="variable">doc</span> <span class="operator">=</span> Jsoup.parse(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;example.com.html&quot;</span>),<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">            <span class="type">Element</span> <span class="variable">id_one</span> <span class="operator">=</span> doc.getElementById(<span class="string">&quot;one&quot;</span>);</span><br><span class="line">            <span class="type">Elements</span> <span class="variable">class_lianjie</span> <span class="operator">=</span> doc.getElementsByClass(<span class="string">&quot;lianjie&quot;</span>);</span><br><span class="line">            <span class="type">Elements</span> <span class="variable">tag_a</span> <span class="operator">=</span> doc.getElementsByTag(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">            <span class="type">Elements</span> <span class="variable">tag_div</span> <span class="operator">=</span> doc.getElementsByTag(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">            <span class="type">Elements</span> <span class="variable">attr_href</span> <span class="operator">=</span> doc.getElementsByAttribute(<span class="string">&quot;href&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;id_one:&quot;</span>+id_one+<span class="string">&quot;\ntag_a:&quot;</span>+tag_a+<span class="string">&quot;\nclass_lianjie:&quot;</span>+class_lianjie+<span class="string">&quot;\ntag_div:&quot;</span>+tag_div+<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;attr_href:&quot;</span>+attr_href);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;报错！&quot;</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li><li><p>同级元素方法介绍：<img src="https://img-blog.csdnimg.cn/e4fe278cff95465db7e8ce540868b813.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Li756We,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p></li><li><p>案例分析：</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//        获取同级元素。</span></span><br><span class="line"><span class="comment">//        获取第一个className等于“lianjie”的元素的同级元素？</span></span><br><span class="line"><span class="comment">//        获取第二个className等于“lianjie”的元素的前一个同级元素？</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Document</span> <span class="variable">doc</span> <span class="operator">=</span> Jsoup.parse(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;example.com.html&quot;</span>),<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">            <span class="type">Elements</span> <span class="variable">siblingElements</span> <span class="operator">=</span> doc.getElementsByClass(<span class="string">&quot;lianjie&quot;</span>).get(<span class="number">0</span>).siblingElements();</span><br><span class="line">            System.out.println(<span class="string">&quot;siblingElements:&quot;</span>+siblingElements);</span><br><span class="line">            <span class="type">Element</span> <span class="variable">previousElementSibling</span> <span class="operator">=</span> doc.getElementsByClass(<span class="string">&quot;lianjie&quot;</span>).get(<span class="number">1</span>).previousElementSibling();</span><br><span class="line">            System.out.println(<span class="string">&quot;previousElementSibling:&quot;</span>+previousElementSibling);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;报错！&quot;</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li><li><p>Graph方法介绍：<img src="https://img-blog.csdnimg.cn/76c72c7180a54221904087271857676f.png#pic_center" alt="在这里插入图片描述"></p></li><li><p>案例分析：</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//        按图查找元素</span></span><br><span class="line"><span class="comment">//        获取id为“two” 的div标签的子标签。</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">Document</span> <span class="variable">doc</span> <span class="operator">=</span> Jsoup.parse(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;example.com.html&quot;</span>),<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">            <span class="type">Elements</span> <span class="variable">id_two</span> <span class="operator">=</span> doc.getElementById(<span class="string">&quot;two&quot;</span>).getElementsByTag(<span class="string">&quot;div&quot;</span>);</span><br><span class="line">            <span class="type">Elements</span> <span class="variable">div</span> <span class="operator">=</span> id_two.get(<span class="number">0</span>).children();</span><br><span class="line">            System.out.println(div);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;报错！&quot;</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ol></li><li><p>查找元素数据</p><ol><li>方法介绍：<img src="https://img-blog.csdnimg.cn/7d15507ecdbc49e395d923c8372e03c7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Li756We,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></li><li>方法介绍：<br><img src="https://img-blog.csdnimg.cn/bfa2d6e888494b6b841bf0151bcaf14b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Li756We,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/f0324bd590d144268ad0add929379447.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Li756We,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></li></ol></li><li>操作HTML和文本：<img src="https://img-blog.csdnimg.cn/5b44905ef70b406790afae5b6475261f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5Li756We,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></li></ul></li><li><p>Slector选择器方法查找元素</p><p>  jsoup elements对象支持类似于CSS (或jquery的选择器语法，来实现非常强大和灵活的查找功能。可以使用Element.select(String selector)和 Elements.select(String selector)方法实现</p><ul><li><p>选择器基础1</p><p>  tagname: 通过标签查找元素，比如：a<br>   ns|tag: 通过标签在命名空间r查找元素，比如：可以用 fb|name 语法来查找 <fb:name> 元素</p><h1 id="id-通过ID查找元素，比如：-logo"><a href="#id-通过ID查找元素，比如：-logo" class="headerlink" title="id: 通过ID查找元素，比如：#logo"></a>id: 通过ID查找元素，比如：#logo</h1><p>   .class: 通过class名称查找元素，比如：.masthead</p></li></ul></li></ul><pre><code>     [attribute]: 利用属性查找元素，比如：[href]     [^attr]: 利用属性名前缀来查找元素，比如：可以用[^data-] 来查找带有HTML5 Dataset属性的元素     [attr=value]: 利用属性值来查找元素，比如：[width=500]     [attr^=value], [attr$=value], [attr*=value]: 利用匹配属性值开头、结尾或包含属性值来查找元素，比如：[href*=/path/]     [attr~=regex]: 利用属性值匹配正则表达式来查找元素，比如： img[src~=(?i)\.(png|jpe?g)]     *: 这个符号将匹配所有元素- 选择器组合使用     el#id: 元素+ID，比如： div#logo     el.class: 元素+class，比如： div.masthead     el[attr]: 元素+class，比如： a[href]     任意组合，比如：a[href].highlight     ancestor child: 查找某个元素下子元素，比如：可以用.body p 查找在&quot;body&quot;元素下的所有 p元素     parent &gt; child: 查找某个父元素下的直接子元素，比如：可以用div.content &gt; p 查找 p 元素，也可以用body &gt; * 查找body标签下所有直接子元素     siblingA + siblingB: 查找在A元素之前第一个同级元素B，比如：div.head + div     siblingA ~ siblingX: 查找A元素之前的同级X元素，比如：h1 ~ p     el, el, el:多个选择器组合，查找匹配任一选择器的唯一元素，例如：div.masthead, div.logo- 伪选择器selectors    :lt(n): 查找哪些元素的同级索引值（它的位置在DOM树中是相对于它的父节点）小于n，比如：td:lt(3) 表示小于三列的元素    :gt(n):查找哪些元素的同级索引值大于n，比如： div p:gt(2)表示哪些div中有包含2个以上的p元素    :eq(n): 查找哪些元素的同级索引值与n相等，比如：form input:eq(1)表示包含一个input标签的Form元素    :has(seletor): 查找匹配选择器包含元素的元素，比如：div:has(p)表示哪些div包含了p元素    :not(selector): 查找与选择器不匹配的元素，比如： div:not(.logo) 表示不包含 class=&quot;logo&quot; 元素的所有 div 列表    :contains(text): 查找包含给定文本的元素，搜索不区分大不写，比如： p:contains(jsoup)    :containsOwn(text): 查找直接包含给定文本的元素    :matches(regex): 查找哪些元素的文本匹配指定的正则表达式，比如：div:matches((?i)login)    :matchesOwn(regex): 查找自身包含文本匹配指定正则表达式的元素    注意：上述伪选择器索引是从0开始的.</code></pre>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hadoop生态 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java集合类</title>
      <link href="/2020/03/23/java%E9%9B%86%E5%90%88%E7%B1%BB%EF%BC%88%E6%96%B0%E6%89%8B%E4%B9%9F%E8%83%BD%E6%8E%8C%E6%8F%A1%EF%BC%89/"/>
      <url>/2020/03/23/java%E9%9B%86%E5%90%88%E7%B1%BB%EF%BC%88%E6%96%B0%E6%89%8B%E4%B9%9F%E8%83%BD%E6%8E%8C%E6%8F%A1%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>@[TOC]</p><h1 id="1-集合概述"><a href="#1-集合概述" class="headerlink" title="1.集合概述"></a>1.集合概述</h1><h3 id="（1）集合："><a href="#（1）集合：" class="headerlink" title="（1）集合："></a>（1）集合：</h3><p> 为了在程序中可以保存数目不确定的对象，JDK中在<strong>java.util包中</strong>提供了一系列<strong>可以存储任意类型的对象且长度可变</strong>的特殊类，在JAVA中这些类即集合类。</p><h3 id="（2）集合分类"><a href="#（2）集合分类" class="headerlink" title="（2）集合分类:"></a>（2）集合分类:</h3><p>   集合按其存储结构可以分为两大类，即单列集合Collection和双列集合Map!<img src="https://img-blog.csdnimg.cn/20200322210610724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="结构图"></p><h1 id="2-Collection接口"><a href="#2-Collection接口" class="headerlink" title="2.Collection接口"></a>2.Collection接口</h1><p>Collection是所有单列集合的父接口，因此在Collection中定义了单列集合（List和Set)通用的方法，即：<img src="https://img-blog.csdnimg.cn/20200322211611485.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="方法图"></p><blockquote><p>注：此处列出的方法仅为部分，初学者可以查阅API文档学习更多。</p><h1 id="3-List接口"><a href="#3-List接口" class="headerlink" title="3.List接口"></a>3.List接口</h1><h3 id="1-List接口简介"><a href="#1-List接口简介" class="headerlink" title="(1)List接口简介"></a>(1)List接口简介</h3><p>List接口继承自Collection接口（单列），实现了List接口的对象即List集合。<br>List集合的特点：元素以线性方式进行存储且通过索引来访问指定元素 元素可重复 元素有序即元素的存入与取出的顺序一致。<br>List的方法：List除了继承自Collection接口的方法，还根据元素索引增加了一些特有的方法 即：<img src="https://img-blog.csdnimg.cn/20200322213920738.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="List特有方法"></p><h3 id="（2）ArrayList集合"><a href="#（2）ArrayList集合" class="headerlink" title="（2）ArrayList集合"></a>（2）ArrayList集合</h3><p>  ArrayList是List接口的一个实现类，可看作一个长度可变的数组，因其内部封装了一个长度可变的数组对象，当元素超过数组长度时，ArrayList会在内存中分配一个更大的可变数组来存储元素。<br>  ArrayList方法大部分继承自Collection和List。<br>当通过索引对集合进行操作时，特别注意集合与数组一样，索引的取值范围是从0开始的，最后一个索引是size-1</p></blockquote><p>ArrayList优点：查找元素很方便<br>ArrayList缺点：对元素进行增删改操作效率比较低</p><blockquote><p>采用索引的方式来访问元素，使得ArrayList集合查找元素很方便<br>ArrayList集合的底层是使用数组来存储元素的，因此在对集合进行修改操作时，集合会创建一个新的数组。具体如图：<br><img src="https://img-blog.csdnimg.cn/20200322221129484.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="示例图"></p></blockquote><h3 id="（3）LinkedList集合"><a href="#（3）LinkedList集合" class="headerlink" title="（3）LinkedList集合"></a>（3）LinkedList集合</h3><blockquote><p>为克服ArrayList集合对集合元素进行修改效率低的局限性，List接口中存在另一个实现类LinkedList。<br>该集合以双向环链表方式存储元素，当增加一个新元素时，只需要修改元素之间的这种引用关系即可，因此LinkedList集合对集合元素进行增删改操作效率高。<br>如图：<img src="https://img-blog.csdnimg.cn/20200322224123676.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="示例图"><img src="https://img-blog.csdnimg.cn/20200322224002995.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="示例图"></p></blockquote><p>对于元素的增删操作，LinkedList集合定义了一些特有的方法<img src="https://img-blog.csdnimg.cn/20200322224504425.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="方法图"></p><h3 id="（4）Iterater接口"><a href="#（4）Iterater接口" class="headerlink" title="（4）Iterater接口"></a>（4）Iterater接口</h3><p>Iterator接口是Java集合中主要用于遍历（迭代访问）Collection中的元素的接口，Iterator对象被称为迭代器。<br>工作原理:集合调用iterator()方法获得迭代器对象，随后使用hasNext（）方法判断集合中是否存在下一个元素，若存在则调用next()方法获取元素，否则停止遍历元素。<img src="https://img-blog.csdnimg.cn/20200322235137189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="原理图"><br>在Iterator遍历内部对数组元素进行更改:<br>①集合对象.remove(变量名); break;<br>②Iterator游标名.remove();</p><h3 id="（5）foreach循环"><a href="#（5）foreach循环" class="headerlink" title="（5）foreach循环"></a>（5）foreach循环</h3><p>foreach循环(增强for循环)：语法非常简洁，每次循环时，foreach中都通过变量将当前循环的元素记住，从而将集合中的元素分别打印出来。因此foreach循环不需要获取容器的长度，也不需要根据索引访问容器中的元素。<br>语法:<code>for(容器中元素类型 临时变量：容器变量）&#123;执行语句&#125;</code><br>foreach循环不能对其中元素进行修改，for循环通过索引方式可以。</p><h1 id="4-Set接口"><a href="#4-Set接口" class="headerlink" title="4.Set接口"></a>4.Set接口</h1><h3 id="（1）Set接口简介"><a href="#（1）Set接口简介" class="headerlink" title="（1）Set接口简介"></a>（1）Set接口简介</h3><p>与List接口一样，Set接口也继承Collection接口的方法，<br>与List接口不同，Set接口中元素无序且不重复。<br>Set接口主要实现类：HashSet和TreeSet。<br>HashSet根据对象的哈希值来确定元素在集合中的存储位置，因此具有良好的存取和查找性能。TreeSet则是以二叉树的方式来存储元素，它可以实现对集合中的元素进行排序。</p><h3 id="（2）HashSet集合"><a href="#（2）HashSet集合" class="headerlink" title="（2）HashSet集合"></a>（2）HashSet集合</h3><p>工作原理：<br><img src="https://img-blog.csdnimg.cn/20200323072035945.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="!\[工作原理图\](https://img-blog.csdnimg.cn/20200323005949565.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_"></p><blockquote><p>实际开发中为保证HashSet正常工作，都需要重写Object类中的hashCode()和equals()方法<br>示例如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> homework_set;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>&#123;<span class="comment">//自定义Person类</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> String card;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name,String card)</span>&#123;<span class="comment">//构造方法调用私有属性</span></span><br><span class="line"><span class="built_in">this</span>.name=name;</span><br><span class="line"><span class="built_in">this</span>.card=card;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//重写hashCode方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">int</span> <span class="title function_">hashCode</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="keyword">return</span> name.hashCode();<span class="comment">//以用户名作为判断重复依据</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//重写equals方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(Object obj)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">this</span>==obj)&#123;<span class="comment">//判断是否同一个对象</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">//如果是同一个对象，直接返回true</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(obj==<span class="literal">null</span>)&#123;<span class="comment">//判断这个对象是否为空</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//如果对象是空的，直接返回false</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(getClass()!=obj.getClass())&#123;<span class="comment">//判断这个对象是否是Person类型</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//如果不是，直接返回false</span></span><br><span class="line">&#125;</span><br><span class="line">Person other=(Person)obj;<span class="comment">//将对象强转为Person类型</span></span><br><span class="line"><span class="keyword">if</span>(name==<span class="literal">null</span>)&#123;<span class="comment">//判断集合中用户名是否为空</span></span><br><span class="line"><span class="keyword">if</span>(other.name!=<span class="literal">null</span>)&#123;<span class="comment">//判断对象中的用户名是否为空</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//集合中用户名为空且对象中用户名不为空，则返回false</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(!name.equals(other.name))&#123;<span class="comment">//判断用户名是否相同</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//如果不同，返回false</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//重写toString方法</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="keyword">return</span> name+<span class="string">&quot;:&quot;</span>+card;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">set</span>&#123; </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;<span class="comment">//创建集合和对象</span></span><br><span class="line">HashSet a=<span class="keyword">new</span> <span class="title class_">HashSet</span>();</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">Person person1=<span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;李先生&quot;</span>,<span class="string">&quot;220186&quot;</span>);</span><br><span class="line">Person person2=<span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;马先生&quot;</span>,<span class="string">&quot;220181&quot;</span>);</span><br><span class="line">Person person3=<span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;李先生&quot;</span>,<span class="string">&quot;220187&quot;</span>);</span><br><span class="line">Person person4=<span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;王小姐&quot;</span>,<span class="string">&quot;220193&quot;</span>);</span><br><span class="line"><span class="comment">//向集合添加元素</span></span><br><span class="line">a.add(person1);</span><br><span class="line">a.add(person2);</span><br><span class="line">a.add(person3);</span><br><span class="line">a.add(person4);</span><br><span class="line"><span class="keyword">for</span>(Object b:a)&#123;<span class="comment">//遍历输出集合元素</span></span><br><span class="line">System.out.println(b);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="5-Map接口"><a href="#5-Map接口" class="headerlink" title="5.Map接口"></a>5.Map接口</h1><h3 id="（1）Map接口简介"><a href="#（1）Map接口简介" class="headerlink" title="（1）Map接口简介"></a>（1）Map接口简介</h3><p>Map接口是一种双列集合，具有映射关系，即：每一个元素都包含一个键对象Key和值对象Value，访问元素时只需指定Key就能找到对应的Value.<br>以下为map接口中常用方法：<img src="https://img-blog.csdnimg.cn/20200323075113825.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2MjA5MDky,size_16,color_FFFFFF,t_70" alt="!\[方法图!\[\](https://img-blog.csdnimg.cn/20200323075014567.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ub"></p><h3 id="（2）HashMap集合"><a href="#（2）HashMap集合" class="headerlink" title="（2）HashMap集合"></a>（2）HashMap集合</h3><p>HashMap集合是Map接口的一个实现类，用于存储键值映射关系，且保证不出现重复的键。</p><p>遍历map集合的三种方法：<br>方法一：<br>通过KeySet()方法获取Map中所有键的Set集合然后遍历所有键，再调用get()方法获取对应值</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> course;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">map2</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">Map map=<span class="keyword">new</span> <span class="title class_">HashMap</span>();<span class="comment">//创建HashMap</span></span><br><span class="line"><span class="comment">//添加对象，键值对，键Integer类型，值String类型</span></span><br><span class="line">map.put(<span class="number">4</span>,<span class="string">&quot;four&quot;</span>);</span><br><span class="line">map.put(<span class="number">9</span>,<span class="string">&quot;nine&quot;</span>);</span><br><span class="line">map.put(<span class="number">8</span>,<span class="string">&quot;eight&quot;</span>);</span><br><span class="line">map.put(<span class="number">9</span>, <span class="string">&quot;nine1&quot;</span>);<span class="comment">//键相同，值覆盖</span></span><br><span class="line"><span class="comment">//显示集合</span></span><br><span class="line">System.out.println(map);</span><br><span class="line"><span class="comment">//方法一：</span></span><br><span class="line">Set keySet=map.keySet();<span class="comment">//去重 无序</span></span><br><span class="line"><span class="type">Iterator</span> <span class="variable">it</span> <span class="operator">=</span> keySet.iterator();<span class="comment">//获取迭代器对象</span></span><br><span class="line"><span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">Object key=it.next();</span><br><span class="line">Object value= map.get(key);</span><br><span class="line">System.out.println(key+<span class="string">&quot;:&quot;</span>+value);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法二：</p><blockquote><p>先获取集合中所有的映射关系，然后从映射关系中取出键和值</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> course;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">map3</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//方法二：</span></span><br><span class="line">Map map=<span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line"><span class="comment">//添加对象，键值对，键Integer类型，值String类型</span></span><br><span class="line">map.put(<span class="number">4</span>,<span class="string">&quot;four&quot;</span>);</span><br><span class="line">map.put(<span class="number">9</span>,<span class="string">&quot;nine&quot;</span>);</span><br><span class="line">map.put(<span class="number">8</span>,<span class="string">&quot;eight&quot;</span>);</span><br><span class="line">Set entrySet=map.entrySet(); <span class="comment">//调用Map对象的entrySet()方法获得存储在Map中所有映射的Set集合</span></span><br><span class="line">Iterator it=entrySet.iterator(); <span class="comment">//获取迭代器对象</span></span><br><span class="line"><span class="keyword">while</span>(it.hasNext())&#123; <span class="comment">//迭代Set集合，获得每个映射对象</span></span><br><span class="line">Map.Entry entry=(Map.Entry)(it.next());  <span class="comment">//Set集合中存放的Map.Entry对象，代表Map中的一个键值对</span></span><br><span class="line">Object Key=entry.getKey(); <span class="comment">//调用getKey()方法获取Entry中的键</span></span><br><span class="line">Object Value=entry.getValue(); <span class="comment">//调用getValue()方法获取Entry中的值</span></span><br><span class="line">System.out.println(Key+<span class="string">&quot;:&quot;</span>+Value);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法三：</p><blockquote><p>通过Map中values()方法，直接获取Map中存储所有值的Collection集合</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> course;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">map4</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">Map map=<span class="keyword">new</span> <span class="title class_">HashMap</span>();</span><br><span class="line">map.put(<span class="number">4</span>,<span class="string">&quot;four&quot;</span>);</span><br><span class="line">map.put(<span class="number">9</span>,<span class="string">&quot;nine&quot;</span>);</span><br><span class="line">map.put(<span class="number">8</span>,<span class="string">&quot;eight&quot;</span>);</span><br><span class="line">Collection values=map.values();</span><br><span class="line">Iterator it=values.iterator();</span><br><span class="line"><span class="keyword">for</span>(Object value:values)&#123;</span><br><span class="line">System.out.println(value);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>LinkedHashMap:<br>LinkedHashMap是HashMap的子类，与LinkedList一样，内部以双向链表来维护内部元素的关系，使Map元素迭代的顺序与存入的顺序一致。<br>示例：</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> course;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">map5</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">HashMap map=<span class="keyword">new</span> <span class="title class_">LinkedHashMap</span>();</span><br><span class="line">map.put(<span class="number">4</span>,<span class="string">&quot;four&quot;</span>);</span><br><span class="line">map.put(<span class="number">9</span>,<span class="string">&quot;nine&quot;</span>);</span><br><span class="line">map.put(<span class="number">8</span>,<span class="string">&quot;eight&quot;</span>);</span><br><span class="line">Set keySet=map.keySet();<span class="comment">//去重 无序</span></span><br><span class="line"><span class="type">Iterator</span> <span class="variable">it</span> <span class="operator">=</span> keySet.iterator();<span class="comment">//获取迭代器对象</span></span><br><span class="line"><span class="keyword">while</span>(it.hasNext())&#123;</span><br><span class="line">Object key=it.next();</span><br><span class="line">Object value= map.get(key);</span><br><span class="line">System.out.println(key+<span class="string">&quot;:&quot;</span>+value);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="（3）Properties集合"><a href="#（3）Properties集合" class="headerlink" title="（3）Properties集合"></a>（3）Properties集合</h3><blockquote><p>Map接口中还有一个实现类Hashtable,它与HashMap十分相似，区别在于Hashtable是线程安全的，但Hashtable存取元素时速度很慢，目前基本上被HashMap类取代，但Hashtable之类Properties，在实际应用中非常重要。</p></blockquote><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> course;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Properties1</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="type">Properties</span> <span class="variable">p</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Properties</span>(); <span class="comment">//创建Properties集合</span></span><br><span class="line">p.setProperty(<span class="string">&quot;Backgroup-color&quot;</span>,<span class="string">&quot;green&quot;</span>); <span class="comment">//存储键值对（如：put（）)</span></span><br><span class="line">p.setProperty(<span class="string">&quot;Font-size&quot;</span>,<span class="string">&quot;14px&quot;</span>);</span><br><span class="line">p.setProperty(<span class="string">&quot;Language&quot;</span>,<span class="string">&quot;English&quot;</span>);</span><br><span class="line"><span class="comment">//获取集合中所有的键</span></span><br><span class="line">Enumeration names=p.propertyNames(); <span class="comment">//Enumeration(相当于iterator迭代器)</span></span><br><span class="line"><span class="comment">//遍历键的集合，获取每一个键</span></span><br><span class="line"><span class="keyword">while</span>(names.hasMoreElements())&#123; <span class="comment">//hasMoreElements()相当于hasNext()</span></span><br><span class="line">String Key=(String)names.nextElement(); <span class="comment">//获取键 nextElement()相当于next()</span></span><br><span class="line">String value=p.getProperty(Key);  <span class="comment">//获取值</span></span><br><span class="line">System.out.println(Key+<span class="string">&quot;=&quot;</span>+value);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-泛型—-JDK5-0新特性"><a href="#6-泛型—-JDK5-0新特性" class="headerlink" title="6.泛型—-JDK5.0新特性"></a>6.泛型—-JDK5.0新特性</h1><blockquote><p>当将任意类型的对象存入集合后，集合便会”忘记“对象的类型，因此取出元素时如果进行强制类型转换就会出错。为解决此问题java引入泛型概念，即：限定集合元素类型。在定义集合类时，使用”&lt;参数类型&gt;“的方式指定该类方法操作的数据类型。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LinkedList&lt;参数类型&gt; List = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;参数类型&gt;();</span><br></pre></td></tr></table></figure><blockquote><p>注意在使用泛型后，每次遍历集合元素时，可以指定该元素类型为”参数类型”</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java入门 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
